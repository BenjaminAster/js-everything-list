[
	[
		"AbortController"
	],
	[
		"AbortController",
		"prototype",
		"signal"
	],
	[
		"AbortController",
		"prototype",
		"abort()"
	],
	[
		"AbortController",
		"prototype"
	],
	[
		"AbortSignal"
	],
	[
		"AbortSignal",
		"prototype",
		"throwIfAborted()"
	],
	[
		"AbortSignal",
		"prototype",
		"reason"
	],
	[
		"AbortSignal",
		"prototype",
		"onabort"
	],
	[
		"AbortSignal",
		"prototype",
		"aborted"
	],
	[
		"AbortSignal",
		"prototype"
	],
	[
		"AbortSignal",
		"timeout()"
	],
	[
		"AbortSignal",
		"any()"
	],
	[
		"AbortSignal",
		"abort()"
	],
	[
		"AbsoluteOrientationSensor"
	],
	[
		"AbsoluteOrientationSensor",
		"prototype"
	],
	[
		"AbstractRange"
	],
	[
		"AbstractRange",
		"prototype",
		"startOffset"
	],
	[
		"AbstractRange",
		"prototype",
		"startContainer"
	],
	[
		"AbstractRange",
		"prototype",
		"endOffset"
	],
	[
		"AbstractRange",
		"prototype",
		"endContainer"
	],
	[
		"AbstractRange",
		"prototype",
		"collapsed"
	],
	[
		"AbstractRange",
		"prototype"
	],
	[
		"Accelerometer"
	],
	[
		"Accelerometer",
		"prototype",
		"z"
	],
	[
		"Accelerometer",
		"prototype",
		"y"
	],
	[
		"Accelerometer",
		"prototype",
		"x"
	],
	[
		"Accelerometer",
		"prototype"
	],
	[
		"AmbientLightSensor"
	],
	[
		"AmbientLightSensor",
		"prototype",
		"illuminance"
	],
	[
		"AmbientLightSensor",
		"prototype"
	],
	[
		"AnalyserNode"
	],
	[
		"AnalyserNode",
		"prototype",
		"smoothingTimeConstant"
	],
	[
		"AnalyserNode",
		"prototype",
		"minDecibels"
	],
	[
		"AnalyserNode",
		"prototype",
		"maxDecibels"
	],
	[
		"AnalyserNode",
		"prototype",
		"getFloatTimeDomainData()"
	],
	[
		"AnalyserNode",
		"prototype",
		"getFloatFrequencyData()"
	],
	[
		"AnalyserNode",
		"prototype",
		"getByteTimeDomainData()"
	],
	[
		"AnalyserNode",
		"prototype",
		"getByteFrequencyData()"
	],
	[
		"AnalyserNode",
		"prototype",
		"frequencyBinCount"
	],
	[
		"AnalyserNode",
		"prototype",
		"fftSize"
	],
	[
		"AnalyserNode",
		"prototype"
	],
	[
		"ANGLE_instanced_arrays"
	],
	[
		"ANGLE_instanced_arrays",
		"prototype",
		"vertexAttribDivisorANGLE()"
	],
	[
		"ANGLE_instanced_arrays",
		"prototype",
		"drawElementsInstancedANGLE()"
	],
	[
		"ANGLE_instanced_arrays",
		"prototype",
		"drawArraysInstancedANGLE()"
	],
	[
		"ANGLE_instanced_arrays",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE"
	],
	[
		"ANGLE_instanced_arrays",
		"prototype"
	],
	[
		"ANGLE_instanced_arrays",
		"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE"
	],
	[
		"Animation"
	],
	[
		"Animation",
		"prototype",
		"updatePlaybackRate()"
	],
	[
		"Animation",
		"prototype",
		"timeline"
	],
	[
		"Animation",
		"prototype",
		"startTime"
	],
	[
		"Animation",
		"prototype",
		"reverse()"
	],
	[
		"Animation",
		"prototype",
		"replaceState"
	],
	[
		"Animation",
		"prototype",
		"ready"
	],
	[
		"Animation",
		"prototype",
		"progress"
	],
	[
		"Animation",
		"prototype",
		"playbackRate"
	],
	[
		"Animation",
		"prototype",
		"playState"
	],
	[
		"Animation",
		"prototype",
		"play()"
	],
	[
		"Animation",
		"prototype",
		"persist()"
	],
	[
		"Animation",
		"prototype",
		"pending"
	],
	[
		"Animation",
		"prototype",
		"pause()"
	],
	[
		"Animation",
		"prototype",
		"onremove"
	],
	[
		"Animation",
		"prototype",
		"onfinish"
	],
	[
		"Animation",
		"prototype",
		"oncancel"
	],
	[
		"Animation",
		"prototype",
		"id"
	],
	[
		"Animation",
		"prototype",
		"finished"
	],
	[
		"Animation",
		"prototype",
		"finish()"
	],
	[
		"Animation",
		"prototype",
		"effect"
	],
	[
		"Animation",
		"prototype",
		"currentTime"
	],
	[
		"Animation",
		"prototype",
		"commitStyles()"
	],
	[
		"Animation",
		"prototype",
		"cancel()"
	],
	[
		"Animation",
		"prototype"
	],
	[
		"AnimationEffect"
	],
	[
		"AnimationEffect",
		"prototype",
		"updateTiming()"
	],
	[
		"AnimationEffect",
		"prototype",
		"replace()"
	],
	[
		"AnimationEffect",
		"prototype",
		"remove()"
	],
	[
		"AnimationEffect",
		"prototype",
		"previousSibling"
	],
	[
		"AnimationEffect",
		"prototype",
		"parent"
	],
	[
		"AnimationEffect",
		"prototype",
		"nextSibling"
	],
	[
		"AnimationEffect",
		"prototype",
		"getTiming()"
	],
	[
		"AnimationEffect",
		"prototype",
		"getComputedTiming()"
	],
	[
		"AnimationEffect",
		"prototype",
		"before()"
	],
	[
		"AnimationEffect",
		"prototype",
		"after()"
	],
	[
		"AnimationEffect",
		"prototype"
	],
	[
		"AnimationEvent"
	],
	[
		"AnimationEvent",
		"prototype",
		"pseudoElement"
	],
	[
		"AnimationEvent",
		"prototype",
		"elapsedTime"
	],
	[
		"AnimationEvent",
		"prototype",
		"animationName"
	],
	[
		"AnimationEvent",
		"prototype"
	],
	[
		"AnimationNodeList"
	],
	[
		"AnimationNodeList",
		"prototype",
		"length"
	],
	[
		"AnimationNodeList",
		"prototype",
		"item()"
	],
	[
		"AnimationNodeList",
		"prototype"
	],
	[
		"AnimationPlaybackEvent"
	],
	[
		"AnimationPlaybackEvent",
		"prototype",
		"timelineTime"
	],
	[
		"AnimationPlaybackEvent",
		"prototype",
		"currentTime"
	],
	[
		"AnimationPlaybackEvent",
		"prototype"
	],
	[
		"AnimationTimeline"
	],
	[
		"AnimationTimeline",
		"prototype",
		"play()"
	],
	[
		"AnimationTimeline",
		"prototype",
		"duration"
	],
	[
		"AnimationTimeline",
		"prototype",
		"currentTime"
	],
	[
		"AnimationTimeline",
		"prototype"
	],
	[
		"AnimationWorkletGlobalScope"
	],
	[
		"AnimationWorkletGlobalScope",
		"prototype",
		"registerAnimator()"
	],
	[
		"AnimationWorkletGlobalScope",
		"prototype"
	],
	[
		"Attr"
	],
	[
		"Attr",
		"prototype",
		"value"
	],
	[
		"Attr",
		"prototype",
		"specified"
	],
	[
		"Attr",
		"prototype",
		"prefix"
	],
	[
		"Attr",
		"prototype",
		"ownerElement"
	],
	[
		"Attr",
		"prototype",
		"namespaceURI"
	],
	[
		"Attr",
		"prototype",
		"name"
	],
	[
		"Attr",
		"prototype",
		"localName"
	],
	[
		"Attr",
		"prototype"
	],
	[
		"AudioBuffer"
	],
	[
		"AudioBuffer",
		"prototype",
		"sampleRate"
	],
	[
		"AudioBuffer",
		"prototype",
		"numberOfChannels"
	],
	[
		"AudioBuffer",
		"prototype",
		"length"
	],
	[
		"AudioBuffer",
		"prototype",
		"getChannelData()"
	],
	[
		"AudioBuffer",
		"prototype",
		"duration"
	],
	[
		"AudioBuffer",
		"prototype",
		"copyToChannel()"
	],
	[
		"AudioBuffer",
		"prototype",
		"copyFromChannel()"
	],
	[
		"AudioBuffer",
		"prototype"
	],
	[
		"AudioBufferSourceNode"
	],
	[
		"AudioBufferSourceNode",
		"prototype",
		"start()"
	],
	[
		"AudioBufferSourceNode",
		"prototype",
		"playbackRate"
	],
	[
		"AudioBufferSourceNode",
		"prototype",
		"loopStart"
	],
	[
		"AudioBufferSourceNode",
		"prototype",
		"loopEnd"
	],
	[
		"AudioBufferSourceNode",
		"prototype",
		"loop"
	],
	[
		"AudioBufferSourceNode",
		"prototype",
		"detune"
	],
	[
		"AudioBufferSourceNode",
		"prototype",
		"buffer"
	],
	[
		"AudioBufferSourceNode",
		"prototype"
	],
	[
		"AudioContext"
	],
	[
		"AudioContext",
		"prototype",
		"suspend()"
	],
	[
		"AudioContext",
		"prototype",
		"sinkId"
	],
	[
		"AudioContext",
		"prototype",
		"setSinkId()"
	],
	[
		"AudioContext",
		"prototype",
		"resume()"
	],
	[
		"AudioContext",
		"prototype",
		"renderCapacity"
	],
	[
		"AudioContext",
		"prototype",
		"outputLatency"
	],
	[
		"AudioContext",
		"prototype",
		"onsinkchange"
	],
	[
		"AudioContext",
		"prototype",
		"onerror"
	],
	[
		"AudioContext",
		"prototype",
		"getOutputTimestamp()"
	],
	[
		"AudioContext",
		"prototype",
		"createMediaStreamTrackSource()"
	],
	[
		"AudioContext",
		"prototype",
		"createMediaStreamSource()"
	],
	[
		"AudioContext",
		"prototype",
		"createMediaStreamDestination()"
	],
	[
		"AudioContext",
		"prototype",
		"createMediaElementSource()"
	],
	[
		"AudioContext",
		"prototype",
		"close()"
	],
	[
		"AudioContext",
		"prototype",
		"baseLatency"
	],
	[
		"AudioContext",
		"prototype"
	],
	[
		"AudioData"
	],
	[
		"AudioData",
		"prototype",
		"timestamp"
	],
	[
		"AudioData",
		"prototype",
		"sampleRate"
	],
	[
		"AudioData",
		"prototype",
		"numberOfFrames"
	],
	[
		"AudioData",
		"prototype",
		"numberOfChannels"
	],
	[
		"AudioData",
		"prototype",
		"format"
	],
	[
		"AudioData",
		"prototype",
		"duration"
	],
	[
		"AudioData",
		"prototype",
		"copyTo()"
	],
	[
		"AudioData",
		"prototype",
		"close()"
	],
	[
		"AudioData",
		"prototype",
		"clone()"
	],
	[
		"AudioData",
		"prototype",
		"allocationSize()"
	],
	[
		"AudioData",
		"prototype"
	],
	[
		"AudioDecoder"
	],
	[
		"AudioDecoder",
		"prototype",
		"state"
	],
	[
		"AudioDecoder",
		"prototype",
		"reset()"
	],
	[
		"AudioDecoder",
		"prototype",
		"ondequeue"
	],
	[
		"AudioDecoder",
		"prototype",
		"flush()"
	],
	[
		"AudioDecoder",
		"prototype",
		"decodeQueueSize"
	],
	[
		"AudioDecoder",
		"prototype",
		"decode()"
	],
	[
		"AudioDecoder",
		"prototype",
		"configure()"
	],
	[
		"AudioDecoder",
		"prototype",
		"close()"
	],
	[
		"AudioDecoder",
		"prototype"
	],
	[
		"AudioDecoder",
		"isConfigSupported()"
	],
	[
		"AudioDestinationNode"
	],
	[
		"AudioDestinationNode",
		"prototype",
		"maxChannelCount"
	],
	[
		"AudioDestinationNode",
		"prototype"
	],
	[
		"AudioEncoder"
	],
	[
		"AudioEncoder",
		"prototype",
		"state"
	],
	[
		"AudioEncoder",
		"prototype",
		"reset()"
	],
	[
		"AudioEncoder",
		"prototype",
		"ondequeue"
	],
	[
		"AudioEncoder",
		"prototype",
		"flush()"
	],
	[
		"AudioEncoder",
		"prototype",
		"encodeQueueSize"
	],
	[
		"AudioEncoder",
		"prototype",
		"encode()"
	],
	[
		"AudioEncoder",
		"prototype",
		"configure()"
	],
	[
		"AudioEncoder",
		"prototype",
		"close()"
	],
	[
		"AudioEncoder",
		"prototype"
	],
	[
		"AudioEncoder",
		"isConfigSupported()"
	],
	[
		"AudioListener"
	],
	[
		"AudioListener",
		"prototype",
		"upZ"
	],
	[
		"AudioListener",
		"prototype",
		"upY"
	],
	[
		"AudioListener",
		"prototype",
		"upX"
	],
	[
		"AudioListener",
		"prototype",
		"setPosition()"
	],
	[
		"AudioListener",
		"prototype",
		"setOrientation()"
	],
	[
		"AudioListener",
		"prototype",
		"positionZ"
	],
	[
		"AudioListener",
		"prototype",
		"positionY"
	],
	[
		"AudioListener",
		"prototype",
		"positionX"
	],
	[
		"AudioListener",
		"prototype",
		"forwardZ"
	],
	[
		"AudioListener",
		"prototype",
		"forwardY"
	],
	[
		"AudioListener",
		"prototype",
		"forwardX"
	],
	[
		"AudioListener",
		"prototype"
	],
	[
		"AudioNode"
	],
	[
		"AudioNode",
		"prototype",
		"numberOfOutputs"
	],
	[
		"AudioNode",
		"prototype",
		"numberOfInputs"
	],
	[
		"AudioNode",
		"prototype",
		"disconnect()"
	],
	[
		"AudioNode",
		"prototype",
		"context"
	],
	[
		"AudioNode",
		"prototype",
		"connect()"
	],
	[
		"AudioNode",
		"prototype",
		"channelInterpretation"
	],
	[
		"AudioNode",
		"prototype",
		"channelCountMode"
	],
	[
		"AudioNode",
		"prototype",
		"channelCount"
	],
	[
		"AudioNode",
		"prototype"
	],
	[
		"AudioParam"
	],
	[
		"AudioParam",
		"prototype",
		"value"
	],
	[
		"AudioParam",
		"prototype",
		"setValueCurveAtTime()"
	],
	[
		"AudioParam",
		"prototype",
		"setValueAtTime()"
	],
	[
		"AudioParam",
		"prototype",
		"setTargetAtTime()"
	],
	[
		"AudioParam",
		"prototype",
		"minValue"
	],
	[
		"AudioParam",
		"prototype",
		"maxValue"
	],
	[
		"AudioParam",
		"prototype",
		"linearRampToValueAtTime()"
	],
	[
		"AudioParam",
		"prototype",
		"exponentialRampToValueAtTime()"
	],
	[
		"AudioParam",
		"prototype",
		"defaultValue"
	],
	[
		"AudioParam",
		"prototype",
		"cancelScheduledValues()"
	],
	[
		"AudioParam",
		"prototype",
		"cancelAndHoldAtTime()"
	],
	[
		"AudioParam",
		"prototype",
		"automationRate"
	],
	[
		"AudioParam",
		"prototype"
	],
	[
		"AudioParamMap"
	],
	[
		"AudioParamMap",
		"prototype"
	],
	[
		"AudioProcessingEvent"
	],
	[
		"AudioProcessingEvent",
		"prototype",
		"playbackTime"
	],
	[
		"AudioProcessingEvent",
		"prototype",
		"outputBuffer"
	],
	[
		"AudioProcessingEvent",
		"prototype",
		"inputBuffer"
	],
	[
		"AudioProcessingEvent",
		"prototype"
	],
	[
		"AudioRenderCapacity"
	],
	[
		"AudioRenderCapacity",
		"prototype",
		"stop()"
	],
	[
		"AudioRenderCapacity",
		"prototype",
		"start()"
	],
	[
		"AudioRenderCapacity",
		"prototype",
		"onupdate"
	],
	[
		"AudioRenderCapacity",
		"prototype"
	],
	[
		"AudioRenderCapacityEvent"
	],
	[
		"AudioRenderCapacityEvent",
		"prototype",
		"underrunRatio"
	],
	[
		"AudioRenderCapacityEvent",
		"prototype",
		"timestamp"
	],
	[
		"AudioRenderCapacityEvent",
		"prototype",
		"peakLoad"
	],
	[
		"AudioRenderCapacityEvent",
		"prototype",
		"averageLoad"
	],
	[
		"AudioRenderCapacityEvent",
		"prototype"
	],
	[
		"AudioScheduledSourceNode"
	],
	[
		"AudioScheduledSourceNode",
		"prototype",
		"stop()"
	],
	[
		"AudioScheduledSourceNode",
		"prototype",
		"start()"
	],
	[
		"AudioScheduledSourceNode",
		"prototype",
		"onended"
	],
	[
		"AudioScheduledSourceNode",
		"prototype"
	],
	[
		"AudioSession"
	],
	[
		"AudioSession",
		"prototype",
		"type"
	],
	[
		"AudioSession",
		"prototype",
		"state"
	],
	[
		"AudioSession",
		"prototype",
		"onstatechange"
	],
	[
		"AudioSession",
		"prototype"
	],
	[
		"AudioSinkInfo"
	],
	[
		"AudioSinkInfo",
		"prototype",
		"type"
	],
	[
		"AudioSinkInfo",
		"prototype"
	],
	[
		"AudioTrack"
	],
	[
		"AudioTrack",
		"prototype",
		"sourceBuffer"
	],
	[
		"AudioTrack",
		"prototype",
		"language"
	],
	[
		"AudioTrack",
		"prototype",
		"label"
	],
	[
		"AudioTrack",
		"prototype",
		"kind"
	],
	[
		"AudioTrack",
		"prototype",
		"id"
	],
	[
		"AudioTrack",
		"prototype",
		"enabled"
	],
	[
		"AudioTrack",
		"prototype"
	],
	[
		"AudioTrackList"
	],
	[
		"AudioTrackList",
		"prototype",
		"onremovetrack"
	],
	[
		"AudioTrackList",
		"prototype",
		"onchange"
	],
	[
		"AudioTrackList",
		"prototype",
		"onaddtrack"
	],
	[
		"AudioTrackList",
		"prototype",
		"length"
	],
	[
		"AudioTrackList",
		"prototype",
		"getTrackById()"
	],
	[
		"AudioTrackList",
		"prototype"
	],
	[
		"AudioWorklet"
	],
	[
		"AudioWorklet",
		"prototype",
		"port"
	],
	[
		"AudioWorklet",
		"prototype"
	],
	[
		"AudioWorkletGlobalScope"
	],
	[
		"AudioWorkletGlobalScope",
		"prototype",
		"sampleRate"
	],
	[
		"AudioWorkletGlobalScope",
		"prototype",
		"renderQuantumSize"
	],
	[
		"AudioWorkletGlobalScope",
		"prototype",
		"registerProcessor()"
	],
	[
		"AudioWorkletGlobalScope",
		"prototype",
		"port"
	],
	[
		"AudioWorkletGlobalScope",
		"prototype",
		"currentTime"
	],
	[
		"AudioWorkletGlobalScope",
		"prototype",
		"currentFrame"
	],
	[
		"AudioWorkletGlobalScope",
		"prototype"
	],
	[
		"AudioWorkletNode"
	],
	[
		"AudioWorkletNode",
		"prototype",
		"port"
	],
	[
		"AudioWorkletNode",
		"prototype",
		"parameters"
	],
	[
		"AudioWorkletNode",
		"prototype",
		"onprocessorerror"
	],
	[
		"AudioWorkletNode",
		"prototype"
	],
	[
		"AudioWorkletProcessor"
	],
	[
		"AudioWorkletProcessor",
		"prototype",
		"port"
	],
	[
		"AudioWorkletProcessor",
		"prototype"
	],
	[
		"AuthenticatorAssertionResponse"
	],
	[
		"AuthenticatorAssertionResponse",
		"prototype",
		"userHandle"
	],
	[
		"AuthenticatorAssertionResponse",
		"prototype",
		"signature"
	],
	[
		"AuthenticatorAssertionResponse",
		"prototype",
		"authenticatorData"
	],
	[
		"AuthenticatorAssertionResponse",
		"prototype"
	],
	[
		"AuthenticatorAttestationResponse"
	],
	[
		"AuthenticatorAttestationResponse",
		"prototype",
		"getTransports()"
	],
	[
		"AuthenticatorAttestationResponse",
		"prototype",
		"getPublicKeyAlgorithm()"
	],
	[
		"AuthenticatorAttestationResponse",
		"prototype",
		"getPublicKey()"
	],
	[
		"AuthenticatorAttestationResponse",
		"prototype",
		"getAuthenticatorData()"
	],
	[
		"AuthenticatorAttestationResponse",
		"prototype",
		"attestationObject"
	],
	[
		"AuthenticatorAttestationResponse",
		"prototype"
	],
	[
		"AuthenticatorResponse"
	],
	[
		"AuthenticatorResponse",
		"prototype",
		"clientDataJSON"
	],
	[
		"AuthenticatorResponse",
		"prototype"
	],
	[
		"BackgroundFetchEvent"
	],
	[
		"BackgroundFetchEvent",
		"prototype",
		"registration"
	],
	[
		"BackgroundFetchEvent",
		"prototype"
	],
	[
		"BackgroundFetchManager"
	],
	[
		"BackgroundFetchManager",
		"prototype",
		"getIds()"
	],
	[
		"BackgroundFetchManager",
		"prototype",
		"get()"
	],
	[
		"BackgroundFetchManager",
		"prototype",
		"fetch()"
	],
	[
		"BackgroundFetchManager",
		"prototype"
	],
	[
		"BackgroundFetchRecord"
	],
	[
		"BackgroundFetchRecord",
		"prototype",
		"responseReady"
	],
	[
		"BackgroundFetchRecord",
		"prototype",
		"request"
	],
	[
		"BackgroundFetchRecord",
		"prototype"
	],
	[
		"BackgroundFetchRegistration"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"uploaded"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"uploadTotal"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"result"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"recordsAvailable"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"onprogress"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"matchAll()"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"match()"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"id"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"failureReason"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"downloaded"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"downloadTotal"
	],
	[
		"BackgroundFetchRegistration",
		"prototype",
		"abort()"
	],
	[
		"BackgroundFetchRegistration",
		"prototype"
	],
	[
		"BackgroundFetchUpdateUIEvent"
	],
	[
		"BackgroundFetchUpdateUIEvent",
		"prototype",
		"updateUI()"
	],
	[
		"BackgroundFetchUpdateUIEvent",
		"prototype"
	],
	[
		"BarcodeDetector"
	],
	[
		"BarcodeDetector",
		"prototype",
		"detect()"
	],
	[
		"BarcodeDetector",
		"prototype"
	],
	[
		"BarcodeDetector",
		"getSupportedFormats()"
	],
	[
		"BarProp"
	],
	[
		"BarProp",
		"prototype",
		"visible"
	],
	[
		"BarProp",
		"prototype"
	],
	[
		"BaseAudioContext"
	],
	[
		"BaseAudioContext",
		"prototype",
		"state"
	],
	[
		"BaseAudioContext",
		"prototype",
		"sampleRate"
	],
	[
		"BaseAudioContext",
		"prototype",
		"renderQuantumSize"
	],
	[
		"BaseAudioContext",
		"prototype",
		"onstatechange"
	],
	[
		"BaseAudioContext",
		"prototype",
		"listener"
	],
	[
		"BaseAudioContext",
		"prototype",
		"destination"
	],
	[
		"BaseAudioContext",
		"prototype",
		"decodeAudioData()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"currentTime"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createWaveShaper()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createStereoPanner()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createScriptProcessor()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createPeriodicWave()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createPanner()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createOscillator()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createIIRFilter()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createGain()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createDynamicsCompressor()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createDelay()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createConvolver()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createConstantSource()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createChannelSplitter()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createChannelMerger()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createBufferSource()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createBuffer()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createBiquadFilter()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"createAnalyser()"
	],
	[
		"BaseAudioContext",
		"prototype",
		"audioWorklet"
	],
	[
		"BaseAudioContext",
		"prototype"
	],
	[
		"Baseline"
	],
	[
		"Baseline",
		"prototype",
		"value"
	],
	[
		"Baseline",
		"prototype",
		"name"
	],
	[
		"Baseline",
		"prototype"
	],
	[
		"BatteryManager"
	],
	[
		"BatteryManager",
		"prototype",
		"onlevelchange"
	],
	[
		"BatteryManager",
		"prototype",
		"ondischargingtimechange"
	],
	[
		"BatteryManager",
		"prototype",
		"onchargingtimechange"
	],
	[
		"BatteryManager",
		"prototype",
		"onchargingchange"
	],
	[
		"BatteryManager",
		"prototype",
		"level"
	],
	[
		"BatteryManager",
		"prototype",
		"dischargingTime"
	],
	[
		"BatteryManager",
		"prototype",
		"chargingTime"
	],
	[
		"BatteryManager",
		"prototype",
		"charging"
	],
	[
		"BatteryManager",
		"prototype"
	],
	[
		"BeforeInstallPromptEvent"
	],
	[
		"BeforeInstallPromptEvent",
		"prototype",
		"prompt()"
	],
	[
		"BeforeInstallPromptEvent",
		"prototype"
	],
	[
		"BeforeUnloadEvent"
	],
	[
		"BeforeUnloadEvent",
		"prototype",
		"returnValue"
	],
	[
		"BeforeUnloadEvent",
		"prototype"
	],
	[
		"BidirectionalStreamEvent"
	],
	[
		"BidirectionalStreamEvent",
		"prototype",
		"stream"
	],
	[
		"BidirectionalStreamEvent",
		"prototype"
	],
	[
		"BiquadFilterNode"
	],
	[
		"BiquadFilterNode",
		"prototype",
		"type"
	],
	[
		"BiquadFilterNode",
		"prototype",
		"getFrequencyResponse()"
	],
	[
		"BiquadFilterNode",
		"prototype",
		"gain"
	],
	[
		"BiquadFilterNode",
		"prototype",
		"frequency"
	],
	[
		"BiquadFilterNode",
		"prototype",
		"detune"
	],
	[
		"BiquadFilterNode",
		"prototype",
		"Q"
	],
	[
		"BiquadFilterNode",
		"prototype"
	],
	[
		"Blob"
	],
	[
		"Blob",
		"prototype",
		"type"
	],
	[
		"Blob",
		"prototype",
		"text()"
	],
	[
		"Blob",
		"prototype",
		"stream()"
	],
	[
		"Blob",
		"prototype",
		"slice()"
	],
	[
		"Blob",
		"prototype",
		"size"
	],
	[
		"Blob",
		"prototype",
		"bytes()"
	],
	[
		"Blob",
		"prototype",
		"arrayBuffer()"
	],
	[
		"Blob",
		"prototype"
	],
	[
		"BlobEvent"
	],
	[
		"BlobEvent",
		"prototype",
		"timecode"
	],
	[
		"BlobEvent",
		"prototype",
		"data"
	],
	[
		"BlobEvent",
		"prototype"
	],
	[
		"Bluetooth"
	],
	[
		"Bluetooth",
		"prototype",
		"requestLEScan()"
	],
	[
		"Bluetooth",
		"prototype",
		"requestDevice()"
	],
	[
		"Bluetooth",
		"prototype",
		"referringDevice"
	],
	[
		"Bluetooth",
		"prototype",
		"onserviceremoved"
	],
	[
		"Bluetooth",
		"prototype",
		"onservicechanged"
	],
	[
		"Bluetooth",
		"prototype",
		"onserviceadded"
	],
	[
		"Bluetooth",
		"prototype",
		"ongattserverdisconnected"
	],
	[
		"Bluetooth",
		"prototype",
		"oncharacteristicvaluechanged"
	],
	[
		"Bluetooth",
		"prototype",
		"onavailabilitychanged"
	],
	[
		"Bluetooth",
		"prototype",
		"onadvertisementreceived"
	],
	[
		"Bluetooth",
		"prototype",
		"getDevices()"
	],
	[
		"Bluetooth",
		"prototype",
		"getAvailability()"
	],
	[
		"Bluetooth",
		"prototype"
	],
	[
		"BluetoothAdvertisingEvent"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"uuids"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"txPower"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"serviceData"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"rssi"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"name"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"manufacturerData"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"device"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype",
		"appearance"
	],
	[
		"BluetoothAdvertisingEvent",
		"prototype"
	],
	[
		"BluetoothCharacteristicProperties"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"writeWithoutResponse"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"write"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"writableAuxiliaries"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"reliableWrite"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"read"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"notify"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"indicate"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"broadcast"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype",
		"authenticatedSignedWrites"
	],
	[
		"BluetoothCharacteristicProperties",
		"prototype"
	],
	[
		"BluetoothDataFilter"
	],
	[
		"BluetoothDataFilter",
		"prototype",
		"mask"
	],
	[
		"BluetoothDataFilter",
		"prototype",
		"dataPrefix"
	],
	[
		"BluetoothDataFilter",
		"prototype"
	],
	[
		"BluetoothDevice"
	],
	[
		"BluetoothDevice",
		"prototype",
		"watchingAdvertisements"
	],
	[
		"BluetoothDevice",
		"prototype",
		"watchAdvertisements()"
	],
	[
		"BluetoothDevice",
		"prototype",
		"onserviceremoved"
	],
	[
		"BluetoothDevice",
		"prototype",
		"onservicechanged"
	],
	[
		"BluetoothDevice",
		"prototype",
		"onserviceadded"
	],
	[
		"BluetoothDevice",
		"prototype",
		"ongattserverdisconnected"
	],
	[
		"BluetoothDevice",
		"prototype",
		"oncharacteristicvaluechanged"
	],
	[
		"BluetoothDevice",
		"prototype",
		"onadvertisementreceived"
	],
	[
		"BluetoothDevice",
		"prototype",
		"name"
	],
	[
		"BluetoothDevice",
		"prototype",
		"id"
	],
	[
		"BluetoothDevice",
		"prototype",
		"gatt"
	],
	[
		"BluetoothDevice",
		"prototype",
		"forget()"
	],
	[
		"BluetoothDevice",
		"prototype"
	],
	[
		"BluetoothLEScan"
	],
	[
		"BluetoothLEScan",
		"prototype",
		"stop()"
	],
	[
		"BluetoothLEScan",
		"prototype",
		"keepRepeatedDevices"
	],
	[
		"BluetoothLEScan",
		"prototype",
		"filters"
	],
	[
		"BluetoothLEScan",
		"prototype",
		"active"
	],
	[
		"BluetoothLEScan",
		"prototype",
		"acceptAllAdvertisements"
	],
	[
		"BluetoothLEScan",
		"prototype"
	],
	[
		"BluetoothLEScanFilter"
	],
	[
		"BluetoothLEScanFilter",
		"prototype",
		"services"
	],
	[
		"BluetoothLEScanFilter",
		"prototype",
		"serviceData"
	],
	[
		"BluetoothLEScanFilter",
		"prototype",
		"namePrefix"
	],
	[
		"BluetoothLEScanFilter",
		"prototype",
		"name"
	],
	[
		"BluetoothLEScanFilter",
		"prototype",
		"manufacturerData"
	],
	[
		"BluetoothLEScanFilter",
		"prototype"
	],
	[
		"BluetoothLEScanPermissionResult"
	],
	[
		"BluetoothLEScanPermissionResult",
		"prototype",
		"scans"
	],
	[
		"BluetoothLEScanPermissionResult",
		"prototype"
	],
	[
		"BluetoothManufacturerDataFilter"
	],
	[
		"BluetoothManufacturerDataFilter",
		"prototype"
	],
	[
		"BluetoothManufacturerDataMap"
	],
	[
		"BluetoothManufacturerDataMap",
		"prototype"
	],
	[
		"BluetoothPermissionResult"
	],
	[
		"BluetoothPermissionResult",
		"prototype",
		"devices"
	],
	[
		"BluetoothPermissionResult",
		"prototype"
	],
	[
		"BluetoothRemoteGATTCharacteristic"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"writeValueWithoutResponse()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"writeValueWithResponse()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"writeValue()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"value"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"uuid"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"stopNotifications()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"startNotifications()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"service"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"readValue()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"properties"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"oncharacteristicvaluechanged"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"getDescriptors()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype",
		"getDescriptor()"
	],
	[
		"BluetoothRemoteGATTCharacteristic",
		"prototype"
	],
	[
		"BluetoothRemoteGATTDescriptor"
	],
	[
		"BluetoothRemoteGATTDescriptor",
		"prototype",
		"writeValue()"
	],
	[
		"BluetoothRemoteGATTDescriptor",
		"prototype",
		"value"
	],
	[
		"BluetoothRemoteGATTDescriptor",
		"prototype",
		"uuid"
	],
	[
		"BluetoothRemoteGATTDescriptor",
		"prototype",
		"readValue()"
	],
	[
		"BluetoothRemoteGATTDescriptor",
		"prototype",
		"characteristic"
	],
	[
		"BluetoothRemoteGATTDescriptor",
		"prototype"
	],
	[
		"BluetoothRemoteGATTServer"
	],
	[
		"BluetoothRemoteGATTServer",
		"prototype",
		"getPrimaryServices()"
	],
	[
		"BluetoothRemoteGATTServer",
		"prototype",
		"getPrimaryService()"
	],
	[
		"BluetoothRemoteGATTServer",
		"prototype",
		"disconnect()"
	],
	[
		"BluetoothRemoteGATTServer",
		"prototype",
		"device"
	],
	[
		"BluetoothRemoteGATTServer",
		"prototype",
		"connected"
	],
	[
		"BluetoothRemoteGATTServer",
		"prototype",
		"connect()"
	],
	[
		"BluetoothRemoteGATTServer",
		"prototype"
	],
	[
		"BluetoothRemoteGATTService"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"uuid"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"onserviceremoved"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"onservicechanged"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"onserviceadded"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"oncharacteristicvaluechanged"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"isPrimary"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"getIncludedServices()"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"getIncludedService()"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"getCharacteristics()"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"getCharacteristic()"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype",
		"device"
	],
	[
		"BluetoothRemoteGATTService",
		"prototype"
	],
	[
		"BluetoothServiceDataFilter"
	],
	[
		"BluetoothServiceDataFilter",
		"prototype"
	],
	[
		"BluetoothServiceDataMap"
	],
	[
		"BluetoothServiceDataMap",
		"prototype"
	],
	[
		"BluetoothUUID"
	],
	[
		"BluetoothUUID",
		"prototype"
	],
	[
		"BluetoothUUID",
		"getService()"
	],
	[
		"BluetoothUUID",
		"getDescriptor()"
	],
	[
		"BluetoothUUID",
		"getCharacteristic()"
	],
	[
		"BluetoothUUID",
		"canonicalUUID()"
	],
	[
		"BreakToken"
	],
	[
		"BreakToken",
		"prototype",
		"data"
	],
	[
		"BreakToken",
		"prototype",
		"childBreakTokens"
	],
	[
		"BreakToken",
		"prototype"
	],
	[
		"BroadcastChannel"
	],
	[
		"BroadcastChannel",
		"prototype",
		"postMessage()"
	],
	[
		"BroadcastChannel",
		"prototype",
		"onmessageerror"
	],
	[
		"BroadcastChannel",
		"prototype",
		"onmessage"
	],
	[
		"BroadcastChannel",
		"prototype",
		"name"
	],
	[
		"BroadcastChannel",
		"prototype",
		"close()"
	],
	[
		"BroadcastChannel",
		"prototype"
	],
	[
		"BrowserCaptureMediaStreamTrack"
	],
	[
		"BrowserCaptureMediaStreamTrack",
		"prototype",
		"restrictTo()"
	],
	[
		"BrowserCaptureMediaStreamTrack",
		"prototype",
		"cropTo()"
	],
	[
		"BrowserCaptureMediaStreamTrack",
		"prototype",
		"clone()"
	],
	[
		"BrowserCaptureMediaStreamTrack",
		"prototype"
	],
	[
		"BufferedChangeEvent"
	],
	[
		"BufferedChangeEvent",
		"prototype",
		"removedRanges"
	],
	[
		"BufferedChangeEvent",
		"prototype",
		"addedRanges"
	],
	[
		"BufferedChangeEvent",
		"prototype"
	],
	[
		"ByteLengthQueuingStrategy"
	],
	[
		"ByteLengthQueuingStrategy",
		"prototype",
		"size"
	],
	[
		"ByteLengthQueuingStrategy",
		"prototype",
		"highWaterMark"
	],
	[
		"ByteLengthQueuingStrategy",
		"prototype"
	],
	[
		"Cache"
	],
	[
		"Cache",
		"prototype",
		"put()"
	],
	[
		"Cache",
		"prototype",
		"matchAll()"
	],
	[
		"Cache",
		"prototype",
		"match()"
	],
	[
		"Cache",
		"prototype",
		"keys()"
	],
	[
		"Cache",
		"prototype",
		"delete()"
	],
	[
		"Cache",
		"prototype",
		"addAll()"
	],
	[
		"Cache",
		"prototype",
		"add()"
	],
	[
		"Cache",
		"prototype"
	],
	[
		"CacheStorage"
	],
	[
		"CacheStorage",
		"prototype",
		"open()"
	],
	[
		"CacheStorage",
		"prototype",
		"match()"
	],
	[
		"CacheStorage",
		"prototype",
		"keys()"
	],
	[
		"CacheStorage",
		"prototype",
		"has()"
	],
	[
		"CacheStorage",
		"prototype",
		"delete()"
	],
	[
		"CacheStorage",
		"prototype"
	],
	[
		"CanMakePaymentEvent"
	],
	[
		"CanMakePaymentEvent",
		"prototype",
		"respondWith()"
	],
	[
		"CanMakePaymentEvent",
		"prototype"
	],
	[
		"CanvasCaptureMediaStreamTrack"
	],
	[
		"CanvasCaptureMediaStreamTrack",
		"prototype",
		"requestFrame()"
	],
	[
		"CanvasCaptureMediaStreamTrack",
		"prototype",
		"canvas"
	],
	[
		"CanvasCaptureMediaStreamTrack",
		"prototype"
	],
	[
		"CanvasGradient"
	],
	[
		"CanvasGradient",
		"prototype",
		"addColorStop()"
	],
	[
		"CanvasGradient",
		"prototype"
	],
	[
		"CanvasPattern"
	],
	[
		"CanvasPattern",
		"prototype",
		"setTransform()"
	],
	[
		"CanvasPattern",
		"prototype"
	],
	[
		"CanvasRenderingContext2D"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"wordSpacing"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"translate()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"transform()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"textRendering"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"textBaseline"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"textAlign"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"strokeText()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"strokeStyle"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"strokeRect()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"stroke()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"shadowOffsetY"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"shadowOffsetX"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"shadowColor"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"shadowBlur"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"setTransform()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"setLineDash()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"scale()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"save()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"roundRect()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"rotate()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"restore()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"resetTransform()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"reset()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"rect()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"quadraticCurveTo()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"putImageData()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"moveTo()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"miterLimit"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"measureText()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"lineWidth"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"lineTo()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"lineJoin"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"lineDashOffset"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"lineCap"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"letterSpacing"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"isPointInStroke()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"isPointInPath()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"isContextLost()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"imageSmoothingQuality"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"imageSmoothingEnabled"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"globalCompositeOperation"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"globalAlpha"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"getTransform()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"getLineDash()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"getImageData()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"getContextAttributes()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"fontVariantCaps"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"fontStretch"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"fontKerning"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"font"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"filter"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"fillText()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"fillStyle"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"fillRect()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"fill()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"ellipse()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"drawImage()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"drawFocusIfNeeded()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"direction"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"createRadialGradient()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"createPattern()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"createLinearGradient()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"createImageData()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"createConicGradient()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"closePath()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"clip()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"clearRect()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"canvas"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"bezierCurveTo()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"beginPath()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"arcTo()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype",
		"arc()"
	],
	[
		"CanvasRenderingContext2D",
		"prototype"
	],
	[
		"CaptureActionEvent"
	],
	[
		"CaptureActionEvent",
		"prototype",
		"action"
	],
	[
		"CaptureActionEvent",
		"prototype"
	],
	[
		"CaptureController"
	],
	[
		"CaptureController",
		"prototype",
		"setFocusBehavior()"
	],
	[
		"CaptureController",
		"prototype",
		"oncapturedmousechange"
	],
	[
		"CaptureController",
		"prototype"
	],
	[
		"CapturedMouseEvent"
	],
	[
		"CapturedMouseEvent",
		"prototype",
		"surfaceY"
	],
	[
		"CapturedMouseEvent",
		"prototype",
		"surfaceX"
	],
	[
		"CapturedMouseEvent",
		"prototype"
	],
	[
		"CaretPosition"
	],
	[
		"CaretPosition",
		"prototype",
		"offsetNode"
	],
	[
		"CaretPosition",
		"prototype",
		"offset"
	],
	[
		"CaretPosition",
		"prototype",
		"getClientRect()"
	],
	[
		"CaretPosition",
		"prototype"
	],
	[
		"CDATASection"
	],
	[
		"CDATASection",
		"prototype"
	],
	[
		"ChannelMergerNode"
	],
	[
		"ChannelMergerNode",
		"prototype"
	],
	[
		"ChannelSplitterNode"
	],
	[
		"ChannelSplitterNode",
		"prototype"
	],
	[
		"ChapterInformation"
	],
	[
		"ChapterInformation",
		"prototype",
		"title"
	],
	[
		"ChapterInformation",
		"prototype",
		"startTime"
	],
	[
		"ChapterInformation",
		"prototype",
		"artwork"
	],
	[
		"ChapterInformation",
		"prototype"
	],
	[
		"CharacterBoundsUpdateEvent"
	],
	[
		"CharacterBoundsUpdateEvent",
		"prototype",
		"rangeStart"
	],
	[
		"CharacterBoundsUpdateEvent",
		"prototype",
		"rangeEnd"
	],
	[
		"CharacterBoundsUpdateEvent",
		"prototype"
	],
	[
		"CharacterData"
	],
	[
		"CharacterData",
		"prototype",
		"substringData()"
	],
	[
		"CharacterData",
		"prototype",
		"replaceWith()"
	],
	[
		"CharacterData",
		"prototype",
		"replaceData()"
	],
	[
		"CharacterData",
		"prototype",
		"remove()"
	],
	[
		"CharacterData",
		"prototype",
		"previousElementSibling"
	],
	[
		"CharacterData",
		"prototype",
		"nextElementSibling"
	],
	[
		"CharacterData",
		"prototype",
		"length"
	],
	[
		"CharacterData",
		"prototype",
		"insertData()"
	],
	[
		"CharacterData",
		"prototype",
		"deleteData()"
	],
	[
		"CharacterData",
		"prototype",
		"data"
	],
	[
		"CharacterData",
		"prototype",
		"before()"
	],
	[
		"CharacterData",
		"prototype",
		"appendData()"
	],
	[
		"CharacterData",
		"prototype",
		"after()"
	],
	[
		"CharacterData",
		"prototype"
	],
	[
		"ChildBreakToken"
	],
	[
		"ChildBreakToken",
		"prototype",
		"child"
	],
	[
		"ChildBreakToken",
		"prototype",
		"breakType"
	],
	[
		"ChildBreakToken",
		"prototype"
	],
	[
		"Client"
	],
	[
		"Client",
		"prototype",
		"url"
	],
	[
		"Client",
		"prototype",
		"type"
	],
	[
		"Client",
		"prototype",
		"postMessage()"
	],
	[
		"Client",
		"prototype",
		"lifecycleState"
	],
	[
		"Client",
		"prototype",
		"id"
	],
	[
		"Client",
		"prototype",
		"frameType"
	],
	[
		"Client",
		"prototype"
	],
	[
		"Clients"
	],
	[
		"Clients",
		"prototype",
		"openWindow()"
	],
	[
		"Clients",
		"prototype",
		"matchAll()"
	],
	[
		"Clients",
		"prototype",
		"get()"
	],
	[
		"Clients",
		"prototype",
		"claim()"
	],
	[
		"Clients",
		"prototype"
	],
	[
		"Clipboard"
	],
	[
		"Clipboard",
		"prototype",
		"writeText()"
	],
	[
		"Clipboard",
		"prototype",
		"write()"
	],
	[
		"Clipboard",
		"prototype",
		"readText()"
	],
	[
		"Clipboard",
		"prototype",
		"read()"
	],
	[
		"Clipboard",
		"prototype"
	],
	[
		"ClipboardEvent"
	],
	[
		"ClipboardEvent",
		"prototype",
		"clipboardData"
	],
	[
		"ClipboardEvent",
		"prototype"
	],
	[
		"ClipboardItem"
	],
	[
		"ClipboardItem",
		"prototype",
		"types"
	],
	[
		"ClipboardItem",
		"prototype",
		"presentationStyle"
	],
	[
		"ClipboardItem",
		"prototype",
		"getType()"
	],
	[
		"ClipboardItem",
		"prototype"
	],
	[
		"ClipboardItem",
		"supports()"
	],
	[
		"CloseEvent"
	],
	[
		"CloseEvent",
		"prototype",
		"wasClean"
	],
	[
		"CloseEvent",
		"prototype",
		"reason"
	],
	[
		"CloseEvent",
		"prototype",
		"code"
	],
	[
		"CloseEvent",
		"prototype"
	],
	[
		"CloseWatcher"
	],
	[
		"CloseWatcher",
		"prototype",
		"requestClose()"
	],
	[
		"CloseWatcher",
		"prototype",
		"onclose"
	],
	[
		"CloseWatcher",
		"prototype",
		"oncancel"
	],
	[
		"CloseWatcher",
		"prototype",
		"destroy()"
	],
	[
		"CloseWatcher",
		"prototype",
		"close()"
	],
	[
		"CloseWatcher",
		"prototype"
	],
	[
		"Color"
	],
	[
		"Color",
		"prototype",
		"toJSON()"
	],
	[
		"Color",
		"prototype",
		"toGamut()"
	],
	[
		"Color",
		"prototype",
		"to()"
	],
	[
		"Color",
		"prototype",
		"set()"
	],
	[
		"Color",
		"prototype",
		"inGamut()"
	],
	[
		"Color",
		"prototype",
		"get()"
	],
	[
		"Color",
		"prototype",
		"deltaE()"
	],
	[
		"Color",
		"prototype",
		"coords"
	],
	[
		"Color",
		"prototype",
		"colorSpace"
	],
	[
		"Color",
		"prototype",
		"alpha"
	],
	[
		"Color",
		"prototype"
	],
	[
		"ColorSpace"
	],
	[
		"ColorSpace",
		"prototype",
		"white"
	],
	[
		"ColorSpace",
		"prototype",
		"name"
	],
	[
		"ColorSpace",
		"prototype",
		"coords"
	],
	[
		"ColorSpace",
		"prototype",
		"base"
	],
	[
		"ColorSpace",
		"prototype"
	],
	[
		"ColorSpace",
		"register()"
	],
	[
		"ColorSpace",
		"names"
	],
	[
		"ColorSpace",
		"get()"
	],
	[
		"ColorSpace",
		"fromICCProfile()"
	],
	[
		"ColorSpace",
		"create()"
	],
	[
		"ColorSpaceWhitePoint"
	],
	[
		"ColorSpaceWhitePoint",
		"prototype",
		"y"
	],
	[
		"ColorSpaceWhitePoint",
		"prototype",
		"x"
	],
	[
		"ColorSpaceWhitePoint",
		"prototype"
	],
	[
		"ColorSpaceWhitePoint",
		"D65"
	],
	[
		"ColorSpaceWhitePoint",
		"D50"
	],
	[
		"Comment"
	],
	[
		"Comment",
		"prototype"
	],
	[
		"CompositionEvent"
	],
	[
		"CompositionEvent",
		"prototype",
		"initCompositionEvent()"
	],
	[
		"CompositionEvent",
		"prototype",
		"data"
	],
	[
		"CompositionEvent",
		"prototype"
	],
	[
		"CompressionStream"
	],
	[
		"CompressionStream",
		"prototype",
		"writable"
	],
	[
		"CompressionStream",
		"prototype",
		"readable"
	],
	[
		"CompressionStream",
		"prototype"
	],
	[
		"console"
	],
	[
		"console",
		"warn()"
	],
	[
		"console",
		"trace()"
	],
	[
		"console",
		"timeLog()"
	],
	[
		"console",
		"timeEnd()"
	],
	[
		"console",
		"time()"
	],
	[
		"console",
		"table()"
	],
	[
		"console",
		"log()"
	],
	[
		"console",
		"info()"
	],
	[
		"console",
		"groupEnd()"
	],
	[
		"console",
		"groupCollapsed()"
	],
	[
		"console",
		"group()"
	],
	[
		"console",
		"error()"
	],
	[
		"console",
		"dirxml()"
	],
	[
		"console",
		"dir()"
	],
	[
		"console",
		"debug()"
	],
	[
		"console",
		"countReset()"
	],
	[
		"console",
		"count()"
	],
	[
		"console",
		"clear()"
	],
	[
		"console",
		"assert()"
	],
	[
		"ConstantSourceNode"
	],
	[
		"ConstantSourceNode",
		"prototype",
		"offset"
	],
	[
		"ConstantSourceNode",
		"prototype"
	],
	[
		"ContactAddress"
	],
	[
		"ContactAddress",
		"prototype",
		"toJSON()"
	],
	[
		"ContactAddress",
		"prototype",
		"sortingCode"
	],
	[
		"ContactAddress",
		"prototype",
		"region"
	],
	[
		"ContactAddress",
		"prototype",
		"recipient"
	],
	[
		"ContactAddress",
		"prototype",
		"postalCode"
	],
	[
		"ContactAddress",
		"prototype",
		"phone"
	],
	[
		"ContactAddress",
		"prototype",
		"organization"
	],
	[
		"ContactAddress",
		"prototype",
		"dependentLocality"
	],
	[
		"ContactAddress",
		"prototype",
		"country"
	],
	[
		"ContactAddress",
		"prototype",
		"city"
	],
	[
		"ContactAddress",
		"prototype",
		"addressLine"
	],
	[
		"ContactAddress",
		"prototype"
	],
	[
		"ContactsManager"
	],
	[
		"ContactsManager",
		"prototype",
		"select()"
	],
	[
		"ContactsManager",
		"prototype",
		"getProperties()"
	],
	[
		"ContactsManager",
		"prototype"
	],
	[
		"ContentIndex"
	],
	[
		"ContentIndex",
		"prototype",
		"getAll()"
	],
	[
		"ContentIndex",
		"prototype",
		"delete()"
	],
	[
		"ContentIndex",
		"prototype",
		"add()"
	],
	[
		"ContentIndex",
		"prototype"
	],
	[
		"ContentIndexEvent"
	],
	[
		"ContentIndexEvent",
		"prototype",
		"id"
	],
	[
		"ContentIndexEvent",
		"prototype"
	],
	[
		"ContentVisibilityAutoStateChangeEvent"
	],
	[
		"ContentVisibilityAutoStateChangeEvent",
		"prototype",
		"skipped"
	],
	[
		"ContentVisibilityAutoStateChangeEvent",
		"prototype"
	],
	[
		"ContextMenus"
	],
	[
		"ContextMenus",
		"prototype",
		"update()"
	],
	[
		"ContextMenus",
		"prototype",
		"removeAll()"
	],
	[
		"ContextMenus",
		"prototype",
		"remove()"
	],
	[
		"ContextMenus",
		"prototype",
		"create()"
	],
	[
		"ContextMenus",
		"prototype"
	],
	[
		"ControlledFrame"
	],
	[
		"ControlledFrame",
		"prototype",
		"stop()"
	],
	[
		"ControlledFrame",
		"prototype",
		"src"
	],
	[
		"ControlledFrame",
		"prototype",
		"setZoom()"
	],
	[
		"ControlledFrame",
		"prototype",
		"setAudioMuted()"
	],
	[
		"ControlledFrame",
		"prototype",
		"removeContentScripts()"
	],
	[
		"ControlledFrame",
		"prototype",
		"reload()"
	],
	[
		"ControlledFrame",
		"prototype",
		"print()"
	],
	[
		"ControlledFrame",
		"prototype",
		"partition"
	],
	[
		"ControlledFrame",
		"prototype",
		"name"
	],
	[
		"ControlledFrame",
		"prototype",
		"minwidth"
	],
	[
		"ControlledFrame",
		"prototype",
		"minheight"
	],
	[
		"ControlledFrame",
		"prototype",
		"maxwidth"
	],
	[
		"ControlledFrame",
		"prototype",
		"maxheight"
	],
	[
		"ControlledFrame",
		"prototype",
		"isAudioMuted()"
	],
	[
		"ControlledFrame",
		"prototype",
		"insertCSS()"
	],
	[
		"ControlledFrame",
		"prototype",
		"go()"
	],
	[
		"ControlledFrame",
		"prototype",
		"getZoom()"
	],
	[
		"ControlledFrame",
		"prototype",
		"getAudioState()"
	],
	[
		"ControlledFrame",
		"prototype",
		"forward()"
	],
	[
		"ControlledFrame",
		"prototype",
		"executeScript()"
	],
	[
		"ControlledFrame",
		"prototype",
		"contextMenus"
	],
	[
		"ControlledFrame",
		"prototype",
		"contentWindow"
	],
	[
		"ControlledFrame",
		"prototype",
		"clearData()"
	],
	[
		"ControlledFrame",
		"prototype",
		"captureVisibleRegion()"
	],
	[
		"ControlledFrame",
		"prototype",
		"canGoForward()"
	],
	[
		"ControlledFrame",
		"prototype",
		"canGoBack()"
	],
	[
		"ControlledFrame",
		"prototype",
		"back()"
	],
	[
		"ControlledFrame",
		"prototype",
		"autosize"
	],
	[
		"ControlledFrame",
		"prototype",
		"allowtransparency"
	],
	[
		"ControlledFrame",
		"prototype",
		"allowscaling"
	],
	[
		"ControlledFrame",
		"prototype",
		"allowfullscreen"
	],
	[
		"ControlledFrame",
		"prototype",
		"addContentScripts()"
	],
	[
		"ControlledFrame",
		"prototype"
	],
	[
		"ConvolverNode"
	],
	[
		"ConvolverNode",
		"prototype",
		"normalize"
	],
	[
		"ConvolverNode",
		"prototype",
		"buffer"
	],
	[
		"ConvolverNode",
		"prototype"
	],
	[
		"CookieChangeEvent"
	],
	[
		"CookieChangeEvent",
		"prototype",
		"deleted"
	],
	[
		"CookieChangeEvent",
		"prototype",
		"changed"
	],
	[
		"CookieChangeEvent",
		"prototype"
	],
	[
		"CookieStore"
	],
	[
		"CookieStore",
		"prototype",
		"set()"
	],
	[
		"CookieStore",
		"prototype",
		"onchange"
	],
	[
		"CookieStore",
		"prototype",
		"getAll()"
	],
	[
		"CookieStore",
		"prototype",
		"get()"
	],
	[
		"CookieStore",
		"prototype",
		"delete()"
	],
	[
		"CookieStore",
		"prototype"
	],
	[
		"CookieStoreManager"
	],
	[
		"CookieStoreManager",
		"prototype",
		"unsubscribe()"
	],
	[
		"CookieStoreManager",
		"prototype",
		"subscribe()"
	],
	[
		"CookieStoreManager",
		"prototype",
		"getSubscriptions()"
	],
	[
		"CookieStoreManager",
		"prototype"
	],
	[
		"CountQueuingStrategy"
	],
	[
		"CountQueuingStrategy",
		"prototype",
		"size"
	],
	[
		"CountQueuingStrategy",
		"prototype",
		"highWaterMark"
	],
	[
		"CountQueuingStrategy",
		"prototype"
	],
	[
		"COWL"
	],
	[
		"COWL",
		"prototype"
	],
	[
		"COWL",
		"privilege"
	],
	[
		"COWL",
		"integrity"
	],
	[
		"COWL",
		"confidentiality"
	],
	[
		"CrashReportBody"
	],
	[
		"CrashReportBody",
		"prototype",
		"toJSON()"
	],
	[
		"CrashReportBody",
		"prototype",
		"stack"
	],
	[
		"CrashReportBody",
		"prototype",
		"reason"
	],
	[
		"CrashReportBody",
		"prototype"
	],
	[
		"Credential"
	],
	[
		"Credential",
		"prototype",
		"type"
	],
	[
		"Credential",
		"prototype",
		"id"
	],
	[
		"Credential",
		"prototype"
	],
	[
		"Credential",
		"willRequestConditionalCreation()"
	],
	[
		"Credential",
		"isConditionalMediationAvailable()"
	],
	[
		"CredentialsContainer"
	],
	[
		"CredentialsContainer",
		"prototype",
		"store()"
	],
	[
		"CredentialsContainer",
		"prototype",
		"preventSilentAccess()"
	],
	[
		"CredentialsContainer",
		"prototype",
		"get()"
	],
	[
		"CredentialsContainer",
		"prototype",
		"create()"
	],
	[
		"CredentialsContainer",
		"prototype"
	],
	[
		"CropTarget"
	],
	[
		"CropTarget",
		"prototype"
	],
	[
		"CropTarget",
		"fromElement()"
	],
	[
		"Crypto"
	],
	[
		"Crypto",
		"prototype",
		"subtle"
	],
	[
		"Crypto",
		"prototype",
		"randomUUID()"
	],
	[
		"Crypto",
		"prototype",
		"getRandomValues()"
	],
	[
		"Crypto",
		"prototype"
	],
	[
		"CryptoKey"
	],
	[
		"CryptoKey",
		"prototype",
		"usages"
	],
	[
		"CryptoKey",
		"prototype",
		"type"
	],
	[
		"CryptoKey",
		"prototype",
		"extractable"
	],
	[
		"CryptoKey",
		"prototype",
		"algorithm"
	],
	[
		"CryptoKey",
		"prototype"
	],
	[
		"CSPViolationReportBody"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"toJSON()"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"statusCode"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"sourceFile"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"sample"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"referrer"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"originalPolicy"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"lineNumber"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"effectiveDirective"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"documentURL"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"disposition"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"columnNumber"
	],
	[
		"CSPViolationReportBody",
		"prototype",
		"blockedURL"
	],
	[
		"CSPViolationReportBody",
		"prototype"
	],
	[
		"CSS"
	],
	[
		"CSS",
		"vw()"
	],
	[
		"CSS",
		"vmin()"
	],
	[
		"CSS",
		"vmax()"
	],
	[
		"CSS",
		"vi()"
	],
	[
		"CSS",
		"vh()"
	],
	[
		"CSS",
		"vb()"
	],
	[
		"CSS",
		"turn()"
	],
	[
		"CSS",
		"svw()"
	],
	[
		"CSS",
		"svmin()"
	],
	[
		"CSS",
		"svmax()"
	],
	[
		"CSS",
		"svi()"
	],
	[
		"CSS",
		"svh()"
	],
	[
		"CSS",
		"svb()"
	],
	[
		"CSS",
		"supports()"
	],
	[
		"CSS",
		"s()"
	],
	[
		"CSS",
		"rlh()"
	],
	[
		"CSS",
		"ric()"
	],
	[
		"CSS",
		"rex()"
	],
	[
		"CSS",
		"rem()"
	],
	[
		"CSS",
		"registerProperty()"
	],
	[
		"CSS",
		"rch()"
	],
	[
		"CSS",
		"rcap()"
	],
	[
		"CSS",
		"rad()"
	],
	[
		"CSS",
		"px()"
	],
	[
		"CSS",
		"pt()"
	],
	[
		"CSS",
		"percent()"
	],
	[
		"CSS",
		"pc()"
	],
	[
		"CSS",
		"parseValueList()"
	],
	[
		"CSS",
		"parseValue()"
	],
	[
		"CSS",
		"parseStylesheet()"
	],
	[
		"CSS",
		"parseRuleList()"
	],
	[
		"CSS",
		"parseRule()"
	],
	[
		"CSS",
		"parseDeclarationList()"
	],
	[
		"CSS",
		"parseDeclaration()"
	],
	[
		"CSS",
		"parseCommaValueList()"
	],
	[
		"CSS",
		"paintWorklet"
	],
	[
		"CSS",
		"number()"
	],
	[
		"CSS",
		"ms()"
	],
	[
		"CSS",
		"mm()"
	],
	[
		"CSS",
		"lvw()"
	],
	[
		"CSS",
		"lvmin()"
	],
	[
		"CSS",
		"lvmax()"
	],
	[
		"CSS",
		"lvi()"
	],
	[
		"CSS",
		"lvh()"
	],
	[
		"CSS",
		"lvb()"
	],
	[
		"CSS",
		"lh()"
	],
	[
		"CSS",
		"layoutWorklet"
	],
	[
		"CSS",
		"kHz()"
	],
	[
		"CSS",
		"in()"
	],
	[
		"CSS",
		"ic()"
	],
	[
		"CSS",
		"highlights"
	],
	[
		"CSS",
		"grad()"
	],
	[
		"CSS",
		"fr()"
	],
	[
		"CSS",
		"ex()"
	],
	[
		"CSS",
		"escape()"
	],
	[
		"CSS",
		"em()"
	],
	[
		"CSS",
		"elementSources"
	],
	[
		"CSS",
		"dvw()"
	],
	[
		"CSS",
		"dvmin()"
	],
	[
		"CSS",
		"dvmax()"
	],
	[
		"CSS",
		"dvi()"
	],
	[
		"CSS",
		"dvh()"
	],
	[
		"CSS",
		"dvb()"
	],
	[
		"CSS",
		"dppx()"
	],
	[
		"CSS",
		"dpi()"
	],
	[
		"CSS",
		"dpcm()"
	],
	[
		"CSS",
		"deg()"
	],
	[
		"CSS",
		"cqw()"
	],
	[
		"CSS",
		"cqmin()"
	],
	[
		"CSS",
		"cqmax()"
	],
	[
		"CSS",
		"cqi()"
	],
	[
		"CSS",
		"cqh()"
	],
	[
		"CSS",
		"cqb()"
	],
	[
		"CSS",
		"cm()"
	],
	[
		"CSS",
		"ch()"
	],
	[
		"CSS",
		"cap()"
	],
	[
		"CSS",
		"animationWorklet"
	],
	[
		"CSS",
		"Q()"
	],
	[
		"CSS",
		"Hz()"
	],
	[
		"CSSAnimation"
	],
	[
		"CSSAnimation",
		"prototype",
		"animationName"
	],
	[
		"CSSAnimation",
		"prototype"
	],
	[
		"CSSColor"
	],
	[
		"CSSColor",
		"prototype",
		"colorSpace"
	],
	[
		"CSSColor",
		"prototype",
		"channels"
	],
	[
		"CSSColor",
		"prototype",
		"alpha"
	],
	[
		"CSSColor",
		"prototype"
	],
	[
		"CSSColorProfileRule"
	],
	[
		"CSSColorProfileRule",
		"prototype",
		"src"
	],
	[
		"CSSColorProfileRule",
		"prototype",
		"renderingIntent"
	],
	[
		"CSSColorProfileRule",
		"prototype",
		"name"
	],
	[
		"CSSColorProfileRule",
		"prototype",
		"components"
	],
	[
		"CSSColorProfileRule",
		"prototype"
	],
	[
		"CSSColorValue"
	],
	[
		"CSSColorValue",
		"prototype"
	],
	[
		"CSSColorValue",
		"parse()"
	],
	[
		"CSSConditionRule"
	],
	[
		"CSSConditionRule",
		"prototype",
		"conditionText"
	],
	[
		"CSSConditionRule",
		"prototype"
	],
	[
		"CSSContainerRule"
	],
	[
		"CSSContainerRule",
		"prototype",
		"containerQuery"
	],
	[
		"CSSContainerRule",
		"prototype",
		"containerName"
	],
	[
		"CSSContainerRule",
		"prototype"
	],
	[
		"CSSCounterStyleRule"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"system"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"symbols"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"suffix"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"speakAs"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"range"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"prefix"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"pad"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"negative"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"name"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"fallback"
	],
	[
		"CSSCounterStyleRule",
		"prototype",
		"additiveSymbols"
	],
	[
		"CSSCounterStyleRule",
		"prototype"
	],
	[
		"CSSFontFaceDescriptors"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"unicodeRange"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"unicode-range"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"src"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"lineGapOverride"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"line-gap-override"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontWidth"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontWeight"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontVariationSettings"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontStyle"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontStretch"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontNamedInstance"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontLanguageOverride"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontFeatureSettings"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontFamily"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"fontDisplay"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-width"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-weight"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-variation-settings"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-style"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-stretch"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-named-instance"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-language-override"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-feature-settings"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-family"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"font-display"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"descentOverride"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"descent-override"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"ascentOverride"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype",
		"ascent-override"
	],
	[
		"CSSFontFaceDescriptors",
		"prototype"
	],
	[
		"CSSFontFaceRule"
	],
	[
		"CSSFontFaceRule",
		"prototype",
		"style"
	],
	[
		"CSSFontFaceRule",
		"prototype"
	],
	[
		"CSSFontFeatureValuesMap"
	],
	[
		"CSSFontFeatureValuesMap",
		"prototype",
		"set()"
	],
	[
		"CSSFontFeatureValuesMap",
		"prototype"
	],
	[
		"CSSFontFeatureValuesRule"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"swash"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"stylistic"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"styleset"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"ornaments"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"historicalForms"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"fontFamily"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"characterVariant"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype",
		"annotation"
	],
	[
		"CSSFontFeatureValuesRule",
		"prototype"
	],
	[
		"CSSFontPaletteValuesRule"
	],
	[
		"CSSFontPaletteValuesRule",
		"prototype",
		"overrideColors"
	],
	[
		"CSSFontPaletteValuesRule",
		"prototype",
		"name"
	],
	[
		"CSSFontPaletteValuesRule",
		"prototype",
		"fontFamily"
	],
	[
		"CSSFontPaletteValuesRule",
		"prototype",
		"basePalette"
	],
	[
		"CSSFontPaletteValuesRule",
		"prototype"
	],
	[
		"CSSFunctionRule"
	],
	[
		"CSSFunctionRule",
		"prototype"
	],
	[
		"CSSGroupingRule"
	],
	[
		"CSSGroupingRule",
		"prototype",
		"insertRule()"
	],
	[
		"CSSGroupingRule",
		"prototype",
		"deleteRule()"
	],
	[
		"CSSGroupingRule",
		"prototype",
		"cssRules"
	],
	[
		"CSSGroupingRule",
		"prototype"
	],
	[
		"CSSHSL"
	],
	[
		"CSSHSL",
		"prototype",
		"s"
	],
	[
		"CSSHSL",
		"prototype",
		"l"
	],
	[
		"CSSHSL",
		"prototype",
		"h"
	],
	[
		"CSSHSL",
		"prototype",
		"alpha"
	],
	[
		"CSSHSL",
		"prototype"
	],
	[
		"CSSHWB"
	],
	[
		"CSSHWB",
		"prototype",
		"w"
	],
	[
		"CSSHWB",
		"prototype",
		"h"
	],
	[
		"CSSHWB",
		"prototype",
		"b"
	],
	[
		"CSSHWB",
		"prototype",
		"alpha"
	],
	[
		"CSSHWB",
		"prototype"
	],
	[
		"CSSImageValue"
	],
	[
		"CSSImageValue",
		"prototype"
	],
	[
		"CSSImportRule"
	],
	[
		"CSSImportRule",
		"prototype",
		"supportsText"
	],
	[
		"CSSImportRule",
		"prototype",
		"styleSheet"
	],
	[
		"CSSImportRule",
		"prototype",
		"media"
	],
	[
		"CSSImportRule",
		"prototype",
		"layerName"
	],
	[
		"CSSImportRule",
		"prototype",
		"href"
	],
	[
		"CSSImportRule",
		"prototype"
	],
	[
		"CSSKeyframeRule"
	],
	[
		"CSSKeyframeRule",
		"prototype",
		"style"
	],
	[
		"CSSKeyframeRule",
		"prototype",
		"keyText"
	],
	[
		"CSSKeyframeRule",
		"prototype"
	],
	[
		"CSSKeyframesRule"
	],
	[
		"CSSKeyframesRule",
		"prototype",
		"name"
	],
	[
		"CSSKeyframesRule",
		"prototype",
		"length"
	],
	[
		"CSSKeyframesRule",
		"prototype",
		"findRule()"
	],
	[
		"CSSKeyframesRule",
		"prototype",
		"deleteRule()"
	],
	[
		"CSSKeyframesRule",
		"prototype",
		"cssRules"
	],
	[
		"CSSKeyframesRule",
		"prototype",
		"appendRule()"
	],
	[
		"CSSKeyframesRule",
		"prototype"
	],
	[
		"CSSKeywordValue"
	],
	[
		"CSSKeywordValue",
		"prototype",
		"value"
	],
	[
		"CSSKeywordValue",
		"prototype"
	],
	[
		"CSSLab"
	],
	[
		"CSSLab",
		"prototype",
		"l"
	],
	[
		"CSSLab",
		"prototype",
		"b"
	],
	[
		"CSSLab",
		"prototype",
		"alpha"
	],
	[
		"CSSLab",
		"prototype",
		"a"
	],
	[
		"CSSLab",
		"prototype"
	],
	[
		"CSSLayerBlockRule"
	],
	[
		"CSSLayerBlockRule",
		"prototype",
		"name"
	],
	[
		"CSSLayerBlockRule",
		"prototype"
	],
	[
		"CSSLayerStatementRule"
	],
	[
		"CSSLayerStatementRule",
		"prototype",
		"nameList"
	],
	[
		"CSSLayerStatementRule",
		"prototype"
	],
	[
		"CSSLCH"
	],
	[
		"CSSLCH",
		"prototype",
		"l"
	],
	[
		"CSSLCH",
		"prototype",
		"h"
	],
	[
		"CSSLCH",
		"prototype",
		"c"
	],
	[
		"CSSLCH",
		"prototype",
		"alpha"
	],
	[
		"CSSLCH",
		"prototype"
	],
	[
		"CSSMarginRule"
	],
	[
		"CSSMarginRule",
		"prototype",
		"style"
	],
	[
		"CSSMarginRule",
		"prototype",
		"name"
	],
	[
		"CSSMarginRule",
		"prototype"
	],
	[
		"CSSMathClamp"
	],
	[
		"CSSMathClamp",
		"prototype",
		"value"
	],
	[
		"CSSMathClamp",
		"prototype",
		"upper"
	],
	[
		"CSSMathClamp",
		"prototype",
		"lower"
	],
	[
		"CSSMathClamp",
		"prototype"
	],
	[
		"CSSMathInvert"
	],
	[
		"CSSMathInvert",
		"prototype",
		"value"
	],
	[
		"CSSMathInvert",
		"prototype"
	],
	[
		"CSSMathMax"
	],
	[
		"CSSMathMax",
		"prototype",
		"values"
	],
	[
		"CSSMathMax",
		"prototype"
	],
	[
		"CSSMathMin"
	],
	[
		"CSSMathMin",
		"prototype",
		"values"
	],
	[
		"CSSMathMin",
		"prototype"
	],
	[
		"CSSMathNegate"
	],
	[
		"CSSMathNegate",
		"prototype",
		"value"
	],
	[
		"CSSMathNegate",
		"prototype"
	],
	[
		"CSSMathProduct"
	],
	[
		"CSSMathProduct",
		"prototype",
		"values"
	],
	[
		"CSSMathProduct",
		"prototype"
	],
	[
		"CSSMathSum"
	],
	[
		"CSSMathSum",
		"prototype",
		"values"
	],
	[
		"CSSMathSum",
		"prototype"
	],
	[
		"CSSMathValue"
	],
	[
		"CSSMathValue",
		"prototype",
		"operator"
	],
	[
		"CSSMathValue",
		"prototype"
	],
	[
		"CSSMatrixComponent"
	],
	[
		"CSSMatrixComponent",
		"prototype",
		"matrix"
	],
	[
		"CSSMatrixComponent",
		"prototype"
	],
	[
		"CSSMediaRule"
	],
	[
		"CSSMediaRule",
		"prototype",
		"media"
	],
	[
		"CSSMediaRule",
		"prototype",
		"matches"
	],
	[
		"CSSMediaRule",
		"prototype"
	],
	[
		"CSSNamespaceRule"
	],
	[
		"CSSNamespaceRule",
		"prototype",
		"prefix"
	],
	[
		"CSSNamespaceRule",
		"prototype",
		"namespaceURI"
	],
	[
		"CSSNamespaceRule",
		"prototype"
	],
	[
		"CSSNestedDeclarations"
	],
	[
		"CSSNestedDeclarations",
		"prototype",
		"style"
	],
	[
		"CSSNestedDeclarations",
		"prototype"
	],
	[
		"CSSNumericArray"
	],
	[
		"CSSNumericArray",
		"prototype",
		"length"
	],
	[
		"CSSNumericArray",
		"prototype"
	],
	[
		"CSSNumericValue"
	],
	[
		"CSSNumericValue",
		"prototype",
		"type()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"toSum()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"to()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"sub()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"mul()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"min()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"max()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"equals()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"div()"
	],
	[
		"CSSNumericValue",
		"prototype",
		"add()"
	],
	[
		"CSSNumericValue",
		"prototype"
	],
	[
		"CSSNumericValue",
		"parse()"
	],
	[
		"CSSOKLab"
	],
	[
		"CSSOKLab",
		"prototype",
		"l"
	],
	[
		"CSSOKLab",
		"prototype",
		"b"
	],
	[
		"CSSOKLab",
		"prototype",
		"alpha"
	],
	[
		"CSSOKLab",
		"prototype",
		"a"
	],
	[
		"CSSOKLab",
		"prototype"
	],
	[
		"CSSOKLCH"
	],
	[
		"CSSOKLCH",
		"prototype",
		"l"
	],
	[
		"CSSOKLCH",
		"prototype",
		"h"
	],
	[
		"CSSOKLCH",
		"prototype",
		"c"
	],
	[
		"CSSOKLCH",
		"prototype",
		"alpha"
	],
	[
		"CSSOKLCH",
		"prototype"
	],
	[
		"CSSPageDescriptors"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"size"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"pageOrientation"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"page-orientation"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"marks"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"marginTop"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"marginRight"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"marginLeft"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"marginBottom"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"margin-top"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"margin-right"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"margin-left"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"margin-bottom"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"margin"
	],
	[
		"CSSPageDescriptors",
		"prototype",
		"bleed"
	],
	[
		"CSSPageDescriptors",
		"prototype"
	],
	[
		"CSSPageRule"
	],
	[
		"CSSPageRule",
		"prototype",
		"style"
	],
	[
		"CSSPageRule",
		"prototype",
		"selectorText"
	],
	[
		"CSSPageRule",
		"prototype"
	],
	[
		"CSSParserAtRule"
	],
	[
		"CSSParserAtRule",
		"prototype",
		"prelude"
	],
	[
		"CSSParserAtRule",
		"prototype",
		"name"
	],
	[
		"CSSParserAtRule",
		"prototype",
		"body"
	],
	[
		"CSSParserAtRule",
		"prototype"
	],
	[
		"CSSParserBlock"
	],
	[
		"CSSParserBlock",
		"prototype",
		"name"
	],
	[
		"CSSParserBlock",
		"prototype",
		"body"
	],
	[
		"CSSParserBlock",
		"prototype"
	],
	[
		"CSSParserDeclaration"
	],
	[
		"CSSParserDeclaration",
		"prototype",
		"name"
	],
	[
		"CSSParserDeclaration",
		"prototype",
		"body"
	],
	[
		"CSSParserDeclaration",
		"prototype"
	],
	[
		"CSSParserFunction"
	],
	[
		"CSSParserFunction",
		"prototype",
		"name"
	],
	[
		"CSSParserFunction",
		"prototype",
		"args"
	],
	[
		"CSSParserFunction",
		"prototype"
	],
	[
		"CSSParserQualifiedRule"
	],
	[
		"CSSParserQualifiedRule",
		"prototype",
		"prelude"
	],
	[
		"CSSParserQualifiedRule",
		"prototype",
		"body"
	],
	[
		"CSSParserQualifiedRule",
		"prototype"
	],
	[
		"CSSParserRule"
	],
	[
		"CSSParserRule",
		"prototype"
	],
	[
		"CSSParserValue"
	],
	[
		"CSSParserValue",
		"prototype"
	],
	[
		"CSSPerspective"
	],
	[
		"CSSPerspective",
		"prototype",
		"length"
	],
	[
		"CSSPerspective",
		"prototype"
	],
	[
		"CSSPositionTryDescriptors"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"width"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"top"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"right"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"positionArea"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"positionAnchor"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"position-area"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"position-anchor"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"placeSelf"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"place-self"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"minWidth"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"minInlineSize"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"minHeight"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"minBlockSize"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"min-width"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"min-inline-size"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"min-height"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"min-block-size"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"maxWidth"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"maxInlineSize"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"maxHeight"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"maxBlockSize"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"max-width"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"max-inline-size"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"max-height"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"max-block-size"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginTop"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginRight"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginLeft"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginInlineStart"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginInlineEnd"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginInline"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginBottom"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginBlockStart"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginBlockEnd"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"marginBlock"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-top"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-right"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-left"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-inline-start"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-inline-end"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-inline"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-bottom"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-block-start"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-block-end"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin-block"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"margin"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"left"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"justifySelf"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"justify-self"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"insetInlineStart"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"insetInlineEnd"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"insetInline"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"insetBlockStart"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"insetBlockEnd"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"insetBlock"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inset-inline-start"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inset-inline-end"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inset-inline"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inset-block-start"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inset-block-end"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inset-block"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inset"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inlineSize"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"inline-size"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"height"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"bottom"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"blockSize"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"block-size"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"alignSelf"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype",
		"align-self"
	],
	[
		"CSSPositionTryDescriptors",
		"prototype"
	],
	[
		"CSSPositionTryRule"
	],
	[
		"CSSPositionTryRule",
		"prototype",
		"style"
	],
	[
		"CSSPositionTryRule",
		"prototype",
		"name"
	],
	[
		"CSSPositionTryRule",
		"prototype"
	],
	[
		"CSSPropertyRule"
	],
	[
		"CSSPropertyRule",
		"prototype",
		"syntax"
	],
	[
		"CSSPropertyRule",
		"prototype",
		"name"
	],
	[
		"CSSPropertyRule",
		"prototype",
		"initialValue"
	],
	[
		"CSSPropertyRule",
		"prototype",
		"inherits"
	],
	[
		"CSSPropertyRule",
		"prototype"
	],
	[
		"CSSPseudoElement"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"type"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"pseudo()"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"parent"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"getBoxQuads()"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"element"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"convertRectFromNode()"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"convertQuadFromNode()"
	],
	[
		"CSSPseudoElement",
		"prototype",
		"convertPointFromNode()"
	],
	[
		"CSSPseudoElement",
		"prototype"
	],
	[
		"CSSRGB"
	],
	[
		"CSSRGB",
		"prototype",
		"r"
	],
	[
		"CSSRGB",
		"prototype",
		"g"
	],
	[
		"CSSRGB",
		"prototype",
		"b"
	],
	[
		"CSSRGB",
		"prototype",
		"alpha"
	],
	[
		"CSSRGB",
		"prototype"
	],
	[
		"CSSRotate"
	],
	[
		"CSSRotate",
		"prototype",
		"z"
	],
	[
		"CSSRotate",
		"prototype",
		"y"
	],
	[
		"CSSRotate",
		"prototype",
		"x"
	],
	[
		"CSSRotate",
		"prototype",
		"angle"
	],
	[
		"CSSRotate",
		"prototype"
	],
	[
		"CSSRule"
	],
	[
		"CSSRule",
		"prototype",
		"type"
	],
	[
		"CSSRule",
		"prototype",
		"parentStyleSheet"
	],
	[
		"CSSRule",
		"prototype",
		"parentRule"
	],
	[
		"CSSRule",
		"prototype",
		"cssText"
	],
	[
		"CSSRule",
		"prototype",
		"SUPPORTS_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"STYLE_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"PAGE_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"NAMESPACE_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"MEDIA_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"MARGIN_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"KEYFRAME_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"KEYFRAMES_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"IMPORT_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"FONT_FEATURE_VALUES_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"FONT_FACE_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"COUNTER_STYLE_RULE"
	],
	[
		"CSSRule",
		"prototype",
		"CHARSET_RULE"
	],
	[
		"CSSRule",
		"prototype"
	],
	[
		"CSSRule",
		"SUPPORTS_RULE"
	],
	[
		"CSSRule",
		"STYLE_RULE"
	],
	[
		"CSSRule",
		"PAGE_RULE"
	],
	[
		"CSSRule",
		"NAMESPACE_RULE"
	],
	[
		"CSSRule",
		"MEDIA_RULE"
	],
	[
		"CSSRule",
		"MARGIN_RULE"
	],
	[
		"CSSRule",
		"KEYFRAME_RULE"
	],
	[
		"CSSRule",
		"KEYFRAMES_RULE"
	],
	[
		"CSSRule",
		"IMPORT_RULE"
	],
	[
		"CSSRule",
		"FONT_FEATURE_VALUES_RULE"
	],
	[
		"CSSRule",
		"FONT_FACE_RULE"
	],
	[
		"CSSRule",
		"COUNTER_STYLE_RULE"
	],
	[
		"CSSRule",
		"CHARSET_RULE"
	],
	[
		"CSSRuleList"
	],
	[
		"CSSRuleList",
		"prototype",
		"length"
	],
	[
		"CSSRuleList",
		"prototype",
		"item()"
	],
	[
		"CSSRuleList",
		"prototype"
	],
	[
		"CSSScale"
	],
	[
		"CSSScale",
		"prototype",
		"z"
	],
	[
		"CSSScale",
		"prototype",
		"y"
	],
	[
		"CSSScale",
		"prototype",
		"x"
	],
	[
		"CSSScale",
		"prototype"
	],
	[
		"CSSScopeRule"
	],
	[
		"CSSScopeRule",
		"prototype",
		"start"
	],
	[
		"CSSScopeRule",
		"prototype",
		"end"
	],
	[
		"CSSScopeRule",
		"prototype"
	],
	[
		"CSSSkew"
	],
	[
		"CSSSkew",
		"prototype",
		"ay"
	],
	[
		"CSSSkew",
		"prototype",
		"ax"
	],
	[
		"CSSSkew",
		"prototype"
	],
	[
		"CSSSkewX"
	],
	[
		"CSSSkewX",
		"prototype",
		"ax"
	],
	[
		"CSSSkewX",
		"prototype"
	],
	[
		"CSSSkewY"
	],
	[
		"CSSSkewY",
		"prototype",
		"ay"
	],
	[
		"CSSSkewY",
		"prototype"
	],
	[
		"CSSStartingStyleRule"
	],
	[
		"CSSStartingStyleRule",
		"prototype"
	],
	[
		"CSSStyleDeclaration"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"setProperty()"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"removeProperty()"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"parentRule"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"length"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"item()"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"getPropertyValue()"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"getPropertyPriority()"
	],
	[
		"CSSStyleDeclaration",
		"prototype",
		"cssText"
	],
	[
		"CSSStyleDeclaration",
		"prototype"
	],
	[
		"CSSStyleProperties"
	],
	[
		"CSSStyleProperties",
		"prototype",
		"cssFloat"
	],
	[
		"CSSStyleProperties",
		"prototype"
	],
	[
		"CSSStyleRule"
	],
	[
		"CSSStyleRule",
		"prototype",
		"styleMap"
	],
	[
		"CSSStyleRule",
		"prototype",
		"style"
	],
	[
		"CSSStyleRule",
		"prototype",
		"selectorText"
	],
	[
		"CSSStyleRule",
		"prototype"
	],
	[
		"CSSStyleSheet"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"rules"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"replaceSync()"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"replace()"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"removeRule()"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"ownerRule"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"insertRule()"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"deleteRule()"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"cssRules"
	],
	[
		"CSSStyleSheet",
		"prototype",
		"addRule()"
	],
	[
		"CSSStyleSheet",
		"prototype"
	],
	[
		"CSSStyleValue"
	],
	[
		"CSSStyleValue",
		"prototype"
	],
	[
		"CSSStyleValue",
		"parseAll()"
	],
	[
		"CSSStyleValue",
		"parse()"
	],
	[
		"CSSSupportsRule"
	],
	[
		"CSSSupportsRule",
		"prototype",
		"matches"
	],
	[
		"CSSSupportsRule",
		"prototype"
	],
	[
		"CSSToggle"
	],
	[
		"CSSToggle",
		"prototype",
		"valueAsString"
	],
	[
		"CSSToggle",
		"prototype",
		"valueAsNumber"
	],
	[
		"CSSToggle",
		"prototype",
		"value"
	],
	[
		"CSSToggle",
		"prototype",
		"states"
	],
	[
		"CSSToggle",
		"prototype",
		"scope"
	],
	[
		"CSSToggle",
		"prototype",
		"group"
	],
	[
		"CSSToggle",
		"prototype",
		"cycle"
	],
	[
		"CSSToggle",
		"prototype"
	],
	[
		"CSSToggleEvent"
	],
	[
		"CSSToggleEvent",
		"prototype",
		"toggleName"
	],
	[
		"CSSToggleEvent",
		"prototype",
		"toggle"
	],
	[
		"CSSToggleEvent",
		"prototype"
	],
	[
		"CSSToggleMap"
	],
	[
		"CSSToggleMap",
		"prototype",
		"set()"
	],
	[
		"CSSToggleMap",
		"prototype"
	],
	[
		"CSSTransformComponent"
	],
	[
		"CSSTransformComponent",
		"prototype",
		"toMatrix()"
	],
	[
		"CSSTransformComponent",
		"prototype",
		"is2D"
	],
	[
		"CSSTransformComponent",
		"prototype"
	],
	[
		"CSSTransformValue"
	],
	[
		"CSSTransformValue",
		"prototype",
		"toMatrix()"
	],
	[
		"CSSTransformValue",
		"prototype",
		"length"
	],
	[
		"CSSTransformValue",
		"prototype",
		"is2D"
	],
	[
		"CSSTransformValue",
		"prototype"
	],
	[
		"CSSTransition"
	],
	[
		"CSSTransition",
		"prototype",
		"transitionProperty"
	],
	[
		"CSSTransition",
		"prototype"
	],
	[
		"CSSTranslate"
	],
	[
		"CSSTranslate",
		"prototype",
		"z"
	],
	[
		"CSSTranslate",
		"prototype",
		"y"
	],
	[
		"CSSTranslate",
		"prototype",
		"x"
	],
	[
		"CSSTranslate",
		"prototype"
	],
	[
		"CSSUnitValue"
	],
	[
		"CSSUnitValue",
		"prototype",
		"value"
	],
	[
		"CSSUnitValue",
		"prototype",
		"unit"
	],
	[
		"CSSUnitValue",
		"prototype"
	],
	[
		"CSSUnparsedValue"
	],
	[
		"CSSUnparsedValue",
		"prototype",
		"length"
	],
	[
		"CSSUnparsedValue",
		"prototype"
	],
	[
		"CSSVariableReferenceValue"
	],
	[
		"CSSVariableReferenceValue",
		"prototype",
		"variable"
	],
	[
		"CSSVariableReferenceValue",
		"prototype",
		"fallback"
	],
	[
		"CSSVariableReferenceValue",
		"prototype"
	],
	[
		"CSSViewTransitionRule"
	],
	[
		"CSSViewTransitionRule",
		"prototype",
		"types"
	],
	[
		"CSSViewTransitionRule",
		"prototype",
		"navigation"
	],
	[
		"CSSViewTransitionRule",
		"prototype"
	],
	[
		"CustomElementRegistry"
	],
	[
		"CustomElementRegistry",
		"prototype",
		"whenDefined()"
	],
	[
		"CustomElementRegistry",
		"prototype",
		"upgrade()"
	],
	[
		"CustomElementRegistry",
		"prototype",
		"getName()"
	],
	[
		"CustomElementRegistry",
		"prototype",
		"get()"
	],
	[
		"CustomElementRegistry",
		"prototype",
		"define()"
	],
	[
		"CustomElementRegistry",
		"prototype"
	],
	[
		"CustomEvent"
	],
	[
		"CustomEvent",
		"prototype",
		"initCustomEvent()"
	],
	[
		"CustomEvent",
		"prototype",
		"detail"
	],
	[
		"CustomEvent",
		"prototype"
	],
	[
		"CustomStateSet"
	],
	[
		"CustomStateSet",
		"prototype"
	],
	[
		"DataCue"
	],
	[
		"DataCue",
		"prototype",
		"value"
	],
	[
		"DataCue",
		"prototype",
		"type"
	],
	[
		"DataCue",
		"prototype"
	],
	[
		"DataTransfer"
	],
	[
		"DataTransfer",
		"prototype",
		"types"
	],
	[
		"DataTransfer",
		"prototype",
		"setDragImage()"
	],
	[
		"DataTransfer",
		"prototype",
		"setData()"
	],
	[
		"DataTransfer",
		"prototype",
		"items"
	],
	[
		"DataTransfer",
		"prototype",
		"getData()"
	],
	[
		"DataTransfer",
		"prototype",
		"files"
	],
	[
		"DataTransfer",
		"prototype",
		"effectAllowed"
	],
	[
		"DataTransfer",
		"prototype",
		"dropEffect"
	],
	[
		"DataTransfer",
		"prototype",
		"clearData()"
	],
	[
		"DataTransfer",
		"prototype"
	],
	[
		"DataTransferItem"
	],
	[
		"DataTransferItem",
		"prototype",
		"webkitGetAsEntry()"
	],
	[
		"DataTransferItem",
		"prototype",
		"type"
	],
	[
		"DataTransferItem",
		"prototype",
		"kind"
	],
	[
		"DataTransferItem",
		"prototype",
		"getAsString()"
	],
	[
		"DataTransferItem",
		"prototype",
		"getAsFileSystemHandle()"
	],
	[
		"DataTransferItem",
		"prototype",
		"getAsFile()"
	],
	[
		"DataTransferItem",
		"prototype"
	],
	[
		"DataTransferItemList"
	],
	[
		"DataTransferItemList",
		"prototype",
		"remove()"
	],
	[
		"DataTransferItemList",
		"prototype",
		"length"
	],
	[
		"DataTransferItemList",
		"prototype",
		"clear()"
	],
	[
		"DataTransferItemList",
		"prototype",
		"add()"
	],
	[
		"DataTransferItemList",
		"prototype"
	],
	[
		"DeadFragmentInformation"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"width"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"top"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"previousSibling"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"previousInBox"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"node"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"nextSibling"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"nextInBox"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"left"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"isOverflowed"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"height"
	],
	[
		"DeadFragmentInformation",
		"prototype",
		"children"
	],
	[
		"DeadFragmentInformation",
		"prototype"
	],
	[
		"DecompressionStream"
	],
	[
		"DecompressionStream",
		"prototype",
		"writable"
	],
	[
		"DecompressionStream",
		"prototype",
		"readable"
	],
	[
		"DecompressionStream",
		"prototype"
	],
	[
		"DelayNode"
	],
	[
		"DelayNode",
		"prototype",
		"delayTime"
	],
	[
		"DelayNode",
		"prototype"
	],
	[
		"DeprecationReportBody"
	],
	[
		"DeprecationReportBody",
		"prototype",
		"toJSON()"
	],
	[
		"DeprecationReportBody",
		"prototype",
		"sourceFile"
	],
	[
		"DeprecationReportBody",
		"prototype",
		"message"
	],
	[
		"DeprecationReportBody",
		"prototype",
		"lineNumber"
	],
	[
		"DeprecationReportBody",
		"prototype",
		"id"
	],
	[
		"DeprecationReportBody",
		"prototype",
		"columnNumber"
	],
	[
		"DeprecationReportBody",
		"prototype",
		"anticipatedRemoval"
	],
	[
		"DeprecationReportBody",
		"prototype"
	],
	[
		"DeviceChangeEvent"
	],
	[
		"DeviceChangeEvent",
		"prototype",
		"userInsertedDevices"
	],
	[
		"DeviceChangeEvent",
		"prototype",
		"devices"
	],
	[
		"DeviceChangeEvent",
		"prototype"
	],
	[
		"DeviceMotionEvent"
	],
	[
		"DeviceMotionEvent",
		"prototype",
		"rotationRate"
	],
	[
		"DeviceMotionEvent",
		"prototype",
		"interval"
	],
	[
		"DeviceMotionEvent",
		"prototype",
		"accelerationIncludingGravity"
	],
	[
		"DeviceMotionEvent",
		"prototype",
		"acceleration"
	],
	[
		"DeviceMotionEvent",
		"prototype"
	],
	[
		"DeviceMotionEvent",
		"requestPermission()"
	],
	[
		"DeviceMotionEventAcceleration"
	],
	[
		"DeviceMotionEventAcceleration",
		"prototype",
		"z"
	],
	[
		"DeviceMotionEventAcceleration",
		"prototype",
		"y"
	],
	[
		"DeviceMotionEventAcceleration",
		"prototype",
		"x"
	],
	[
		"DeviceMotionEventAcceleration",
		"prototype"
	],
	[
		"DeviceMotionEventRotationRate"
	],
	[
		"DeviceMotionEventRotationRate",
		"prototype",
		"gamma"
	],
	[
		"DeviceMotionEventRotationRate",
		"prototype",
		"beta"
	],
	[
		"DeviceMotionEventRotationRate",
		"prototype",
		"alpha"
	],
	[
		"DeviceMotionEventRotationRate",
		"prototype"
	],
	[
		"DeviceOrientationEvent"
	],
	[
		"DeviceOrientationEvent",
		"prototype",
		"gamma"
	],
	[
		"DeviceOrientationEvent",
		"prototype",
		"beta"
	],
	[
		"DeviceOrientationEvent",
		"prototype",
		"alpha"
	],
	[
		"DeviceOrientationEvent",
		"prototype",
		"absolute"
	],
	[
		"DeviceOrientationEvent",
		"prototype"
	],
	[
		"DeviceOrientationEvent",
		"requestPermission()"
	],
	[
		"DevicePosture"
	],
	[
		"DevicePosture",
		"prototype",
		"type"
	],
	[
		"DevicePosture",
		"prototype",
		"onchange"
	],
	[
		"DevicePosture",
		"prototype"
	],
	[
		"DigitalCredential"
	],
	[
		"DigitalCredential",
		"prototype",
		"protocol"
	],
	[
		"DigitalCredential",
		"prototype",
		"data"
	],
	[
		"DigitalCredential",
		"prototype"
	],
	[
		"DigitalGoodsService"
	],
	[
		"DigitalGoodsService",
		"prototype",
		"listPurchases()"
	],
	[
		"DigitalGoodsService",
		"prototype",
		"listPurchaseHistory()"
	],
	[
		"DigitalGoodsService",
		"prototype",
		"getDetails()"
	],
	[
		"DigitalGoodsService",
		"prototype",
		"consume()"
	],
	[
		"DigitalGoodsService",
		"prototype"
	],
	[
		"Document"
	],
	[
		"Document",
		"prototype",
		"writeln()"
	],
	[
		"Document",
		"prototype",
		"write()"
	],
	[
		"Document",
		"prototype",
		"wasDiscarded"
	],
	[
		"Document",
		"prototype",
		"vlinkColor"
	],
	[
		"Document",
		"prototype",
		"visibilityState"
	],
	[
		"Document",
		"prototype",
		"title"
	],
	[
		"Document",
		"prototype",
		"title"
	],
	[
		"Document",
		"prototype",
		"timeline"
	],
	[
		"Document",
		"prototype",
		"styleSheets"
	],
	[
		"Document",
		"prototype",
		"startViewTransition()"
	],
	[
		"Document",
		"prototype",
		"scrollingElement"
	],
	[
		"Document",
		"prototype",
		"scripts"
	],
	[
		"Document",
		"prototype",
		"rootElement"
	],
	[
		"Document",
		"prototype",
		"requestStorageAccessFor()"
	],
	[
		"Document",
		"prototype",
		"requestStorageAccess()"
	],
	[
		"Document",
		"prototype",
		"replaceChildren()"
	],
	[
		"Document",
		"prototype",
		"releaseEvents()"
	],
	[
		"Document",
		"prototype",
		"referrer"
	],
	[
		"Document",
		"prototype",
		"referrer"
	],
	[
		"Document",
		"prototype",
		"readyState"
	],
	[
		"Document",
		"prototype",
		"querySelectorAll()"
	],
	[
		"Document",
		"prototype",
		"querySelector()"
	],
	[
		"Document",
		"prototype",
		"queryCommandValue()"
	],
	[
		"Document",
		"prototype",
		"queryCommandSupported()"
	],
	[
		"Document",
		"prototype",
		"queryCommandState()"
	],
	[
		"Document",
		"prototype",
		"queryCommandIndeterm()"
	],
	[
		"Document",
		"prototype",
		"queryCommandEnabled()"
	],
	[
		"Document",
		"prototype",
		"prerendering"
	],
	[
		"Document",
		"prototype",
		"prepend()"
	],
	[
		"Document",
		"prototype",
		"pointerLockElement"
	],
	[
		"Document",
		"prototype",
		"plugins"
	],
	[
		"Document",
		"prototype",
		"pictureInPictureEnabled"
	],
	[
		"Document",
		"prototype",
		"pictureInPictureElement"
	],
	[
		"Document",
		"prototype",
		"permissionsPolicy"
	],
	[
		"Document",
		"prototype",
		"open()"
	],
	[
		"Document",
		"prototype",
		"onwheel"
	],
	[
		"Document",
		"prototype",
		"onwebkittransitionend"
	],
	[
		"Document",
		"prototype",
		"onwebkitanimationstart"
	],
	[
		"Document",
		"prototype",
		"onwebkitanimationiteration"
	],
	[
		"Document",
		"prototype",
		"onwebkitanimationend"
	],
	[
		"Document",
		"prototype",
		"onwaiting"
	],
	[
		"Document",
		"prototype",
		"onvolumechange"
	],
	[
		"Document",
		"prototype",
		"onvisibilitychange"
	],
	[
		"Document",
		"prototype",
		"ontransitionstart"
	],
	[
		"Document",
		"prototype",
		"ontransitionrun"
	],
	[
		"Document",
		"prototype",
		"ontransitionend"
	],
	[
		"Document",
		"prototype",
		"ontransitioncancel"
	],
	[
		"Document",
		"prototype",
		"ontouchstart"
	],
	[
		"Document",
		"prototype",
		"ontouchmove"
	],
	[
		"Document",
		"prototype",
		"ontouchend"
	],
	[
		"Document",
		"prototype",
		"ontouchcancel"
	],
	[
		"Document",
		"prototype",
		"ontoggle"
	],
	[
		"Document",
		"prototype",
		"ontimeupdate"
	],
	[
		"Document",
		"prototype",
		"onsuspend"
	],
	[
		"Document",
		"prototype",
		"onsubmit"
	],
	[
		"Document",
		"prototype",
		"onstalled"
	],
	[
		"Document",
		"prototype",
		"onsnapchanging"
	],
	[
		"Document",
		"prototype",
		"onsnapchanged"
	],
	[
		"Document",
		"prototype",
		"onslotchange"
	],
	[
		"Document",
		"prototype",
		"onselectstart"
	],
	[
		"Document",
		"prototype",
		"onselectionchange"
	],
	[
		"Document",
		"prototype",
		"onselect"
	],
	[
		"Document",
		"prototype",
		"onseeking"
	],
	[
		"Document",
		"prototype",
		"onseeked"
	],
	[
		"Document",
		"prototype",
		"onsecuritypolicyviolation"
	],
	[
		"Document",
		"prototype",
		"onscrollend"
	],
	[
		"Document",
		"prototype",
		"onscroll"
	],
	[
		"Document",
		"prototype",
		"onresume"
	],
	[
		"Document",
		"prototype",
		"onresize"
	],
	[
		"Document",
		"prototype",
		"onreset"
	],
	[
		"Document",
		"prototype",
		"onreadystatechange"
	],
	[
		"Document",
		"prototype",
		"onratechange"
	],
	[
		"Document",
		"prototype",
		"onprogress"
	],
	[
		"Document",
		"prototype",
		"onprerenderingchange"
	],
	[
		"Document",
		"prototype",
		"onpointerup"
	],
	[
		"Document",
		"prototype",
		"onpointerrawupdate"
	],
	[
		"Document",
		"prototype",
		"onpointerover"
	],
	[
		"Document",
		"prototype",
		"onpointerout"
	],
	[
		"Document",
		"prototype",
		"onpointermove"
	],
	[
		"Document",
		"prototype",
		"onpointerlockerror"
	],
	[
		"Document",
		"prototype",
		"onpointerlockchange"
	],
	[
		"Document",
		"prototype",
		"onpointerleave"
	],
	[
		"Document",
		"prototype",
		"onpointerenter"
	],
	[
		"Document",
		"prototype",
		"onpointerdown"
	],
	[
		"Document",
		"prototype",
		"onpointercancel"
	],
	[
		"Document",
		"prototype",
		"onplaying"
	],
	[
		"Document",
		"prototype",
		"onplay"
	],
	[
		"Document",
		"prototype",
		"onpause"
	],
	[
		"Document",
		"prototype",
		"onpaste"
	],
	[
		"Document",
		"prototype",
		"onmouseup"
	],
	[
		"Document",
		"prototype",
		"onmouseover"
	],
	[
		"Document",
		"prototype",
		"onmouseout"
	],
	[
		"Document",
		"prototype",
		"onmousemove"
	],
	[
		"Document",
		"prototype",
		"onmouseleave"
	],
	[
		"Document",
		"prototype",
		"onmouseenter"
	],
	[
		"Document",
		"prototype",
		"onmousedown"
	],
	[
		"Document",
		"prototype",
		"onlostpointercapture"
	],
	[
		"Document",
		"prototype",
		"onloadstart"
	],
	[
		"Document",
		"prototype",
		"onloadedmetadata"
	],
	[
		"Document",
		"prototype",
		"onloadeddata"
	],
	[
		"Document",
		"prototype",
		"onload"
	],
	[
		"Document",
		"prototype",
		"onkeyup"
	],
	[
		"Document",
		"prototype",
		"onkeypress"
	],
	[
		"Document",
		"prototype",
		"onkeydown"
	],
	[
		"Document",
		"prototype",
		"oninvalid"
	],
	[
		"Document",
		"prototype",
		"oninput"
	],
	[
		"Document",
		"prototype",
		"ongotpointercapture"
	],
	[
		"Document",
		"prototype",
		"onfullscreenerror"
	],
	[
		"Document",
		"prototype",
		"onfullscreenchange"
	],
	[
		"Document",
		"prototype",
		"onfreeze"
	],
	[
		"Document",
		"prototype",
		"onformdata"
	],
	[
		"Document",
		"prototype",
		"onfocus"
	],
	[
		"Document",
		"prototype",
		"onerror"
	],
	[
		"Document",
		"prototype",
		"onended"
	],
	[
		"Document",
		"prototype",
		"onemptied"
	],
	[
		"Document",
		"prototype",
		"ondurationchange"
	],
	[
		"Document",
		"prototype",
		"ondrop"
	],
	[
		"Document",
		"prototype",
		"ondragstart"
	],
	[
		"Document",
		"prototype",
		"ondragover"
	],
	[
		"Document",
		"prototype",
		"ondragleave"
	],
	[
		"Document",
		"prototype",
		"ondragenter"
	],
	[
		"Document",
		"prototype",
		"ondragend"
	],
	[
		"Document",
		"prototype",
		"ondrag"
	],
	[
		"Document",
		"prototype",
		"ondblclick"
	],
	[
		"Document",
		"prototype",
		"oncut"
	],
	[
		"Document",
		"prototype",
		"oncuechange"
	],
	[
		"Document",
		"prototype",
		"oncopy"
	],
	[
		"Document",
		"prototype",
		"oncontextrestored"
	],
	[
		"Document",
		"prototype",
		"oncontextmenu"
	],
	[
		"Document",
		"prototype",
		"oncontextlost"
	],
	[
		"Document",
		"prototype",
		"onclose"
	],
	[
		"Document",
		"prototype",
		"onclick"
	],
	[
		"Document",
		"prototype",
		"onchange"
	],
	[
		"Document",
		"prototype",
		"oncanplaythrough"
	],
	[
		"Document",
		"prototype",
		"oncanplay"
	],
	[
		"Document",
		"prototype",
		"oncancel"
	],
	[
		"Document",
		"prototype",
		"onblur"
	],
	[
		"Document",
		"prototype",
		"onbeforexrselect"
	],
	[
		"Document",
		"prototype",
		"onbeforetoggle"
	],
	[
		"Document",
		"prototype",
		"onbeforematch"
	],
	[
		"Document",
		"prototype",
		"onbeforeinput"
	],
	[
		"Document",
		"prototype",
		"onauxclick"
	],
	[
		"Document",
		"prototype",
		"onanimationstart"
	],
	[
		"Document",
		"prototype",
		"onanimationiteration"
	],
	[
		"Document",
		"prototype",
		"onanimationend"
	],
	[
		"Document",
		"prototype",
		"onanimationcancel"
	],
	[
		"Document",
		"prototype",
		"onabort"
	],
	[
		"Document",
		"prototype",
		"namedFlows"
	],
	[
		"Document",
		"prototype",
		"measureText()"
	],
	[
		"Document",
		"prototype",
		"measureElement()"
	],
	[
		"Document",
		"prototype",
		"location"
	],
	[
		"Document",
		"prototype",
		"links"
	],
	[
		"Document",
		"prototype",
		"linkColor"
	],
	[
		"Document",
		"prototype",
		"layoutNow()"
	],
	[
		"Document",
		"prototype",
		"lastModified"
	],
	[
		"Document",
		"prototype",
		"lastElementChild"
	],
	[
		"Document",
		"prototype",
		"inputEncoding"
	],
	[
		"Document",
		"prototype",
		"importNode()"
	],
	[
		"Document",
		"prototype",
		"implementation"
	],
	[
		"Document",
		"prototype",
		"images"
	],
	[
		"Document",
		"prototype",
		"hidden"
	],
	[
		"Document",
		"prototype",
		"head"
	],
	[
		"Document",
		"prototype",
		"hasUnpartitionedCookieAccess()"
	],
	[
		"Document",
		"prototype",
		"hasStorageAccess()"
	],
	[
		"Document",
		"prototype",
		"hasRedemptionRecord()"
	],
	[
		"Document",
		"prototype",
		"hasPrivateToken()"
	],
	[
		"Document",
		"prototype",
		"hasFocus()"
	],
	[
		"Document",
		"prototype",
		"getSelection()"
	],
	[
		"Document",
		"prototype",
		"getElementsByTagNameNS()"
	],
	[
		"Document",
		"prototype",
		"getElementsByTagName()"
	],
	[
		"Document",
		"prototype",
		"getElementsByName()"
	],
	[
		"Document",
		"prototype",
		"getElementsByClassName()"
	],
	[
		"Document",
		"prototype",
		"getElementById()"
	],
	[
		"Document",
		"prototype",
		"getBoxQuads()"
	],
	[
		"Document",
		"prototype",
		"getAnimations()"
	],
	[
		"Document",
		"prototype",
		"fullscreenEnabled"
	],
	[
		"Document",
		"prototype",
		"fullscreenElement"
	],
	[
		"Document",
		"prototype",
		"fullscreen"
	],
	[
		"Document",
		"prototype",
		"fragmentDirective"
	],
	[
		"Document",
		"prototype",
		"forms"
	],
	[
		"Document",
		"prototype",
		"fonts"
	],
	[
		"Document",
		"prototype",
		"firstElementChild"
	],
	[
		"Document",
		"prototype",
		"fgColor"
	],
	[
		"Document",
		"prototype",
		"exitPointerLock()"
	],
	[
		"Document",
		"prototype",
		"exitPictureInPicture()"
	],
	[
		"Document",
		"prototype",
		"exitFullscreen()"
	],
	[
		"Document",
		"prototype",
		"execCommand()"
	],
	[
		"Document",
		"prototype",
		"evaluate()"
	],
	[
		"Document",
		"prototype",
		"embeds"
	],
	[
		"Document",
		"prototype",
		"elementsFromPoint()"
	],
	[
		"Document",
		"prototype",
		"elementFromPoint()"
	],
	[
		"Document",
		"prototype",
		"domain"
	],
	[
		"Document",
		"prototype",
		"documentURI"
	],
	[
		"Document",
		"prototype",
		"documentElement"
	],
	[
		"Document",
		"prototype",
		"doctype"
	],
	[
		"Document",
		"prototype",
		"dir"
	],
	[
		"Document",
		"prototype",
		"designMode"
	],
	[
		"Document",
		"prototype",
		"defaultView"
	],
	[
		"Document",
		"prototype",
		"currentScript"
	],
	[
		"Document",
		"prototype",
		"createTreeWalker()"
	],
	[
		"Document",
		"prototype",
		"createTextNode()"
	],
	[
		"Document",
		"prototype",
		"createRange()"
	],
	[
		"Document",
		"prototype",
		"createProcessingInstruction()"
	],
	[
		"Document",
		"prototype",
		"createNodeIterator()"
	],
	[
		"Document",
		"prototype",
		"createNSResolver()"
	],
	[
		"Document",
		"prototype",
		"createExpression()"
	],
	[
		"Document",
		"prototype",
		"createEvent()"
	],
	[
		"Document",
		"prototype",
		"createElementNS()"
	],
	[
		"Document",
		"prototype",
		"createElement()"
	],
	[
		"Document",
		"prototype",
		"createDocumentFragment()"
	],
	[
		"Document",
		"prototype",
		"createComment()"
	],
	[
		"Document",
		"prototype",
		"createCDATASection()"
	],
	[
		"Document",
		"prototype",
		"createAttributeNS()"
	],
	[
		"Document",
		"prototype",
		"createAttribute()"
	],
	[
		"Document",
		"prototype",
		"cookie"
	],
	[
		"Document",
		"prototype",
		"convertRectFromNode()"
	],
	[
		"Document",
		"prototype",
		"convertQuadFromNode()"
	],
	[
		"Document",
		"prototype",
		"convertPointFromNode()"
	],
	[
		"Document",
		"prototype",
		"contentType"
	],
	[
		"Document",
		"prototype",
		"compatMode"
	],
	[
		"Document",
		"prototype",
		"close()"
	],
	[
		"Document",
		"prototype",
		"clear()"
	],
	[
		"Document",
		"prototype",
		"children"
	],
	[
		"Document",
		"prototype",
		"childElementCount"
	],
	[
		"Document",
		"prototype",
		"charset"
	],
	[
		"Document",
		"prototype",
		"characterSet"
	],
	[
		"Document",
		"prototype",
		"caretPositionFromPoint()"
	],
	[
		"Document",
		"prototype",
		"captureEvents()"
	],
	[
		"Document",
		"prototype",
		"body"
	],
	[
		"Document",
		"prototype",
		"bgColor"
	],
	[
		"Document",
		"prototype",
		"applets"
	],
	[
		"Document",
		"prototype",
		"append()"
	],
	[
		"Document",
		"prototype",
		"anchors"
	],
	[
		"Document",
		"prototype",
		"all"
	],
	[
		"Document",
		"prototype",
		"alinkColor"
	],
	[
		"Document",
		"prototype",
		"adoptedStyleSheets"
	],
	[
		"Document",
		"prototype",
		"adoptNode()"
	],
	[
		"Document",
		"prototype",
		"activeElement"
	],
	[
		"Document",
		"prototype",
		"activeElement"
	],
	[
		"Document",
		"prototype",
		"URL"
	],
	[
		"Document",
		"prototype"
	],
	[
		"Document",
		"parseHTMLUnsafe()"
	],
	[
		"DocumentFragment"
	],
	[
		"DocumentFragment",
		"prototype",
		"replaceChildren()"
	],
	[
		"DocumentFragment",
		"prototype",
		"querySelectorAll()"
	],
	[
		"DocumentFragment",
		"prototype",
		"querySelector()"
	],
	[
		"DocumentFragment",
		"prototype",
		"prepend()"
	],
	[
		"DocumentFragment",
		"prototype",
		"lastElementChild"
	],
	[
		"DocumentFragment",
		"prototype",
		"getElementById()"
	],
	[
		"DocumentFragment",
		"prototype",
		"firstElementChild"
	],
	[
		"DocumentFragment",
		"prototype",
		"children"
	],
	[
		"DocumentFragment",
		"prototype",
		"childElementCount"
	],
	[
		"DocumentFragment",
		"prototype",
		"append()"
	],
	[
		"DocumentFragment",
		"prototype"
	],
	[
		"DocumentPictureInPicture"
	],
	[
		"DocumentPictureInPicture",
		"prototype",
		"window"
	],
	[
		"DocumentPictureInPicture",
		"prototype",
		"requestWindow()"
	],
	[
		"DocumentPictureInPicture",
		"prototype",
		"onenter"
	],
	[
		"DocumentPictureInPicture",
		"prototype"
	],
	[
		"DocumentPictureInPictureEvent"
	],
	[
		"DocumentPictureInPictureEvent",
		"prototype",
		"window"
	],
	[
		"DocumentPictureInPictureEvent",
		"prototype"
	],
	[
		"DocumentTimeline"
	],
	[
		"DocumentTimeline",
		"prototype"
	],
	[
		"DocumentType"
	],
	[
		"DocumentType",
		"prototype",
		"systemId"
	],
	[
		"DocumentType",
		"prototype",
		"replaceWith()"
	],
	[
		"DocumentType",
		"prototype",
		"remove()"
	],
	[
		"DocumentType",
		"prototype",
		"publicId"
	],
	[
		"DocumentType",
		"prototype",
		"name"
	],
	[
		"DocumentType",
		"prototype",
		"before()"
	],
	[
		"DocumentType",
		"prototype",
		"after()"
	],
	[
		"DocumentType",
		"prototype"
	],
	[
		"DOMException"
	],
	[
		"DOMException",
		"prototype",
		"name"
	],
	[
		"DOMException",
		"prototype",
		"message"
	],
	[
		"DOMException",
		"prototype",
		"code"
	],
	[
		"DOMException",
		"prototype",
		"WRONG_DOCUMENT_ERR"
	],
	[
		"DOMException",
		"prototype",
		"VALIDATION_ERR"
	],
	[
		"DOMException",
		"prototype",
		"URL_MISMATCH_ERR"
	],
	[
		"DOMException",
		"prototype",
		"TYPE_MISMATCH_ERR"
	],
	[
		"DOMException",
		"prototype",
		"TIMEOUT_ERR"
	],
	[
		"DOMException",
		"prototype",
		"SYNTAX_ERR"
	],
	[
		"DOMException",
		"prototype",
		"SECURITY_ERR"
	],
	[
		"DOMException",
		"prototype",
		"QUOTA_EXCEEDED_ERR"
	],
	[
		"DOMException",
		"prototype",
		"NO_MODIFICATION_ALLOWED_ERR"
	],
	[
		"DOMException",
		"prototype",
		"NO_DATA_ALLOWED_ERR"
	],
	[
		"DOMException",
		"prototype",
		"NOT_SUPPORTED_ERR"
	],
	[
		"DOMException",
		"prototype",
		"NOT_FOUND_ERR"
	],
	[
		"DOMException",
		"prototype",
		"NETWORK_ERR"
	],
	[
		"DOMException",
		"prototype",
		"NAMESPACE_ERR"
	],
	[
		"DOMException",
		"prototype",
		"INVALID_STATE_ERR"
	],
	[
		"DOMException",
		"prototype",
		"INVALID_NODE_TYPE_ERR"
	],
	[
		"DOMException",
		"prototype",
		"INVALID_MODIFICATION_ERR"
	],
	[
		"DOMException",
		"prototype",
		"INVALID_CHARACTER_ERR"
	],
	[
		"DOMException",
		"prototype",
		"INVALID_ACCESS_ERR"
	],
	[
		"DOMException",
		"prototype",
		"INUSE_ATTRIBUTE_ERR"
	],
	[
		"DOMException",
		"prototype",
		"INDEX_SIZE_ERR"
	],
	[
		"DOMException",
		"prototype",
		"HIERARCHY_REQUEST_ERR"
	],
	[
		"DOMException",
		"prototype",
		"DOMSTRING_SIZE_ERR"
	],
	[
		"DOMException",
		"prototype",
		"DATA_CLONE_ERR"
	],
	[
		"DOMException",
		"prototype",
		"ABORT_ERR"
	],
	[
		"DOMException",
		"prototype"
	],
	[
		"DOMException",
		"WRONG_DOCUMENT_ERR"
	],
	[
		"DOMException",
		"VALIDATION_ERR"
	],
	[
		"DOMException",
		"URL_MISMATCH_ERR"
	],
	[
		"DOMException",
		"TYPE_MISMATCH_ERR"
	],
	[
		"DOMException",
		"TIMEOUT_ERR"
	],
	[
		"DOMException",
		"SYNTAX_ERR"
	],
	[
		"DOMException",
		"SECURITY_ERR"
	],
	[
		"DOMException",
		"QUOTA_EXCEEDED_ERR"
	],
	[
		"DOMException",
		"NO_MODIFICATION_ALLOWED_ERR"
	],
	[
		"DOMException",
		"NO_DATA_ALLOWED_ERR"
	],
	[
		"DOMException",
		"NOT_SUPPORTED_ERR"
	],
	[
		"DOMException",
		"NOT_FOUND_ERR"
	],
	[
		"DOMException",
		"NETWORK_ERR"
	],
	[
		"DOMException",
		"NAMESPACE_ERR"
	],
	[
		"DOMException",
		"INVALID_STATE_ERR"
	],
	[
		"DOMException",
		"INVALID_NODE_TYPE_ERR"
	],
	[
		"DOMException",
		"INVALID_MODIFICATION_ERR"
	],
	[
		"DOMException",
		"INVALID_CHARACTER_ERR"
	],
	[
		"DOMException",
		"INVALID_ACCESS_ERR"
	],
	[
		"DOMException",
		"INUSE_ATTRIBUTE_ERR"
	],
	[
		"DOMException",
		"INDEX_SIZE_ERR"
	],
	[
		"DOMException",
		"HIERARCHY_REQUEST_ERR"
	],
	[
		"DOMException",
		"DOMSTRING_SIZE_ERR"
	],
	[
		"DOMException",
		"DATA_CLONE_ERR"
	],
	[
		"DOMException",
		"ABORT_ERR"
	],
	[
		"DOMImplementation"
	],
	[
		"DOMImplementation",
		"prototype",
		"hasFeature()"
	],
	[
		"DOMImplementation",
		"prototype",
		"createHTMLDocument()"
	],
	[
		"DOMImplementation",
		"prototype",
		"createDocumentType()"
	],
	[
		"DOMImplementation",
		"prototype",
		"createDocument()"
	],
	[
		"DOMImplementation",
		"prototype"
	],
	[
		"DOMMatrix"
	],
	[
		"DOMMatrix",
		"prototype",
		"translateSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"skewYSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"skewXSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"setMatrixValue()"
	],
	[
		"DOMMatrix",
		"prototype",
		"scaleSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"scale3dSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"rotateSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"rotateFromVectorSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"rotateAxisAngleSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"preMultiplySelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"multiplySelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"m44"
	],
	[
		"DOMMatrix",
		"prototype",
		"m43"
	],
	[
		"DOMMatrix",
		"prototype",
		"m42"
	],
	[
		"DOMMatrix",
		"prototype",
		"m41"
	],
	[
		"DOMMatrix",
		"prototype",
		"m34"
	],
	[
		"DOMMatrix",
		"prototype",
		"m33"
	],
	[
		"DOMMatrix",
		"prototype",
		"m32"
	],
	[
		"DOMMatrix",
		"prototype",
		"m31"
	],
	[
		"DOMMatrix",
		"prototype",
		"m24"
	],
	[
		"DOMMatrix",
		"prototype",
		"m23"
	],
	[
		"DOMMatrix",
		"prototype",
		"m22"
	],
	[
		"DOMMatrix",
		"prototype",
		"m21"
	],
	[
		"DOMMatrix",
		"prototype",
		"m14"
	],
	[
		"DOMMatrix",
		"prototype",
		"m13"
	],
	[
		"DOMMatrix",
		"prototype",
		"m12"
	],
	[
		"DOMMatrix",
		"prototype",
		"m11"
	],
	[
		"DOMMatrix",
		"prototype",
		"invertSelf()"
	],
	[
		"DOMMatrix",
		"prototype",
		"f"
	],
	[
		"DOMMatrix",
		"prototype",
		"e"
	],
	[
		"DOMMatrix",
		"prototype",
		"d"
	],
	[
		"DOMMatrix",
		"prototype",
		"c"
	],
	[
		"DOMMatrix",
		"prototype",
		"b"
	],
	[
		"DOMMatrix",
		"prototype",
		"a"
	],
	[
		"DOMMatrix",
		"prototype"
	],
	[
		"DOMMatrix",
		"fromMatrix()"
	],
	[
		"DOMMatrix",
		"fromFloat64Array()"
	],
	[
		"DOMMatrix",
		"fromFloat32Array()"
	],
	[
		"DOMMatrixReadOnly"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"translate()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"transformPoint()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"toJSON()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"toFloat64Array()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"toFloat32Array()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"skewY()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"skewX()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"scaleNonUniform()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"scale3d()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"scale()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"rotateFromVector()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"rotateAxisAngle()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"rotate()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"multiply()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m44"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m43"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m42"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m41"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m34"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m33"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m32"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m31"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m24"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m23"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m22"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m21"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m14"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m13"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m12"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"m11"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"isIdentity"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"is2D"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"inverse()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"flipY()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"flipX()"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"f"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"e"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"d"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"c"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"b"
	],
	[
		"DOMMatrixReadOnly",
		"prototype",
		"a"
	],
	[
		"DOMMatrixReadOnly",
		"prototype"
	],
	[
		"DOMMatrixReadOnly",
		"fromMatrix()"
	],
	[
		"DOMMatrixReadOnly",
		"fromFloat64Array()"
	],
	[
		"DOMMatrixReadOnly",
		"fromFloat32Array()"
	],
	[
		"DOMParser"
	],
	[
		"DOMParser",
		"prototype",
		"parseFromString()"
	],
	[
		"DOMParser",
		"prototype"
	],
	[
		"DOMPoint"
	],
	[
		"DOMPoint",
		"prototype",
		"z"
	],
	[
		"DOMPoint",
		"prototype",
		"y"
	],
	[
		"DOMPoint",
		"prototype",
		"x"
	],
	[
		"DOMPoint",
		"prototype",
		"w"
	],
	[
		"DOMPoint",
		"prototype"
	],
	[
		"DOMPoint",
		"fromPoint()"
	],
	[
		"DOMPointReadOnly"
	],
	[
		"DOMPointReadOnly",
		"prototype",
		"z"
	],
	[
		"DOMPointReadOnly",
		"prototype",
		"y"
	],
	[
		"DOMPointReadOnly",
		"prototype",
		"x"
	],
	[
		"DOMPointReadOnly",
		"prototype",
		"w"
	],
	[
		"DOMPointReadOnly",
		"prototype",
		"toJSON()"
	],
	[
		"DOMPointReadOnly",
		"prototype",
		"matrixTransform()"
	],
	[
		"DOMPointReadOnly",
		"prototype"
	],
	[
		"DOMPointReadOnly",
		"fromPoint()"
	],
	[
		"DOMQuad"
	],
	[
		"DOMQuad",
		"prototype",
		"toJSON()"
	],
	[
		"DOMQuad",
		"prototype",
		"p4"
	],
	[
		"DOMQuad",
		"prototype",
		"p3"
	],
	[
		"DOMQuad",
		"prototype",
		"p2"
	],
	[
		"DOMQuad",
		"prototype",
		"p1"
	],
	[
		"DOMQuad",
		"prototype",
		"getBounds()"
	],
	[
		"DOMQuad",
		"prototype"
	],
	[
		"DOMQuad",
		"fromRect()"
	],
	[
		"DOMQuad",
		"fromQuad()"
	],
	[
		"DOMRect"
	],
	[
		"DOMRect",
		"prototype",
		"y"
	],
	[
		"DOMRect",
		"prototype",
		"x"
	],
	[
		"DOMRect",
		"prototype",
		"width"
	],
	[
		"DOMRect",
		"prototype",
		"height"
	],
	[
		"DOMRect",
		"prototype"
	],
	[
		"DOMRect",
		"fromRect()"
	],
	[
		"DOMRectList"
	],
	[
		"DOMRectList",
		"prototype",
		"length"
	],
	[
		"DOMRectList",
		"prototype",
		"item()"
	],
	[
		"DOMRectList",
		"prototype"
	],
	[
		"DOMRectReadOnly"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"y"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"x"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"width"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"top"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"toJSON()"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"right"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"left"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"height"
	],
	[
		"DOMRectReadOnly",
		"prototype",
		"bottom"
	],
	[
		"DOMRectReadOnly",
		"prototype"
	],
	[
		"DOMRectReadOnly",
		"fromRect()"
	],
	[
		"DOMStringList"
	],
	[
		"DOMStringList",
		"prototype",
		"length"
	],
	[
		"DOMStringList",
		"prototype",
		"item()"
	],
	[
		"DOMStringList",
		"prototype",
		"contains()"
	],
	[
		"DOMStringList",
		"prototype"
	],
	[
		"DOMStringMap"
	],
	[
		"DOMStringMap",
		"prototype"
	],
	[
		"DOMTokenList"
	],
	[
		"DOMTokenList",
		"prototype",
		"value"
	],
	[
		"DOMTokenList",
		"prototype",
		"toggle()"
	],
	[
		"DOMTokenList",
		"prototype",
		"supports()"
	],
	[
		"DOMTokenList",
		"prototype",
		"replace()"
	],
	[
		"DOMTokenList",
		"prototype",
		"remove()"
	],
	[
		"DOMTokenList",
		"prototype",
		"length"
	],
	[
		"DOMTokenList",
		"prototype",
		"item()"
	],
	[
		"DOMTokenList",
		"prototype",
		"contains()"
	],
	[
		"DOMTokenList",
		"prototype",
		"add()"
	],
	[
		"DOMTokenList",
		"prototype"
	],
	[
		"DragEvent"
	],
	[
		"DragEvent",
		"prototype",
		"dataTransfer"
	],
	[
		"DragEvent",
		"prototype"
	],
	[
		"DynamicsCompressorNode"
	],
	[
		"DynamicsCompressorNode",
		"prototype",
		"threshold"
	],
	[
		"DynamicsCompressorNode",
		"prototype",
		"release"
	],
	[
		"DynamicsCompressorNode",
		"prototype",
		"reduction"
	],
	[
		"DynamicsCompressorNode",
		"prototype",
		"ratio"
	],
	[
		"DynamicsCompressorNode",
		"prototype",
		"knee"
	],
	[
		"DynamicsCompressorNode",
		"prototype",
		"attack"
	],
	[
		"DynamicsCompressorNode",
		"prototype"
	],
	[
		"EditContext"
	],
	[
		"EditContext",
		"prototype",
		"updateText()"
	],
	[
		"EditContext",
		"prototype",
		"updateSelectionBounds()"
	],
	[
		"EditContext",
		"prototype",
		"updateSelection()"
	],
	[
		"EditContext",
		"prototype",
		"updateControlBounds()"
	],
	[
		"EditContext",
		"prototype",
		"updateCharacterBounds()"
	],
	[
		"EditContext",
		"prototype",
		"text"
	],
	[
		"EditContext",
		"prototype",
		"selectionStart"
	],
	[
		"EditContext",
		"prototype",
		"selectionEnd"
	],
	[
		"EditContext",
		"prototype",
		"ontextupdate"
	],
	[
		"EditContext",
		"prototype",
		"ontextformatupdate"
	],
	[
		"EditContext",
		"prototype",
		"oncompositionstart"
	],
	[
		"EditContext",
		"prototype",
		"oncompositionend"
	],
	[
		"EditContext",
		"prototype",
		"oncharacterboundsupdate"
	],
	[
		"EditContext",
		"prototype",
		"characterBoundsRangeStart"
	],
	[
		"EditContext",
		"prototype",
		"characterBounds()"
	],
	[
		"EditContext",
		"prototype",
		"attachedElements()"
	],
	[
		"EditContext",
		"prototype"
	],
	[
		"Element"
	],
	[
		"Element",
		"prototype",
		"webkitMatchesSelector()"
	],
	[
		"Element",
		"prototype",
		"toggles"
	],
	[
		"Element",
		"prototype",
		"toggleAttribute()"
	],
	[
		"Element",
		"prototype",
		"tagName"
	],
	[
		"Element",
		"prototype",
		"spatialNavigationSearch()"
	],
	[
		"Element",
		"prototype",
		"slot"
	],
	[
		"Element",
		"prototype",
		"shadowRoot"
	],
	[
		"Element",
		"prototype",
		"setPointerCapture()"
	],
	[
		"Element",
		"prototype",
		"setHTMLUnsafe()"
	],
	[
		"Element",
		"prototype",
		"setAttributeNodeNS()"
	],
	[
		"Element",
		"prototype",
		"setAttributeNode()"
	],
	[
		"Element",
		"prototype",
		"setAttributeNS()"
	],
	[
		"Element",
		"prototype",
		"setAttribute()"
	],
	[
		"Element",
		"prototype",
		"scrollWidth"
	],
	[
		"Element",
		"prototype",
		"scrollTop"
	],
	[
		"Element",
		"prototype",
		"scrollTo()"
	],
	[
		"Element",
		"prototype",
		"scrollLeft"
	],
	[
		"Element",
		"prototype",
		"scrollIntoView()"
	],
	[
		"Element",
		"prototype",
		"scrollHeight"
	],
	[
		"Element",
		"prototype",
		"scrollBy()"
	],
	[
		"Element",
		"prototype",
		"scroll()"
	],
	[
		"Element",
		"prototype",
		"role"
	],
	[
		"Element",
		"prototype",
		"requestPointerLock()"
	],
	[
		"Element",
		"prototype",
		"requestFullscreen()"
	],
	[
		"Element",
		"prototype",
		"replaceWith()"
	],
	[
		"Element",
		"prototype",
		"replaceChildren()"
	],
	[
		"Element",
		"prototype",
		"removeAttributeNode()"
	],
	[
		"Element",
		"prototype",
		"removeAttributeNS()"
	],
	[
		"Element",
		"prototype",
		"removeAttribute()"
	],
	[
		"Element",
		"prototype",
		"remove()"
	],
	[
		"Element",
		"prototype",
		"releasePointerCapture()"
	],
	[
		"Element",
		"prototype",
		"regionOverset"
	],
	[
		"Element",
		"prototype",
		"querySelectorAll()"
	],
	[
		"Element",
		"prototype",
		"querySelector()"
	],
	[
		"Element",
		"prototype",
		"pseudo()"
	],
	[
		"Element",
		"prototype",
		"previousElementSibling"
	],
	[
		"Element",
		"prototype",
		"prepend()"
	],
	[
		"Element",
		"prototype",
		"prefix"
	],
	[
		"Element",
		"prototype",
		"part"
	],
	[
		"Element",
		"prototype",
		"outerHTML"
	],
	[
		"Element",
		"prototype",
		"onfullscreenerror"
	],
	[
		"Element",
		"prototype",
		"onfullscreenchange"
	],
	[
		"Element",
		"prototype",
		"nextElementSibling"
	],
	[
		"Element",
		"prototype",
		"namespaceURI"
	],
	[
		"Element",
		"prototype",
		"matches()"
	],
	[
		"Element",
		"prototype",
		"localName"
	],
	[
		"Element",
		"prototype",
		"lastElementChild"
	],
	[
		"Element",
		"prototype",
		"insertAdjacentText()"
	],
	[
		"Element",
		"prototype",
		"insertAdjacentHTML()"
	],
	[
		"Element",
		"prototype",
		"insertAdjacentElement()"
	],
	[
		"Element",
		"prototype",
		"innerHTML"
	],
	[
		"Element",
		"prototype",
		"id"
	],
	[
		"Element",
		"prototype",
		"hasPointerCapture()"
	],
	[
		"Element",
		"prototype",
		"hasAttributes()"
	],
	[
		"Element",
		"prototype",
		"hasAttributeNS()"
	],
	[
		"Element",
		"prototype",
		"hasAttribute()"
	],
	[
		"Element",
		"prototype",
		"getSpatialNavigationContainer()"
	],
	[
		"Element",
		"prototype",
		"getRegionFlowRanges()"
	],
	[
		"Element",
		"prototype",
		"getHTML()"
	],
	[
		"Element",
		"prototype",
		"getFragmentInformation()"
	],
	[
		"Element",
		"prototype",
		"getElementsByTagNameNS()"
	],
	[
		"Element",
		"prototype",
		"getElementsByTagName()"
	],
	[
		"Element",
		"prototype",
		"getElementsByClassName()"
	],
	[
		"Element",
		"prototype",
		"getClientRects()"
	],
	[
		"Element",
		"prototype",
		"getBoxQuads()"
	],
	[
		"Element",
		"prototype",
		"getBoundingClientRect()"
	],
	[
		"Element",
		"prototype",
		"getAttributeNodeNS()"
	],
	[
		"Element",
		"prototype",
		"getAttributeNode()"
	],
	[
		"Element",
		"prototype",
		"getAttributeNames()"
	],
	[
		"Element",
		"prototype",
		"getAttributeNS()"
	],
	[
		"Element",
		"prototype",
		"getAttribute()"
	],
	[
		"Element",
		"prototype",
		"getAnimations()"
	],
	[
		"Element",
		"prototype",
		"focusableAreas()"
	],
	[
		"Element",
		"prototype",
		"firstElementChild"
	],
	[
		"Element",
		"prototype",
		"elementTiming"
	],
	[
		"Element",
		"prototype",
		"currentCSSZoom"
	],
	[
		"Element",
		"prototype",
		"convertRectFromNode()"
	],
	[
		"Element",
		"prototype",
		"convertQuadFromNode()"
	],
	[
		"Element",
		"prototype",
		"convertPointFromNode()"
	],
	[
		"Element",
		"prototype",
		"computedStyleMap()"
	],
	[
		"Element",
		"prototype",
		"closest()"
	],
	[
		"Element",
		"prototype",
		"clientWidth"
	],
	[
		"Element",
		"prototype",
		"clientTop"
	],
	[
		"Element",
		"prototype",
		"clientLeft"
	],
	[
		"Element",
		"prototype",
		"clientHeight"
	],
	[
		"Element",
		"prototype",
		"className"
	],
	[
		"Element",
		"prototype",
		"classList"
	],
	[
		"Element",
		"prototype",
		"children"
	],
	[
		"Element",
		"prototype",
		"childElementCount"
	],
	[
		"Element",
		"prototype",
		"checkVisibility()"
	],
	[
		"Element",
		"prototype",
		"before()"
	],
	[
		"Element",
		"prototype",
		"attributes"
	],
	[
		"Element",
		"prototype",
		"attachShadow()"
	],
	[
		"Element",
		"prototype",
		"assignedSlot"
	],
	[
		"Element",
		"prototype",
		"ariaValueText"
	],
	[
		"Element",
		"prototype",
		"ariaValueNow"
	],
	[
		"Element",
		"prototype",
		"ariaValueMin"
	],
	[
		"Element",
		"prototype",
		"ariaValueMax"
	],
	[
		"Element",
		"prototype",
		"ariaSort"
	],
	[
		"Element",
		"prototype",
		"ariaSetSize"
	],
	[
		"Element",
		"prototype",
		"ariaSelected"
	],
	[
		"Element",
		"prototype",
		"ariaRowSpan"
	],
	[
		"Element",
		"prototype",
		"ariaRowIndexText"
	],
	[
		"Element",
		"prototype",
		"ariaRowIndex"
	],
	[
		"Element",
		"prototype",
		"ariaRowCount"
	],
	[
		"Element",
		"prototype",
		"ariaRoleDescription"
	],
	[
		"Element",
		"prototype",
		"ariaRequired"
	],
	[
		"Element",
		"prototype",
		"ariaReadOnly"
	],
	[
		"Element",
		"prototype",
		"ariaPressed"
	],
	[
		"Element",
		"prototype",
		"ariaPosInSet"
	],
	[
		"Element",
		"prototype",
		"ariaPlaceholder"
	],
	[
		"Element",
		"prototype",
		"ariaOwnsElements"
	],
	[
		"Element",
		"prototype",
		"ariaOrientation"
	],
	[
		"Element",
		"prototype",
		"ariaMultiSelectable"
	],
	[
		"Element",
		"prototype",
		"ariaMultiLine"
	],
	[
		"Element",
		"prototype",
		"ariaModal"
	],
	[
		"Element",
		"prototype",
		"ariaLive"
	],
	[
		"Element",
		"prototype",
		"ariaLevel"
	],
	[
		"Element",
		"prototype",
		"ariaLabelledByElements"
	],
	[
		"Element",
		"prototype",
		"ariaLabel"
	],
	[
		"Element",
		"prototype",
		"ariaKeyShortcuts"
	],
	[
		"Element",
		"prototype",
		"ariaInvalid"
	],
	[
		"Element",
		"prototype",
		"ariaHidden"
	],
	[
		"Element",
		"prototype",
		"ariaHasPopup"
	],
	[
		"Element",
		"prototype",
		"ariaFlowToElements"
	],
	[
		"Element",
		"prototype",
		"ariaExpanded"
	],
	[
		"Element",
		"prototype",
		"ariaErrorMessageElements"
	],
	[
		"Element",
		"prototype",
		"ariaDisabled"
	],
	[
		"Element",
		"prototype",
		"ariaDetailsElements"
	],
	[
		"Element",
		"prototype",
		"ariaDescription"
	],
	[
		"Element",
		"prototype",
		"ariaDescribedByElements"
	],
	[
		"Element",
		"prototype",
		"ariaCurrent"
	],
	[
		"Element",
		"prototype",
		"ariaControlsElements"
	],
	[
		"Element",
		"prototype",
		"ariaColSpan"
	],
	[
		"Element",
		"prototype",
		"ariaColIndexText"
	],
	[
		"Element",
		"prototype",
		"ariaColIndex"
	],
	[
		"Element",
		"prototype",
		"ariaColCount"
	],
	[
		"Element",
		"prototype",
		"ariaChecked"
	],
	[
		"Element",
		"prototype",
		"ariaBusy"
	],
	[
		"Element",
		"prototype",
		"ariaBrailleRoleDescription"
	],
	[
		"Element",
		"prototype",
		"ariaBrailleLabel"
	],
	[
		"Element",
		"prototype",
		"ariaAutoComplete"
	],
	[
		"Element",
		"prototype",
		"ariaAtomic"
	],
	[
		"Element",
		"prototype",
		"ariaActiveDescendantElement"
	],
	[
		"Element",
		"prototype",
		"append()"
	],
	[
		"Element",
		"prototype",
		"animate()"
	],
	[
		"Element",
		"prototype",
		"after()"
	],
	[
		"Element",
		"prototype"
	],
	[
		"ElementInternals"
	],
	[
		"ElementInternals",
		"prototype",
		"willValidate"
	],
	[
		"ElementInternals",
		"prototype",
		"validity"
	],
	[
		"ElementInternals",
		"prototype",
		"validationMessage"
	],
	[
		"ElementInternals",
		"prototype",
		"states"
	],
	[
		"ElementInternals",
		"prototype",
		"shadowRoot"
	],
	[
		"ElementInternals",
		"prototype",
		"setValidity()"
	],
	[
		"ElementInternals",
		"prototype",
		"setFormValue()"
	],
	[
		"ElementInternals",
		"prototype",
		"role"
	],
	[
		"ElementInternals",
		"prototype",
		"reportValidity()"
	],
	[
		"ElementInternals",
		"prototype",
		"labels"
	],
	[
		"ElementInternals",
		"prototype",
		"form"
	],
	[
		"ElementInternals",
		"prototype",
		"checkValidity()"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaValueText"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaValueNow"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaValueMin"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaValueMax"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaSort"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaSetSize"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaSelected"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaRowSpan"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaRowIndexText"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaRowIndex"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaRowCount"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaRoleDescription"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaRequired"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaReadOnly"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaPressed"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaPosInSet"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaPlaceholder"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaOwnsElements"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaOrientation"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaMultiSelectable"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaMultiLine"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaModal"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaLive"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaLevel"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaLabelledByElements"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaLabel"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaKeyShortcuts"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaInvalid"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaHidden"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaHasPopup"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaFlowToElements"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaExpanded"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaErrorMessageElements"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaDisabled"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaDetailsElements"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaDescription"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaDescribedByElements"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaCurrent"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaControlsElements"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaColSpan"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaColIndexText"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaColIndex"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaColCount"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaChecked"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaBusy"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaBrailleRoleDescription"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaBrailleLabel"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaAutoComplete"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaAtomic"
	],
	[
		"ElementInternals",
		"prototype",
		"ariaActiveDescendantElement"
	],
	[
		"ElementInternals",
		"prototype"
	],
	[
		"EncodedAudioChunk"
	],
	[
		"EncodedAudioChunk",
		"prototype",
		"type"
	],
	[
		"EncodedAudioChunk",
		"prototype",
		"timestamp"
	],
	[
		"EncodedAudioChunk",
		"prototype",
		"duration"
	],
	[
		"EncodedAudioChunk",
		"prototype",
		"copyTo()"
	],
	[
		"EncodedAudioChunk",
		"prototype",
		"byteLength"
	],
	[
		"EncodedAudioChunk",
		"prototype"
	],
	[
		"EncodedVideoChunk"
	],
	[
		"EncodedVideoChunk",
		"prototype",
		"type"
	],
	[
		"EncodedVideoChunk",
		"prototype",
		"timestamp"
	],
	[
		"EncodedVideoChunk",
		"prototype",
		"duration"
	],
	[
		"EncodedVideoChunk",
		"prototype",
		"copyTo()"
	],
	[
		"EncodedVideoChunk",
		"prototype",
		"byteLength"
	],
	[
		"EncodedVideoChunk",
		"prototype"
	],
	[
		"ErrorEvent"
	],
	[
		"ErrorEvent",
		"prototype",
		"message"
	],
	[
		"ErrorEvent",
		"prototype",
		"lineno"
	],
	[
		"ErrorEvent",
		"prototype",
		"filename"
	],
	[
		"ErrorEvent",
		"prototype",
		"error"
	],
	[
		"ErrorEvent",
		"prototype",
		"colno"
	],
	[
		"ErrorEvent",
		"prototype"
	],
	[
		"Event"
	],
	[
		"Event",
		"prototype",
		"type"
	],
	[
		"Event",
		"prototype",
		"timeStamp"
	],
	[
		"Event",
		"prototype",
		"target"
	],
	[
		"Event",
		"prototype",
		"stopPropagation()"
	],
	[
		"Event",
		"prototype",
		"stopImmediatePropagation()"
	],
	[
		"Event",
		"prototype",
		"srcElement"
	],
	[
		"Event",
		"prototype",
		"returnValue"
	],
	[
		"Event",
		"prototype",
		"preventDefault()"
	],
	[
		"Event",
		"prototype",
		"isTrusted"
	],
	[
		"Event",
		"prototype",
		"initEvent()"
	],
	[
		"Event",
		"prototype",
		"eventPhase"
	],
	[
		"Event",
		"prototype",
		"defaultPrevented"
	],
	[
		"Event",
		"prototype",
		"currentTarget"
	],
	[
		"Event",
		"prototype",
		"composedPath()"
	],
	[
		"Event",
		"prototype",
		"composed"
	],
	[
		"Event",
		"prototype",
		"cancelable"
	],
	[
		"Event",
		"prototype",
		"cancelBubble"
	],
	[
		"Event",
		"prototype",
		"bubbles"
	],
	[
		"Event",
		"prototype",
		"NONE"
	],
	[
		"Event",
		"prototype",
		"CAPTURING_PHASE"
	],
	[
		"Event",
		"prototype",
		"BUBBLING_PHASE"
	],
	[
		"Event",
		"prototype",
		"AT_TARGET"
	],
	[
		"Event",
		"prototype"
	],
	[
		"Event",
		"NONE"
	],
	[
		"Event",
		"CAPTURING_PHASE"
	],
	[
		"Event",
		"BUBBLING_PHASE"
	],
	[
		"Event",
		"AT_TARGET"
	],
	[
		"EventCounts"
	],
	[
		"EventCounts",
		"prototype"
	],
	[
		"EventSource"
	],
	[
		"EventSource",
		"prototype",
		"withCredentials"
	],
	[
		"EventSource",
		"prototype",
		"url"
	],
	[
		"EventSource",
		"prototype",
		"readyState"
	],
	[
		"EventSource",
		"prototype",
		"onopen"
	],
	[
		"EventSource",
		"prototype",
		"onmessage"
	],
	[
		"EventSource",
		"prototype",
		"onerror"
	],
	[
		"EventSource",
		"prototype",
		"close()"
	],
	[
		"EventSource",
		"prototype",
		"OPEN"
	],
	[
		"EventSource",
		"prototype",
		"CONNECTING"
	],
	[
		"EventSource",
		"prototype",
		"CLOSED"
	],
	[
		"EventSource",
		"prototype"
	],
	[
		"EventSource",
		"OPEN"
	],
	[
		"EventSource",
		"CONNECTING"
	],
	[
		"EventSource",
		"CLOSED"
	],
	[
		"EventTarget"
	],
	[
		"EventTarget",
		"prototype",
		"when()"
	],
	[
		"EventTarget",
		"prototype",
		"removeEventListener()"
	],
	[
		"EventTarget",
		"prototype",
		"dispatchEvent()"
	],
	[
		"EventTarget",
		"prototype",
		"addEventListener()"
	],
	[
		"EventTarget",
		"prototype"
	],
	[
		"Example"
	],
	[
		"Example",
		"prototype"
	],
	[
		"EXT_blend_minmax"
	],
	[
		"EXT_blend_minmax",
		"prototype",
		"MIN_EXT"
	],
	[
		"EXT_blend_minmax",
		"prototype",
		"MAX_EXT"
	],
	[
		"EXT_blend_minmax",
		"prototype"
	],
	[
		"EXT_blend_minmax",
		"MIN_EXT"
	],
	[
		"EXT_blend_minmax",
		"MAX_EXT"
	],
	[
		"EXT_color_buffer_float"
	],
	[
		"EXT_color_buffer_float",
		"prototype"
	],
	[
		"EXT_color_buffer_half_float"
	],
	[
		"EXT_color_buffer_half_float",
		"prototype",
		"UNSIGNED_NORMALIZED_EXT"
	],
	[
		"EXT_color_buffer_half_float",
		"prototype",
		"RGBA16F_EXT"
	],
	[
		"EXT_color_buffer_half_float",
		"prototype",
		"RGB16F_EXT"
	],
	[
		"EXT_color_buffer_half_float",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT"
	],
	[
		"EXT_color_buffer_half_float",
		"prototype"
	],
	[
		"EXT_color_buffer_half_float",
		"UNSIGNED_NORMALIZED_EXT"
	],
	[
		"EXT_color_buffer_half_float",
		"RGBA16F_EXT"
	],
	[
		"EXT_color_buffer_half_float",
		"RGB16F_EXT"
	],
	[
		"EXT_color_buffer_half_float",
		"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT"
	],
	[
		"EXT_disjoint_timer_query"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"queryCounterEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"isQueryEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"getQueryObjectEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"getQueryEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"endQueryEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"deleteQueryEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"createQueryEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"beginQueryEXT()"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"TIME_ELAPSED_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"TIMESTAMP_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"QUERY_RESULT_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"QUERY_RESULT_AVAILABLE_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"QUERY_COUNTER_BITS_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"GPU_DISJOINT_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype",
		"CURRENT_QUERY_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"prototype"
	],
	[
		"EXT_disjoint_timer_query",
		"TIME_ELAPSED_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"TIMESTAMP_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"QUERY_RESULT_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"QUERY_RESULT_AVAILABLE_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"QUERY_COUNTER_BITS_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"GPU_DISJOINT_EXT"
	],
	[
		"EXT_disjoint_timer_query",
		"CURRENT_QUERY_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"prototype",
		"queryCounterEXT()"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"prototype",
		"TIME_ELAPSED_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"prototype",
		"TIMESTAMP_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"prototype",
		"QUERY_COUNTER_BITS_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"prototype",
		"GPU_DISJOINT_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"prototype"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"TIME_ELAPSED_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"TIMESTAMP_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"QUERY_COUNTER_BITS_EXT"
	],
	[
		"EXT_disjoint_timer_query_webgl2",
		"GPU_DISJOINT_EXT"
	],
	[
		"EXT_float_blend"
	],
	[
		"EXT_float_blend",
		"prototype"
	],
	[
		"EXT_frag_depth"
	],
	[
		"EXT_frag_depth",
		"prototype"
	],
	[
		"EXT_shader_texture_lod"
	],
	[
		"EXT_shader_texture_lod",
		"prototype"
	],
	[
		"EXT_sRGB"
	],
	[
		"EXT_sRGB",
		"prototype",
		"SRGB_EXT"
	],
	[
		"EXT_sRGB",
		"prototype",
		"SRGB_ALPHA_EXT"
	],
	[
		"EXT_sRGB",
		"prototype",
		"SRGB8_ALPHA8_EXT"
	],
	[
		"EXT_sRGB",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT"
	],
	[
		"EXT_sRGB",
		"prototype"
	],
	[
		"EXT_sRGB",
		"SRGB_EXT"
	],
	[
		"EXT_sRGB",
		"SRGB_ALPHA_EXT"
	],
	[
		"EXT_sRGB",
		"SRGB8_ALPHA8_EXT"
	],
	[
		"EXT_sRGB",
		"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT"
	],
	[
		"EXT_texture_compression_bptc"
	],
	[
		"EXT_texture_compression_bptc",
		"prototype",
		"COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT"
	],
	[
		"EXT_texture_compression_bptc",
		"prototype",
		"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT"
	],
	[
		"EXT_texture_compression_bptc",
		"prototype",
		"COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT"
	],
	[
		"EXT_texture_compression_bptc",
		"prototype",
		"COMPRESSED_RGBA_BPTC_UNORM_EXT"
	],
	[
		"EXT_texture_compression_bptc",
		"prototype"
	],
	[
		"EXT_texture_compression_bptc",
		"COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT"
	],
	[
		"EXT_texture_compression_bptc",
		"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT"
	],
	[
		"EXT_texture_compression_bptc",
		"COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT"
	],
	[
		"EXT_texture_compression_bptc",
		"COMPRESSED_RGBA_BPTC_UNORM_EXT"
	],
	[
		"EXT_texture_compression_rgtc"
	],
	[
		"EXT_texture_compression_rgtc",
		"prototype",
		"COMPRESSED_SIGNED_RED_RGTC1_EXT"
	],
	[
		"EXT_texture_compression_rgtc",
		"prototype",
		"COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT"
	],
	[
		"EXT_texture_compression_rgtc",
		"prototype",
		"COMPRESSED_RED_RGTC1_EXT"
	],
	[
		"EXT_texture_compression_rgtc",
		"prototype",
		"COMPRESSED_RED_GREEN_RGTC2_EXT"
	],
	[
		"EXT_texture_compression_rgtc",
		"prototype"
	],
	[
		"EXT_texture_compression_rgtc",
		"COMPRESSED_SIGNED_RED_RGTC1_EXT"
	],
	[
		"EXT_texture_compression_rgtc",
		"COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT"
	],
	[
		"EXT_texture_compression_rgtc",
		"COMPRESSED_RED_RGTC1_EXT"
	],
	[
		"EXT_texture_compression_rgtc",
		"COMPRESSED_RED_GREEN_RGTC2_EXT"
	],
	[
		"EXT_texture_filter_anisotropic"
	],
	[
		"EXT_texture_filter_anisotropic",
		"prototype",
		"TEXTURE_MAX_ANISOTROPY_EXT"
	],
	[
		"EXT_texture_filter_anisotropic",
		"prototype",
		"MAX_TEXTURE_MAX_ANISOTROPY_EXT"
	],
	[
		"EXT_texture_filter_anisotropic",
		"prototype"
	],
	[
		"EXT_texture_filter_anisotropic",
		"TEXTURE_MAX_ANISOTROPY_EXT"
	],
	[
		"EXT_texture_filter_anisotropic",
		"MAX_TEXTURE_MAX_ANISOTROPY_EXT"
	],
	[
		"EXT_texture_norm16"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"RGBA16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"RGBA16_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"RGB16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"RGB16_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"RG16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"RG16_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"R16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype",
		"R16_EXT"
	],
	[
		"EXT_texture_norm16",
		"prototype"
	],
	[
		"EXT_texture_norm16",
		"RGBA16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"RGBA16_EXT"
	],
	[
		"EXT_texture_norm16",
		"RGB16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"RGB16_EXT"
	],
	[
		"EXT_texture_norm16",
		"RG16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"RG16_EXT"
	],
	[
		"EXT_texture_norm16",
		"R16_SNORM_EXT"
	],
	[
		"EXT_texture_norm16",
		"R16_EXT"
	],
	[
		"ExtendableCookieChangeEvent"
	],
	[
		"ExtendableCookieChangeEvent",
		"prototype",
		"deleted"
	],
	[
		"ExtendableCookieChangeEvent",
		"prototype",
		"changed"
	],
	[
		"ExtendableCookieChangeEvent",
		"prototype"
	],
	[
		"ExtendableEvent"
	],
	[
		"ExtendableEvent",
		"prototype",
		"waitUntil()"
	],
	[
		"ExtendableEvent",
		"prototype"
	],
	[
		"ExtendableMessageEvent"
	],
	[
		"ExtendableMessageEvent",
		"prototype",
		"source"
	],
	[
		"ExtendableMessageEvent",
		"prototype",
		"ports"
	],
	[
		"ExtendableMessageEvent",
		"prototype",
		"origin"
	],
	[
		"ExtendableMessageEvent",
		"prototype",
		"lastEventId"
	],
	[
		"ExtendableMessageEvent",
		"prototype",
		"data"
	],
	[
		"ExtendableMessageEvent",
		"prototype"
	],
	[
		"External"
	],
	[
		"External",
		"prototype",
		"IsSearchProviderInstalled()"
	],
	[
		"External",
		"prototype",
		"AddSearchProvider()"
	],
	[
		"External",
		"prototype"
	],
	[
		"EyeDropper"
	],
	[
		"EyeDropper",
		"prototype",
		"open()"
	],
	[
		"EyeDropper",
		"prototype"
	],
	[
		"FaceDetector"
	],
	[
		"FaceDetector",
		"prototype",
		"detect()"
	],
	[
		"FaceDetector",
		"prototype"
	],
	[
		"FakeWorkletGlobalScope"
	],
	[
		"FakeWorkletGlobalScope",
		"prototype",
		"registerFake()"
	],
	[
		"FakeWorkletGlobalScope",
		"prototype"
	],
	[
		"FederatedCredential"
	],
	[
		"FederatedCredential",
		"prototype",
		"provider"
	],
	[
		"FederatedCredential",
		"prototype",
		"protocol"
	],
	[
		"FederatedCredential",
		"prototype",
		"name"
	],
	[
		"FederatedCredential",
		"prototype",
		"iconURL"
	],
	[
		"FederatedCredential",
		"prototype"
	],
	[
		"Fence"
	],
	[
		"Fence",
		"prototype",
		"setReportEventDataForAutomaticBeacons()"
	],
	[
		"Fence",
		"prototype",
		"reportEvent()"
	],
	[
		"Fence",
		"prototype",
		"getNestedConfigs()"
	],
	[
		"Fence",
		"prototype"
	],
	[
		"FencedFrameConfig"
	],
	[
		"FencedFrameConfig",
		"prototype",
		"setSharedStorageContext()"
	],
	[
		"FencedFrameConfig",
		"prototype"
	],
	[
		"FetchEvent"
	],
	[
		"FetchEvent",
		"prototype",
		"resultingClientId"
	],
	[
		"FetchEvent",
		"prototype",
		"respondWith()"
	],
	[
		"FetchEvent",
		"prototype",
		"request"
	],
	[
		"FetchEvent",
		"prototype",
		"replacesClientId"
	],
	[
		"FetchEvent",
		"prototype",
		"preloadResponse"
	],
	[
		"FetchEvent",
		"prototype",
		"handled"
	],
	[
		"FetchEvent",
		"prototype",
		"clientId"
	],
	[
		"FetchEvent",
		"prototype"
	],
	[
		"File"
	],
	[
		"File",
		"prototype",
		"webkitRelativePath"
	],
	[
		"File",
		"prototype",
		"name"
	],
	[
		"File",
		"prototype",
		"lastModified"
	],
	[
		"File",
		"prototype"
	],
	[
		"FileList"
	],
	[
		"FileList",
		"prototype",
		"length"
	],
	[
		"FileList",
		"prototype",
		"item()"
	],
	[
		"FileList",
		"prototype"
	],
	[
		"FileReader"
	],
	[
		"FileReader",
		"prototype",
		"result"
	],
	[
		"FileReader",
		"prototype",
		"readyState"
	],
	[
		"FileReader",
		"prototype",
		"readAsText()"
	],
	[
		"FileReader",
		"prototype",
		"readAsDataURL()"
	],
	[
		"FileReader",
		"prototype",
		"readAsBinaryString()"
	],
	[
		"FileReader",
		"prototype",
		"readAsArrayBuffer()"
	],
	[
		"FileReader",
		"prototype",
		"onprogress"
	],
	[
		"FileReader",
		"prototype",
		"onloadstart"
	],
	[
		"FileReader",
		"prototype",
		"onloadend"
	],
	[
		"FileReader",
		"prototype",
		"onload"
	],
	[
		"FileReader",
		"prototype",
		"onerror"
	],
	[
		"FileReader",
		"prototype",
		"onabort"
	],
	[
		"FileReader",
		"prototype",
		"error"
	],
	[
		"FileReader",
		"prototype",
		"abort()"
	],
	[
		"FileReader",
		"prototype",
		"LOADING"
	],
	[
		"FileReader",
		"prototype",
		"EMPTY"
	],
	[
		"FileReader",
		"prototype",
		"DONE"
	],
	[
		"FileReader",
		"prototype"
	],
	[
		"FileReader",
		"LOADING"
	],
	[
		"FileReader",
		"EMPTY"
	],
	[
		"FileReader",
		"DONE"
	],
	[
		"FileReaderSync"
	],
	[
		"FileReaderSync",
		"prototype",
		"readAsText()"
	],
	[
		"FileReaderSync",
		"prototype",
		"readAsDataURL()"
	],
	[
		"FileReaderSync",
		"prototype",
		"readAsBinaryString()"
	],
	[
		"FileReaderSync",
		"prototype",
		"readAsArrayBuffer()"
	],
	[
		"FileReaderSync",
		"prototype"
	],
	[
		"FileSystem"
	],
	[
		"FileSystem",
		"prototype",
		"root"
	],
	[
		"FileSystem",
		"prototype",
		"name"
	],
	[
		"FileSystem",
		"prototype"
	],
	[
		"FileSystemDirectoryEntry"
	],
	[
		"FileSystemDirectoryEntry",
		"prototype",
		"getFile()"
	],
	[
		"FileSystemDirectoryEntry",
		"prototype",
		"getDirectory()"
	],
	[
		"FileSystemDirectoryEntry",
		"prototype",
		"createReader()"
	],
	[
		"FileSystemDirectoryEntry",
		"prototype"
	],
	[
		"FileSystemDirectoryHandle"
	],
	[
		"FileSystemDirectoryHandle",
		"prototype",
		"resolve()"
	],
	[
		"FileSystemDirectoryHandle",
		"prototype",
		"removeEntry()"
	],
	[
		"FileSystemDirectoryHandle",
		"prototype",
		"getFileHandle()"
	],
	[
		"FileSystemDirectoryHandle",
		"prototype",
		"getDirectoryHandle()"
	],
	[
		"FileSystemDirectoryHandle",
		"prototype"
	],
	[
		"FileSystemDirectoryReader"
	],
	[
		"FileSystemDirectoryReader",
		"prototype",
		"readEntries()"
	],
	[
		"FileSystemDirectoryReader",
		"prototype"
	],
	[
		"FileSystemEntry"
	],
	[
		"FileSystemEntry",
		"prototype",
		"name"
	],
	[
		"FileSystemEntry",
		"prototype",
		"isFile"
	],
	[
		"FileSystemEntry",
		"prototype",
		"isDirectory"
	],
	[
		"FileSystemEntry",
		"prototype",
		"getParent()"
	],
	[
		"FileSystemEntry",
		"prototype",
		"fullPath"
	],
	[
		"FileSystemEntry",
		"prototype",
		"filesystem"
	],
	[
		"FileSystemEntry",
		"prototype"
	],
	[
		"FileSystemFileEntry"
	],
	[
		"FileSystemFileEntry",
		"prototype",
		"file()"
	],
	[
		"FileSystemFileEntry",
		"prototype"
	],
	[
		"FileSystemFileHandle"
	],
	[
		"FileSystemFileHandle",
		"prototype",
		"getFile()"
	],
	[
		"FileSystemFileHandle",
		"prototype",
		"createWritable()"
	],
	[
		"FileSystemFileHandle",
		"prototype",
		"createSyncAccessHandle()"
	],
	[
		"FileSystemFileHandle",
		"prototype"
	],
	[
		"FileSystemHandle"
	],
	[
		"FileSystemHandle",
		"prototype",
		"requestPermission()"
	],
	[
		"FileSystemHandle",
		"prototype",
		"queryPermission()"
	],
	[
		"FileSystemHandle",
		"prototype",
		"name"
	],
	[
		"FileSystemHandle",
		"prototype",
		"kind"
	],
	[
		"FileSystemHandle",
		"prototype",
		"isSameEntry()"
	],
	[
		"FileSystemHandle",
		"prototype"
	],
	[
		"FileSystemSyncAccessHandle"
	],
	[
		"FileSystemSyncAccessHandle",
		"prototype",
		"write()"
	],
	[
		"FileSystemSyncAccessHandle",
		"prototype",
		"truncate()"
	],
	[
		"FileSystemSyncAccessHandle",
		"prototype",
		"read()"
	],
	[
		"FileSystemSyncAccessHandle",
		"prototype",
		"getSize()"
	],
	[
		"FileSystemSyncAccessHandle",
		"prototype",
		"flush()"
	],
	[
		"FileSystemSyncAccessHandle",
		"prototype",
		"close()"
	],
	[
		"FileSystemSyncAccessHandle",
		"prototype"
	],
	[
		"FileSystemWritableFileStream"
	],
	[
		"FileSystemWritableFileStream",
		"prototype",
		"write()"
	],
	[
		"FileSystemWritableFileStream",
		"prototype",
		"truncate()"
	],
	[
		"FileSystemWritableFileStream",
		"prototype",
		"seek()"
	],
	[
		"FileSystemWritableFileStream",
		"prototype"
	],
	[
		"FocusableMediaStreamTrack"
	],
	[
		"FocusableMediaStreamTrack",
		"prototype",
		"focus()"
	],
	[
		"FocusableMediaStreamTrack",
		"prototype"
	],
	[
		"FocusEvent"
	],
	[
		"FocusEvent",
		"prototype",
		"relatedTarget"
	],
	[
		"FocusEvent",
		"prototype"
	],
	[
		"Font"
	],
	[
		"Font",
		"prototype",
		"name"
	],
	[
		"Font",
		"prototype",
		"glyphsRendered"
	],
	[
		"Font",
		"prototype"
	],
	[
		"FontData"
	],
	[
		"FontData",
		"prototype",
		"style"
	],
	[
		"FontData",
		"prototype",
		"postscriptName"
	],
	[
		"FontData",
		"prototype",
		"fullName"
	],
	[
		"FontData",
		"prototype",
		"family"
	],
	[
		"FontData",
		"prototype",
		"blob()"
	],
	[
		"FontData",
		"prototype"
	],
	[
		"FontFace"
	],
	[
		"FontFace",
		"prototype",
		"weight"
	],
	[
		"FontFace",
		"prototype",
		"variations"
	],
	[
		"FontFace",
		"prototype",
		"variationSettings"
	],
	[
		"FontFace",
		"prototype",
		"unicodeRange"
	],
	[
		"FontFace",
		"prototype",
		"style"
	],
	[
		"FontFace",
		"prototype",
		"stretch"
	],
	[
		"FontFace",
		"prototype",
		"status"
	],
	[
		"FontFace",
		"prototype",
		"palettes"
	],
	[
		"FontFace",
		"prototype",
		"loaded"
	],
	[
		"FontFace",
		"prototype",
		"load()"
	],
	[
		"FontFace",
		"prototype",
		"lineGapOverride"
	],
	[
		"FontFace",
		"prototype",
		"features"
	],
	[
		"FontFace",
		"prototype",
		"featureSettings"
	],
	[
		"FontFace",
		"prototype",
		"family"
	],
	[
		"FontFace",
		"prototype",
		"display"
	],
	[
		"FontFace",
		"prototype",
		"descentOverride"
	],
	[
		"FontFace",
		"prototype",
		"ascentOverride"
	],
	[
		"FontFace",
		"prototype"
	],
	[
		"FontFaceFeatures"
	],
	[
		"FontFaceFeatures",
		"prototype"
	],
	[
		"FontFacePalette"
	],
	[
		"FontFacePalette",
		"prototype",
		"usableWithLightBackground"
	],
	[
		"FontFacePalette",
		"prototype",
		"usableWithDarkBackground"
	],
	[
		"FontFacePalette",
		"prototype",
		"length"
	],
	[
		"FontFacePalette",
		"prototype"
	],
	[
		"FontFacePalettes"
	],
	[
		"FontFacePalettes",
		"prototype",
		"length"
	],
	[
		"FontFacePalettes",
		"prototype"
	],
	[
		"FontFaceSet"
	],
	[
		"FontFaceSet",
		"prototype",
		"status"
	],
	[
		"FontFaceSet",
		"prototype",
		"ready"
	],
	[
		"FontFaceSet",
		"prototype",
		"onloadingerror"
	],
	[
		"FontFaceSet",
		"prototype",
		"onloadingdone"
	],
	[
		"FontFaceSet",
		"prototype",
		"onloading"
	],
	[
		"FontFaceSet",
		"prototype",
		"load()"
	],
	[
		"FontFaceSet",
		"prototype",
		"delete()"
	],
	[
		"FontFaceSet",
		"prototype",
		"clear()"
	],
	[
		"FontFaceSet",
		"prototype",
		"check()"
	],
	[
		"FontFaceSet",
		"prototype",
		"add()"
	],
	[
		"FontFaceSet",
		"prototype"
	],
	[
		"FontFaceSetLoadEvent"
	],
	[
		"FontFaceSetLoadEvent",
		"prototype",
		"fontfaces"
	],
	[
		"FontFaceSetLoadEvent",
		"prototype"
	],
	[
		"FontFaceVariationAxis"
	],
	[
		"FontFaceVariationAxis",
		"prototype",
		"name"
	],
	[
		"FontFaceVariationAxis",
		"prototype",
		"minimumValue"
	],
	[
		"FontFaceVariationAxis",
		"prototype",
		"maximumValue"
	],
	[
		"FontFaceVariationAxis",
		"prototype",
		"defaultValue"
	],
	[
		"FontFaceVariationAxis",
		"prototype",
		"axisTag"
	],
	[
		"FontFaceVariationAxis",
		"prototype"
	],
	[
		"FontFaceVariations"
	],
	[
		"FontFaceVariations",
		"prototype"
	],
	[
		"FontMetrics"
	],
	[
		"FontMetrics",
		"prototype",
		"width"
	],
	[
		"FontMetrics",
		"prototype",
		"height"
	],
	[
		"FontMetrics",
		"prototype",
		"fonts"
	],
	[
		"FontMetrics",
		"prototype",
		"fontBoundingBoxDescent"
	],
	[
		"FontMetrics",
		"prototype",
		"fontBoundingBoxAscent"
	],
	[
		"FontMetrics",
		"prototype",
		"emHeightDescent"
	],
	[
		"FontMetrics",
		"prototype",
		"emHeightAscent"
	],
	[
		"FontMetrics",
		"prototype",
		"dominantBaseline"
	],
	[
		"FontMetrics",
		"prototype",
		"boundingBoxRight"
	],
	[
		"FontMetrics",
		"prototype",
		"boundingBoxLeft"
	],
	[
		"FontMetrics",
		"prototype",
		"boundingBoxDescent"
	],
	[
		"FontMetrics",
		"prototype",
		"boundingBoxAscent"
	],
	[
		"FontMetrics",
		"prototype",
		"baselines"
	],
	[
		"FontMetrics",
		"prototype",
		"advances"
	],
	[
		"FontMetrics",
		"prototype"
	],
	[
		"ForDebuggingOnly"
	],
	[
		"ForDebuggingOnly",
		"prototype",
		"reportAdAuctionWin()"
	],
	[
		"ForDebuggingOnly",
		"prototype",
		"reportAdAuctionLoss()"
	],
	[
		"ForDebuggingOnly",
		"prototype"
	],
	[
		"FormData"
	],
	[
		"FormData",
		"prototype",
		"set()"
	],
	[
		"FormData",
		"prototype",
		"has()"
	],
	[
		"FormData",
		"prototype",
		"getAll()"
	],
	[
		"FormData",
		"prototype",
		"get()"
	],
	[
		"FormData",
		"prototype",
		"delete()"
	],
	[
		"FormData",
		"prototype",
		"append()"
	],
	[
		"FormData",
		"prototype"
	],
	[
		"FormDataEvent"
	],
	[
		"FormDataEvent",
		"prototype",
		"formData"
	],
	[
		"FormDataEvent",
		"prototype"
	],
	[
		"FragmentDirective"
	],
	[
		"FragmentDirective",
		"prototype"
	],
	[
		"FragmentResult"
	],
	[
		"FragmentResult",
		"prototype",
		"inlineSize"
	],
	[
		"FragmentResult",
		"prototype",
		"blockSize"
	],
	[
		"FragmentResult",
		"prototype"
	],
	[
		"GainNode"
	],
	[
		"GainNode",
		"prototype",
		"gain"
	],
	[
		"GainNode",
		"prototype"
	],
	[
		"Gamepad"
	],
	[
		"Gamepad",
		"prototype",
		"vibrationActuator"
	],
	[
		"Gamepad",
		"prototype",
		"touchEvents"
	],
	[
		"Gamepad",
		"prototype",
		"timestamp"
	],
	[
		"Gamepad",
		"prototype",
		"pose"
	],
	[
		"Gamepad",
		"prototype",
		"mapping"
	],
	[
		"Gamepad",
		"prototype",
		"index"
	],
	[
		"Gamepad",
		"prototype",
		"id"
	],
	[
		"Gamepad",
		"prototype",
		"hapticActuators"
	],
	[
		"Gamepad",
		"prototype",
		"hand"
	],
	[
		"Gamepad",
		"prototype",
		"connected"
	],
	[
		"Gamepad",
		"prototype",
		"buttons"
	],
	[
		"Gamepad",
		"prototype",
		"axes"
	],
	[
		"Gamepad",
		"prototype"
	],
	[
		"GamepadButton"
	],
	[
		"GamepadButton",
		"prototype",
		"value"
	],
	[
		"GamepadButton",
		"prototype",
		"touched"
	],
	[
		"GamepadButton",
		"prototype",
		"pressed"
	],
	[
		"GamepadButton",
		"prototype"
	],
	[
		"GamepadEvent"
	],
	[
		"GamepadEvent",
		"prototype",
		"gamepad"
	],
	[
		"GamepadEvent",
		"prototype"
	],
	[
		"GamepadHapticActuator"
	],
	[
		"GamepadHapticActuator",
		"prototype",
		"reset()"
	],
	[
		"GamepadHapticActuator",
		"prototype",
		"pulse()"
	],
	[
		"GamepadHapticActuator",
		"prototype",
		"playEffect()"
	],
	[
		"GamepadHapticActuator",
		"prototype",
		"effects"
	],
	[
		"GamepadHapticActuator",
		"prototype"
	],
	[
		"GamepadPose"
	],
	[
		"GamepadPose",
		"prototype",
		"position"
	],
	[
		"GamepadPose",
		"prototype",
		"orientation"
	],
	[
		"GamepadPose",
		"prototype",
		"linearVelocity"
	],
	[
		"GamepadPose",
		"prototype",
		"linearAcceleration"
	],
	[
		"GamepadPose",
		"prototype",
		"hasPosition"
	],
	[
		"GamepadPose",
		"prototype",
		"hasOrientation"
	],
	[
		"GamepadPose",
		"prototype",
		"angularVelocity"
	],
	[
		"GamepadPose",
		"prototype",
		"angularAcceleration"
	],
	[
		"GamepadPose",
		"prototype"
	],
	[
		"GamepadTouch"
	],
	[
		"GamepadTouch",
		"prototype",
		"touchId"
	],
	[
		"GamepadTouch",
		"prototype",
		"surfaceId"
	],
	[
		"GamepadTouch",
		"prototype",
		"surfaceDimensions"
	],
	[
		"GamepadTouch",
		"prototype",
		"position"
	],
	[
		"GamepadTouch",
		"prototype"
	],
	[
		"Geolocation"
	],
	[
		"Geolocation",
		"prototype",
		"watchPosition()"
	],
	[
		"Geolocation",
		"prototype",
		"getCurrentPosition()"
	],
	[
		"Geolocation",
		"prototype",
		"clearWatch()"
	],
	[
		"Geolocation",
		"prototype"
	],
	[
		"GeolocationCoordinates"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"toJSON()"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"speed"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"longitude"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"latitude"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"heading"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"altitudeAccuracy"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"altitude"
	],
	[
		"GeolocationCoordinates",
		"prototype",
		"accuracy"
	],
	[
		"GeolocationCoordinates",
		"prototype"
	],
	[
		"GeolocationPosition"
	],
	[
		"GeolocationPosition",
		"prototype",
		"toJSON()"
	],
	[
		"GeolocationPosition",
		"prototype",
		"timestamp"
	],
	[
		"GeolocationPosition",
		"prototype",
		"coords"
	],
	[
		"GeolocationPosition",
		"prototype"
	],
	[
		"GeolocationPositionError"
	],
	[
		"GeolocationPositionError",
		"prototype",
		"message"
	],
	[
		"GeolocationPositionError",
		"prototype",
		"code"
	],
	[
		"GeolocationPositionError",
		"prototype",
		"TIMEOUT"
	],
	[
		"GeolocationPositionError",
		"prototype",
		"POSITION_UNAVAILABLE"
	],
	[
		"GeolocationPositionError",
		"prototype",
		"PERMISSION_DENIED"
	],
	[
		"GeolocationPositionError",
		"prototype"
	],
	[
		"GeolocationPositionError",
		"TIMEOUT"
	],
	[
		"GeolocationPositionError",
		"POSITION_UNAVAILABLE"
	],
	[
		"GeolocationPositionError",
		"PERMISSION_DENIED"
	],
	[
		"GeolocationSensor"
	],
	[
		"GeolocationSensor",
		"prototype",
		"speed"
	],
	[
		"GeolocationSensor",
		"prototype",
		"longitude"
	],
	[
		"GeolocationSensor",
		"prototype",
		"latitude"
	],
	[
		"GeolocationSensor",
		"prototype",
		"heading"
	],
	[
		"GeolocationSensor",
		"prototype",
		"altitudeAccuracy"
	],
	[
		"GeolocationSensor",
		"prototype",
		"altitude"
	],
	[
		"GeolocationSensor",
		"prototype",
		"accuracy"
	],
	[
		"GeolocationSensor",
		"prototype"
	],
	[
		"GeolocationSensor",
		"read()"
	],
	[
		"Global"
	],
	[
		"Global",
		"prototype",
		"valueOf()"
	],
	[
		"Global",
		"prototype",
		"value"
	],
	[
		"Global",
		"prototype"
	],
	[
		"GPU"
	],
	[
		"GPU",
		"prototype",
		"wgslLanguageFeatures"
	],
	[
		"GPU",
		"prototype",
		"requestAdapter()"
	],
	[
		"GPU",
		"prototype",
		"getPreferredCanvasFormat()"
	],
	[
		"GPU",
		"prototype"
	],
	[
		"GPUAdapter"
	],
	[
		"GPUAdapter",
		"prototype",
		"requestDevice()"
	],
	[
		"GPUAdapter",
		"prototype",
		"limits"
	],
	[
		"GPUAdapter",
		"prototype",
		"isFallbackAdapter"
	],
	[
		"GPUAdapter",
		"prototype",
		"info"
	],
	[
		"GPUAdapter",
		"prototype",
		"features"
	],
	[
		"GPUAdapter",
		"prototype"
	],
	[
		"GPUAdapterInfo"
	],
	[
		"GPUAdapterInfo",
		"prototype",
		"vendor"
	],
	[
		"GPUAdapterInfo",
		"prototype",
		"device"
	],
	[
		"GPUAdapterInfo",
		"prototype",
		"description"
	],
	[
		"GPUAdapterInfo",
		"prototype",
		"architecture"
	],
	[
		"GPUAdapterInfo",
		"prototype"
	],
	[
		"GPUBindGroup"
	],
	[
		"GPUBindGroup",
		"prototype",
		"label"
	],
	[
		"GPUBindGroup",
		"prototype"
	],
	[
		"GPUBindGroupLayout"
	],
	[
		"GPUBindGroupLayout",
		"prototype",
		"label"
	],
	[
		"GPUBindGroupLayout",
		"prototype"
	],
	[
		"GPUBuffer"
	],
	[
		"GPUBuffer",
		"prototype",
		"usage"
	],
	[
		"GPUBuffer",
		"prototype",
		"unmap()"
	],
	[
		"GPUBuffer",
		"prototype",
		"size"
	],
	[
		"GPUBuffer",
		"prototype",
		"mapState"
	],
	[
		"GPUBuffer",
		"prototype",
		"mapAsync()"
	],
	[
		"GPUBuffer",
		"prototype",
		"label"
	],
	[
		"GPUBuffer",
		"prototype",
		"getMappedRange()"
	],
	[
		"GPUBuffer",
		"prototype",
		"destroy()"
	],
	[
		"GPUBuffer",
		"prototype"
	],
	[
		"GPUBufferUsage"
	],
	[
		"GPUBufferUsage",
		"VERTEX"
	],
	[
		"GPUBufferUsage",
		"UNIFORM"
	],
	[
		"GPUBufferUsage",
		"STORAGE"
	],
	[
		"GPUBufferUsage",
		"QUERY_RESOLVE"
	],
	[
		"GPUBufferUsage",
		"MAP_WRITE"
	],
	[
		"GPUBufferUsage",
		"MAP_READ"
	],
	[
		"GPUBufferUsage",
		"INDIRECT"
	],
	[
		"GPUBufferUsage",
		"INDEX"
	],
	[
		"GPUBufferUsage",
		"COPY_SRC"
	],
	[
		"GPUBufferUsage",
		"COPY_DST"
	],
	[
		"GPUCanvasContext"
	],
	[
		"GPUCanvasContext",
		"prototype",
		"unconfigure()"
	],
	[
		"GPUCanvasContext",
		"prototype",
		"getCurrentTexture()"
	],
	[
		"GPUCanvasContext",
		"prototype",
		"configure()"
	],
	[
		"GPUCanvasContext",
		"prototype",
		"canvas"
	],
	[
		"GPUCanvasContext",
		"prototype"
	],
	[
		"GPUColorWrite"
	],
	[
		"GPUColorWrite",
		"RED"
	],
	[
		"GPUColorWrite",
		"GREEN"
	],
	[
		"GPUColorWrite",
		"BLUE"
	],
	[
		"GPUColorWrite",
		"ALPHA"
	],
	[
		"GPUColorWrite",
		"ALL"
	],
	[
		"GPUCommandBuffer"
	],
	[
		"GPUCommandBuffer",
		"prototype",
		"label"
	],
	[
		"GPUCommandBuffer",
		"prototype"
	],
	[
		"GPUCommandEncoder"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"resolveQuerySet()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"pushDebugGroup()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"popDebugGroup()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"label"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"insertDebugMarker()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"finish()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"copyTextureToTexture()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"copyTextureToBuffer()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"copyBufferToTexture()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"copyBufferToBuffer()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"clearBuffer()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"beginRenderPass()"
	],
	[
		"GPUCommandEncoder",
		"prototype",
		"beginComputePass()"
	],
	[
		"GPUCommandEncoder",
		"prototype"
	],
	[
		"GPUCompilationInfo"
	],
	[
		"GPUCompilationInfo",
		"prototype",
		"messages"
	],
	[
		"GPUCompilationInfo",
		"prototype"
	],
	[
		"GPUCompilationMessage"
	],
	[
		"GPUCompilationMessage",
		"prototype",
		"type"
	],
	[
		"GPUCompilationMessage",
		"prototype",
		"offset"
	],
	[
		"GPUCompilationMessage",
		"prototype",
		"message"
	],
	[
		"GPUCompilationMessage",
		"prototype",
		"linePos"
	],
	[
		"GPUCompilationMessage",
		"prototype",
		"lineNum"
	],
	[
		"GPUCompilationMessage",
		"prototype",
		"length"
	],
	[
		"GPUCompilationMessage",
		"prototype"
	],
	[
		"GPUComputePassEncoder"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"setPipeline()"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"setBindGroup()"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"pushDebugGroup()"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"popDebugGroup()"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"label"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"insertDebugMarker()"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"end()"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"dispatchWorkgroupsIndirect()"
	],
	[
		"GPUComputePassEncoder",
		"prototype",
		"dispatchWorkgroups()"
	],
	[
		"GPUComputePassEncoder",
		"prototype"
	],
	[
		"GPUComputePipeline"
	],
	[
		"GPUComputePipeline",
		"prototype",
		"label"
	],
	[
		"GPUComputePipeline",
		"prototype",
		"getBindGroupLayout()"
	],
	[
		"GPUComputePipeline",
		"prototype"
	],
	[
		"GPUDevice"
	],
	[
		"GPUDevice",
		"prototype",
		"queue"
	],
	[
		"GPUDevice",
		"prototype",
		"pushErrorScope()"
	],
	[
		"GPUDevice",
		"prototype",
		"popErrorScope()"
	],
	[
		"GPUDevice",
		"prototype",
		"onuncapturederror"
	],
	[
		"GPUDevice",
		"prototype",
		"lost"
	],
	[
		"GPUDevice",
		"prototype",
		"limits"
	],
	[
		"GPUDevice",
		"prototype",
		"label"
	],
	[
		"GPUDevice",
		"prototype",
		"importExternalTexture()"
	],
	[
		"GPUDevice",
		"prototype",
		"features"
	],
	[
		"GPUDevice",
		"prototype",
		"destroy()"
	],
	[
		"GPUDevice",
		"prototype",
		"createTexture()"
	],
	[
		"GPUDevice",
		"prototype",
		"createShaderModule()"
	],
	[
		"GPUDevice",
		"prototype",
		"createSampler()"
	],
	[
		"GPUDevice",
		"prototype",
		"createRenderPipelineAsync()"
	],
	[
		"GPUDevice",
		"prototype",
		"createRenderPipeline()"
	],
	[
		"GPUDevice",
		"prototype",
		"createRenderBundleEncoder()"
	],
	[
		"GPUDevice",
		"prototype",
		"createQuerySet()"
	],
	[
		"GPUDevice",
		"prototype",
		"createPipelineLayout()"
	],
	[
		"GPUDevice",
		"prototype",
		"createComputePipelineAsync()"
	],
	[
		"GPUDevice",
		"prototype",
		"createComputePipeline()"
	],
	[
		"GPUDevice",
		"prototype",
		"createCommandEncoder()"
	],
	[
		"GPUDevice",
		"prototype",
		"createBuffer()"
	],
	[
		"GPUDevice",
		"prototype",
		"createBindGroupLayout()"
	],
	[
		"GPUDevice",
		"prototype",
		"createBindGroup()"
	],
	[
		"GPUDevice",
		"prototype"
	],
	[
		"GPUDeviceLostInfo"
	],
	[
		"GPUDeviceLostInfo",
		"prototype",
		"reason"
	],
	[
		"GPUDeviceLostInfo",
		"prototype",
		"message"
	],
	[
		"GPUDeviceLostInfo",
		"prototype"
	],
	[
		"GPUError"
	],
	[
		"GPUError",
		"prototype",
		"message"
	],
	[
		"GPUError",
		"prototype"
	],
	[
		"GPUExternalTexture"
	],
	[
		"GPUExternalTexture",
		"prototype",
		"label"
	],
	[
		"GPUExternalTexture",
		"prototype"
	],
	[
		"GPUInternalError"
	],
	[
		"GPUInternalError",
		"prototype"
	],
	[
		"GPUMapMode"
	],
	[
		"GPUMapMode",
		"WRITE"
	],
	[
		"GPUMapMode",
		"READ"
	],
	[
		"GPUOutOfMemoryError"
	],
	[
		"GPUOutOfMemoryError",
		"prototype"
	],
	[
		"GPUPipelineError"
	],
	[
		"GPUPipelineError",
		"prototype",
		"reason"
	],
	[
		"GPUPipelineError",
		"prototype"
	],
	[
		"GPUPipelineLayout"
	],
	[
		"GPUPipelineLayout",
		"prototype",
		"label"
	],
	[
		"GPUPipelineLayout",
		"prototype"
	],
	[
		"GPUQuerySet"
	],
	[
		"GPUQuerySet",
		"prototype",
		"type"
	],
	[
		"GPUQuerySet",
		"prototype",
		"label"
	],
	[
		"GPUQuerySet",
		"prototype",
		"destroy()"
	],
	[
		"GPUQuerySet",
		"prototype",
		"count"
	],
	[
		"GPUQuerySet",
		"prototype"
	],
	[
		"GPUQueue"
	],
	[
		"GPUQueue",
		"prototype",
		"writeTexture()"
	],
	[
		"GPUQueue",
		"prototype",
		"writeBuffer()"
	],
	[
		"GPUQueue",
		"prototype",
		"submit()"
	],
	[
		"GPUQueue",
		"prototype",
		"onSubmittedWorkDone()"
	],
	[
		"GPUQueue",
		"prototype",
		"label"
	],
	[
		"GPUQueue",
		"prototype",
		"copyExternalImageToTexture()"
	],
	[
		"GPUQueue",
		"prototype"
	],
	[
		"GPURenderBundle"
	],
	[
		"GPURenderBundle",
		"prototype",
		"label"
	],
	[
		"GPURenderBundle",
		"prototype"
	],
	[
		"GPURenderBundleEncoder"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"setVertexBuffer()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"setPipeline()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"setIndexBuffer()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"setBindGroup()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"pushDebugGroup()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"popDebugGroup()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"label"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"insertDebugMarker()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"finish()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"drawIndirect()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"drawIndexedIndirect()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"drawIndexed()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype",
		"draw()"
	],
	[
		"GPURenderBundleEncoder",
		"prototype"
	],
	[
		"GPURenderPassEncoder"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setViewport()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setVertexBuffer()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setStencilReference()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setScissorRect()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setPipeline()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setIndexBuffer()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setBlendConstant()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"setBindGroup()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"pushDebugGroup()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"popDebugGroup()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"label"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"insertDebugMarker()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"executeBundles()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"endOcclusionQuery()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"end()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"drawIndirect()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"drawIndexedIndirect()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"drawIndexed()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"draw()"
	],
	[
		"GPURenderPassEncoder",
		"prototype",
		"beginOcclusionQuery()"
	],
	[
		"GPURenderPassEncoder",
		"prototype"
	],
	[
		"GPURenderPipeline"
	],
	[
		"GPURenderPipeline",
		"prototype",
		"label"
	],
	[
		"GPURenderPipeline",
		"prototype",
		"getBindGroupLayout()"
	],
	[
		"GPURenderPipeline",
		"prototype"
	],
	[
		"GPUSampler"
	],
	[
		"GPUSampler",
		"prototype",
		"label"
	],
	[
		"GPUSampler",
		"prototype"
	],
	[
		"GPUShaderModule"
	],
	[
		"GPUShaderModule",
		"prototype",
		"label"
	],
	[
		"GPUShaderModule",
		"prototype",
		"getCompilationInfo()"
	],
	[
		"GPUShaderModule",
		"prototype"
	],
	[
		"GPUShaderStage"
	],
	[
		"GPUShaderStage",
		"VERTEX"
	],
	[
		"GPUShaderStage",
		"FRAGMENT"
	],
	[
		"GPUShaderStage",
		"COMPUTE"
	],
	[
		"GPUSupportedFeatures"
	],
	[
		"GPUSupportedFeatures",
		"prototype"
	],
	[
		"GPUSupportedLimits"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"minUniformBufferOffsetAlignment"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"minStorageBufferOffsetAlignment"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxVertexBuffers"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxVertexBufferArrayStride"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxVertexAttributes"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxUniformBuffersPerShaderStage"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxUniformBufferBindingSize"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxTextureDimension3D"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxTextureDimension2D"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxTextureDimension1D"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxTextureArrayLayers"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxStorageTexturesPerShaderStage"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxStorageBuffersPerShaderStage"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxStorageBufferBindingSize"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxSamplersPerShaderStage"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxSampledTexturesPerShaderStage"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxInterStageShaderVariables"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxDynamicUniformBuffersPerPipelineLayout"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxDynamicStorageBuffersPerPipelineLayout"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxComputeWorkgroupsPerDimension"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxComputeWorkgroupStorageSize"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxComputeWorkgroupSizeZ"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxComputeWorkgroupSizeY"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxComputeWorkgroupSizeX"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxComputeInvocationsPerWorkgroup"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxColorAttachments"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxColorAttachmentBytesPerSample"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxBufferSize"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxBindingsPerBindGroup"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxBindGroupsPlusVertexBuffers"
	],
	[
		"GPUSupportedLimits",
		"prototype",
		"maxBindGroups"
	],
	[
		"GPUSupportedLimits",
		"prototype"
	],
	[
		"GPUTexture"
	],
	[
		"GPUTexture",
		"prototype",
		"width"
	],
	[
		"GPUTexture",
		"prototype",
		"usage"
	],
	[
		"GPUTexture",
		"prototype",
		"sampleCount"
	],
	[
		"GPUTexture",
		"prototype",
		"mipLevelCount"
	],
	[
		"GPUTexture",
		"prototype",
		"label"
	],
	[
		"GPUTexture",
		"prototype",
		"height"
	],
	[
		"GPUTexture",
		"prototype",
		"format"
	],
	[
		"GPUTexture",
		"prototype",
		"dimension"
	],
	[
		"GPUTexture",
		"prototype",
		"destroy()"
	],
	[
		"GPUTexture",
		"prototype",
		"depthOrArrayLayers"
	],
	[
		"GPUTexture",
		"prototype",
		"createView()"
	],
	[
		"GPUTexture",
		"prototype"
	],
	[
		"GPUTextureUsage"
	],
	[
		"GPUTextureUsage",
		"TEXTURE_BINDING"
	],
	[
		"GPUTextureUsage",
		"STORAGE_BINDING"
	],
	[
		"GPUTextureUsage",
		"RENDER_ATTACHMENT"
	],
	[
		"GPUTextureUsage",
		"COPY_SRC"
	],
	[
		"GPUTextureUsage",
		"COPY_DST"
	],
	[
		"GPUTextureView"
	],
	[
		"GPUTextureView",
		"prototype",
		"label"
	],
	[
		"GPUTextureView",
		"prototype"
	],
	[
		"GPUUncapturedErrorEvent"
	],
	[
		"GPUUncapturedErrorEvent",
		"prototype",
		"error"
	],
	[
		"GPUUncapturedErrorEvent",
		"prototype"
	],
	[
		"GPUValidationError"
	],
	[
		"GPUValidationError",
		"prototype"
	],
	[
		"GravitySensor"
	],
	[
		"GravitySensor",
		"prototype"
	],
	[
		"GroupEffect"
	],
	[
		"GroupEffect",
		"prototype",
		"prepend()"
	],
	[
		"GroupEffect",
		"prototype",
		"lastChild"
	],
	[
		"GroupEffect",
		"prototype",
		"firstChild"
	],
	[
		"GroupEffect",
		"prototype",
		"clone()"
	],
	[
		"GroupEffect",
		"prototype",
		"children"
	],
	[
		"GroupEffect",
		"prototype",
		"append()"
	],
	[
		"GroupEffect",
		"prototype"
	],
	[
		"Gyroscope"
	],
	[
		"Gyroscope",
		"prototype",
		"z"
	],
	[
		"Gyroscope",
		"prototype",
		"y"
	],
	[
		"Gyroscope",
		"prototype",
		"x"
	],
	[
		"Gyroscope",
		"prototype"
	],
	[
		"HandwritingDrawing"
	],
	[
		"HandwritingDrawing",
		"prototype",
		"removeStroke()"
	],
	[
		"HandwritingDrawing",
		"prototype",
		"getStrokes()"
	],
	[
		"HandwritingDrawing",
		"prototype",
		"getPrediction()"
	],
	[
		"HandwritingDrawing",
		"prototype",
		"clear()"
	],
	[
		"HandwritingDrawing",
		"prototype",
		"clear()"
	],
	[
		"HandwritingDrawing",
		"prototype",
		"addStroke()"
	],
	[
		"HandwritingDrawing",
		"prototype"
	],
	[
		"HandwritingRecognizer"
	],
	[
		"HandwritingRecognizer",
		"prototype",
		"startDrawing()"
	],
	[
		"HandwritingRecognizer",
		"prototype",
		"finish()"
	],
	[
		"HandwritingRecognizer",
		"prototype",
		"finish()"
	],
	[
		"HandwritingRecognizer",
		"prototype"
	],
	[
		"HandwritingStroke"
	],
	[
		"HandwritingStroke",
		"prototype",
		"getPoints()"
	],
	[
		"HandwritingStroke",
		"prototype",
		"clear()"
	],
	[
		"HandwritingStroke",
		"prototype",
		"clear()"
	],
	[
		"HandwritingStroke",
		"prototype",
		"addPoint()"
	],
	[
		"HandwritingStroke",
		"prototype"
	],
	[
		"HashChangeEvent"
	],
	[
		"HashChangeEvent",
		"prototype",
		"oldURL"
	],
	[
		"HashChangeEvent",
		"prototype",
		"newURL"
	],
	[
		"HashChangeEvent",
		"prototype"
	],
	[
		"Headers"
	],
	[
		"Headers",
		"prototype",
		"set()"
	],
	[
		"Headers",
		"prototype",
		"has()"
	],
	[
		"Headers",
		"prototype",
		"getSetCookie()"
	],
	[
		"Headers",
		"prototype",
		"get()"
	],
	[
		"Headers",
		"prototype",
		"delete()"
	],
	[
		"Headers",
		"prototype",
		"append()"
	],
	[
		"Headers",
		"prototype"
	],
	[
		"HID"
	],
	[
		"HID",
		"prototype",
		"requestDevice()"
	],
	[
		"HID",
		"prototype",
		"ondisconnect"
	],
	[
		"HID",
		"prototype",
		"onconnect"
	],
	[
		"HID",
		"prototype",
		"getDevices()"
	],
	[
		"HID",
		"prototype"
	],
	[
		"HIDConnectionEvent"
	],
	[
		"HIDConnectionEvent",
		"prototype",
		"device"
	],
	[
		"HIDConnectionEvent",
		"prototype"
	],
	[
		"HIDDevice"
	],
	[
		"HIDDevice",
		"prototype",
		"vendorId"
	],
	[
		"HIDDevice",
		"prototype",
		"sendReport()"
	],
	[
		"HIDDevice",
		"prototype",
		"sendFeatureReport()"
	],
	[
		"HIDDevice",
		"prototype",
		"receiveFeatureReport()"
	],
	[
		"HIDDevice",
		"prototype",
		"productName"
	],
	[
		"HIDDevice",
		"prototype",
		"productId"
	],
	[
		"HIDDevice",
		"prototype",
		"opened"
	],
	[
		"HIDDevice",
		"prototype",
		"open()"
	],
	[
		"HIDDevice",
		"prototype",
		"oninputreport"
	],
	[
		"HIDDevice",
		"prototype",
		"forget()"
	],
	[
		"HIDDevice",
		"prototype",
		"collections"
	],
	[
		"HIDDevice",
		"prototype",
		"close()"
	],
	[
		"HIDDevice",
		"prototype"
	],
	[
		"HIDInputReportEvent"
	],
	[
		"HIDInputReportEvent",
		"prototype",
		"reportId"
	],
	[
		"HIDInputReportEvent",
		"prototype",
		"device"
	],
	[
		"HIDInputReportEvent",
		"prototype",
		"data"
	],
	[
		"HIDInputReportEvent",
		"prototype"
	],
	[
		"Highlight"
	],
	[
		"Highlight",
		"prototype",
		"type"
	],
	[
		"Highlight",
		"prototype",
		"priority"
	],
	[
		"Highlight",
		"prototype"
	],
	[
		"HighlightRegistry"
	],
	[
		"HighlightRegistry",
		"prototype"
	],
	[
		"History"
	],
	[
		"History",
		"prototype",
		"state"
	],
	[
		"History",
		"prototype",
		"scrollRestoration"
	],
	[
		"History",
		"prototype",
		"replaceState()"
	],
	[
		"History",
		"prototype",
		"pushState()"
	],
	[
		"History",
		"prototype",
		"length"
	],
	[
		"History",
		"prototype",
		"go()"
	],
	[
		"History",
		"prototype",
		"forward()"
	],
	[
		"History",
		"prototype",
		"back()"
	],
	[
		"History",
		"prototype"
	],
	[
		"HTMLAllCollection"
	],
	[
		"HTMLAllCollection",
		"prototype",
		"namedItem()"
	],
	[
		"HTMLAllCollection",
		"prototype",
		"length"
	],
	[
		"HTMLAllCollection",
		"prototype",
		"item()"
	],
	[
		"HTMLAllCollection",
		"prototype"
	],
	[
		"HTMLAnchorElement"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"username"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"type"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"text"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"target"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"shape"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"search"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"rev"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"relList"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"rel"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"protocol"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"port"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"ping"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"pathname"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"password"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"origin"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"name"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"hreflang"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"href"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"hostname"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"host"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"hash"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"download"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"coords"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"charset"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"attributionSrc"
	],
	[
		"HTMLAnchorElement",
		"prototype",
		"attributionSourceId"
	],
	[
		"HTMLAnchorElement",
		"prototype"
	],
	[
		"HTMLAreaElement"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"username"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"target"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"shape"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"search"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"relList"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"rel"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"protocol"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"port"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"ping"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"pathname"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"password"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"origin"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"noHref"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"href"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"hostname"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"host"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"hash"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"download"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"coords"
	],
	[
		"HTMLAreaElement",
		"prototype",
		"alt"
	],
	[
		"HTMLAreaElement",
		"prototype"
	],
	[
		"HTMLAudioElement"
	],
	[
		"HTMLAudioElement",
		"prototype"
	],
	[
		"HTMLBaseElement"
	],
	[
		"HTMLBaseElement",
		"prototype",
		"target"
	],
	[
		"HTMLBaseElement",
		"prototype",
		"href"
	],
	[
		"HTMLBaseElement",
		"prototype"
	],
	[
		"HTMLBodyElement"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"vLink"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"text"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onunload"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onunhandledrejection"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onstorage"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onrejectionhandled"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onportalactivate"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onpopstate"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onpageswap"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onpageshow"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onpagereveal"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onpagehide"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onorientationchange"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"ononline"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onoffline"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onmessageerror"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onmessage"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onlanguagechange"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onhashchange"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"ongamepaddisconnected"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"ongamepadconnected"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onbeforeunload"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onbeforeprint"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"onafterprint"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"link"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"bgColor"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"background"
	],
	[
		"HTMLBodyElement",
		"prototype",
		"aLink"
	],
	[
		"HTMLBodyElement",
		"prototype"
	],
	[
		"HTMLBRElement"
	],
	[
		"HTMLBRElement",
		"prototype",
		"clear"
	],
	[
		"HTMLBRElement",
		"prototype"
	],
	[
		"HTMLButtonElement"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"willValidate"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"value"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"validity"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"validationMessage"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"type"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"setCustomValidity()"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"popoverTargetElement"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"popoverTargetAction"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"name"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"labels"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"formTarget"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"formNoValidate"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"formMethod"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"formEnctype"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"formAction"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"form"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLButtonElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLButtonElement",
		"prototype"
	],
	[
		"HTMLCanvasElement"
	],
	[
		"HTMLCanvasElement",
		"prototype",
		"width"
	],
	[
		"HTMLCanvasElement",
		"prototype",
		"transferControlToOffscreen()"
	],
	[
		"HTMLCanvasElement",
		"prototype",
		"toDataURL()"
	],
	[
		"HTMLCanvasElement",
		"prototype",
		"toBlob()"
	],
	[
		"HTMLCanvasElement",
		"prototype",
		"height"
	],
	[
		"HTMLCanvasElement",
		"prototype",
		"getContext()"
	],
	[
		"HTMLCanvasElement",
		"prototype",
		"captureStream()"
	],
	[
		"HTMLCanvasElement",
		"prototype"
	],
	[
		"HTMLCollection"
	],
	[
		"HTMLCollection",
		"prototype",
		"namedItem()"
	],
	[
		"HTMLCollection",
		"prototype",
		"length"
	],
	[
		"HTMLCollection",
		"prototype",
		"item()"
	],
	[
		"HTMLCollection",
		"prototype"
	],
	[
		"HTMLDataElement"
	],
	[
		"HTMLDataElement",
		"prototype",
		"value"
	],
	[
		"HTMLDataElement",
		"prototype"
	],
	[
		"HTMLDataListElement"
	],
	[
		"HTMLDataListElement",
		"prototype",
		"options"
	],
	[
		"HTMLDataListElement",
		"prototype"
	],
	[
		"HTMLDetailsElement"
	],
	[
		"HTMLDetailsElement",
		"prototype",
		"open"
	],
	[
		"HTMLDetailsElement",
		"prototype",
		"name"
	],
	[
		"HTMLDetailsElement",
		"prototype"
	],
	[
		"HTMLDialogElement"
	],
	[
		"HTMLDialogElement",
		"prototype",
		"showModal()"
	],
	[
		"HTMLDialogElement",
		"prototype",
		"show()"
	],
	[
		"HTMLDialogElement",
		"prototype",
		"returnValue"
	],
	[
		"HTMLDialogElement",
		"prototype",
		"open"
	],
	[
		"HTMLDialogElement",
		"prototype",
		"close()"
	],
	[
		"HTMLDialogElement",
		"prototype"
	],
	[
		"HTMLDirectoryElement"
	],
	[
		"HTMLDirectoryElement",
		"prototype",
		"compact"
	],
	[
		"HTMLDirectoryElement",
		"prototype"
	],
	[
		"HTMLDivElement"
	],
	[
		"HTMLDivElement",
		"prototype",
		"align"
	],
	[
		"HTMLDivElement",
		"prototype"
	],
	[
		"HTMLDListElement"
	],
	[
		"HTMLDListElement",
		"prototype",
		"compact"
	],
	[
		"HTMLDListElement",
		"prototype"
	],
	[
		"HTMLElement"
	],
	[
		"HTMLElement",
		"prototype",
		"writingSuggestions"
	],
	[
		"HTMLElement",
		"prototype",
		"virtualKeyboardPolicy"
	],
	[
		"HTMLElement",
		"prototype",
		"translate"
	],
	[
		"HTMLElement",
		"prototype",
		"togglePopover()"
	],
	[
		"HTMLElement",
		"prototype",
		"title"
	],
	[
		"HTMLElement",
		"prototype",
		"tabIndex"
	],
	[
		"HTMLElement",
		"prototype",
		"style"
	],
	[
		"HTMLElement",
		"prototype",
		"spellcheck"
	],
	[
		"HTMLElement",
		"prototype",
		"showPopover()"
	],
	[
		"HTMLElement",
		"prototype",
		"popover"
	],
	[
		"HTMLElement",
		"prototype",
		"outerText"
	],
	[
		"HTMLElement",
		"prototype",
		"onwheel"
	],
	[
		"HTMLElement",
		"prototype",
		"onwebkittransitionend"
	],
	[
		"HTMLElement",
		"prototype",
		"onwebkitanimationstart"
	],
	[
		"HTMLElement",
		"prototype",
		"onwebkitanimationiteration"
	],
	[
		"HTMLElement",
		"prototype",
		"onwebkitanimationend"
	],
	[
		"HTMLElement",
		"prototype",
		"onwaiting"
	],
	[
		"HTMLElement",
		"prototype",
		"onvolumechange"
	],
	[
		"HTMLElement",
		"prototype",
		"ontransitionstart"
	],
	[
		"HTMLElement",
		"prototype",
		"ontransitionrun"
	],
	[
		"HTMLElement",
		"prototype",
		"ontransitionend"
	],
	[
		"HTMLElement",
		"prototype",
		"ontransitioncancel"
	],
	[
		"HTMLElement",
		"prototype",
		"ontouchstart"
	],
	[
		"HTMLElement",
		"prototype",
		"ontouchmove"
	],
	[
		"HTMLElement",
		"prototype",
		"ontouchend"
	],
	[
		"HTMLElement",
		"prototype",
		"ontouchcancel"
	],
	[
		"HTMLElement",
		"prototype",
		"ontoggle"
	],
	[
		"HTMLElement",
		"prototype",
		"ontimeupdate"
	],
	[
		"HTMLElement",
		"prototype",
		"onsuspend"
	],
	[
		"HTMLElement",
		"prototype",
		"onsubmit"
	],
	[
		"HTMLElement",
		"prototype",
		"onstalled"
	],
	[
		"HTMLElement",
		"prototype",
		"onsnapchanging"
	],
	[
		"HTMLElement",
		"prototype",
		"onsnapchanged"
	],
	[
		"HTMLElement",
		"prototype",
		"onslotchange"
	],
	[
		"HTMLElement",
		"prototype",
		"onselectstart"
	],
	[
		"HTMLElement",
		"prototype",
		"onselectionchange"
	],
	[
		"HTMLElement",
		"prototype",
		"onselect"
	],
	[
		"HTMLElement",
		"prototype",
		"onseeking"
	],
	[
		"HTMLElement",
		"prototype",
		"onseeked"
	],
	[
		"HTMLElement",
		"prototype",
		"onsecuritypolicyviolation"
	],
	[
		"HTMLElement",
		"prototype",
		"onscrollend"
	],
	[
		"HTMLElement",
		"prototype",
		"onscroll"
	],
	[
		"HTMLElement",
		"prototype",
		"onresize"
	],
	[
		"HTMLElement",
		"prototype",
		"onreset"
	],
	[
		"HTMLElement",
		"prototype",
		"onratechange"
	],
	[
		"HTMLElement",
		"prototype",
		"onprogress"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointerup"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointerrawupdate"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointerover"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointerout"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointermove"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointerleave"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointerenter"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointerdown"
	],
	[
		"HTMLElement",
		"prototype",
		"onpointercancel"
	],
	[
		"HTMLElement",
		"prototype",
		"onplaying"
	],
	[
		"HTMLElement",
		"prototype",
		"onplay"
	],
	[
		"HTMLElement",
		"prototype",
		"onpause"
	],
	[
		"HTMLElement",
		"prototype",
		"onpaste"
	],
	[
		"HTMLElement",
		"prototype",
		"onmouseup"
	],
	[
		"HTMLElement",
		"prototype",
		"onmouseover"
	],
	[
		"HTMLElement",
		"prototype",
		"onmouseout"
	],
	[
		"HTMLElement",
		"prototype",
		"onmousemove"
	],
	[
		"HTMLElement",
		"prototype",
		"onmouseleave"
	],
	[
		"HTMLElement",
		"prototype",
		"onmouseenter"
	],
	[
		"HTMLElement",
		"prototype",
		"onmousedown"
	],
	[
		"HTMLElement",
		"prototype",
		"onlostpointercapture"
	],
	[
		"HTMLElement",
		"prototype",
		"onloadstart"
	],
	[
		"HTMLElement",
		"prototype",
		"onloadedmetadata"
	],
	[
		"HTMLElement",
		"prototype",
		"onloadeddata"
	],
	[
		"HTMLElement",
		"prototype",
		"onload"
	],
	[
		"HTMLElement",
		"prototype",
		"onkeyup"
	],
	[
		"HTMLElement",
		"prototype",
		"onkeypress"
	],
	[
		"HTMLElement",
		"prototype",
		"onkeydown"
	],
	[
		"HTMLElement",
		"prototype",
		"oninvalid"
	],
	[
		"HTMLElement",
		"prototype",
		"oninput"
	],
	[
		"HTMLElement",
		"prototype",
		"ongotpointercapture"
	],
	[
		"HTMLElement",
		"prototype",
		"onformdata"
	],
	[
		"HTMLElement",
		"prototype",
		"onfocus"
	],
	[
		"HTMLElement",
		"prototype",
		"onerror"
	],
	[
		"HTMLElement",
		"prototype",
		"onended"
	],
	[
		"HTMLElement",
		"prototype",
		"onemptied"
	],
	[
		"HTMLElement",
		"prototype",
		"ondurationchange"
	],
	[
		"HTMLElement",
		"prototype",
		"ondrop"
	],
	[
		"HTMLElement",
		"prototype",
		"ondragstart"
	],
	[
		"HTMLElement",
		"prototype",
		"ondragover"
	],
	[
		"HTMLElement",
		"prototype",
		"ondragleave"
	],
	[
		"HTMLElement",
		"prototype",
		"ondragenter"
	],
	[
		"HTMLElement",
		"prototype",
		"ondragend"
	],
	[
		"HTMLElement",
		"prototype",
		"ondrag"
	],
	[
		"HTMLElement",
		"prototype",
		"ondblclick"
	],
	[
		"HTMLElement",
		"prototype",
		"oncut"
	],
	[
		"HTMLElement",
		"prototype",
		"oncuechange"
	],
	[
		"HTMLElement",
		"prototype",
		"oncopy"
	],
	[
		"HTMLElement",
		"prototype",
		"oncontextrestored"
	],
	[
		"HTMLElement",
		"prototype",
		"oncontextmenu"
	],
	[
		"HTMLElement",
		"prototype",
		"oncontextlost"
	],
	[
		"HTMLElement",
		"prototype",
		"onclose"
	],
	[
		"HTMLElement",
		"prototype",
		"onclick"
	],
	[
		"HTMLElement",
		"prototype",
		"onchange"
	],
	[
		"HTMLElement",
		"prototype",
		"oncanplaythrough"
	],
	[
		"HTMLElement",
		"prototype",
		"oncanplay"
	],
	[
		"HTMLElement",
		"prototype",
		"oncancel"
	],
	[
		"HTMLElement",
		"prototype",
		"onblur"
	],
	[
		"HTMLElement",
		"prototype",
		"onbeforexrselect"
	],
	[
		"HTMLElement",
		"prototype",
		"onbeforetoggle"
	],
	[
		"HTMLElement",
		"prototype",
		"onbeforematch"
	],
	[
		"HTMLElement",
		"prototype",
		"onbeforeinput"
	],
	[
		"HTMLElement",
		"prototype",
		"onauxclick"
	],
	[
		"HTMLElement",
		"prototype",
		"onanimationstart"
	],
	[
		"HTMLElement",
		"prototype",
		"onanimationiteration"
	],
	[
		"HTMLElement",
		"prototype",
		"onanimationend"
	],
	[
		"HTMLElement",
		"prototype",
		"onanimationcancel"
	],
	[
		"HTMLElement",
		"prototype",
		"onabort"
	],
	[
		"HTMLElement",
		"prototype",
		"offsetWidth"
	],
	[
		"HTMLElement",
		"prototype",
		"offsetTop"
	],
	[
		"HTMLElement",
		"prototype",
		"offsetParent"
	],
	[
		"HTMLElement",
		"prototype",
		"offsetLeft"
	],
	[
		"HTMLElement",
		"prototype",
		"offsetHeight"
	],
	[
		"HTMLElement",
		"prototype",
		"nonce"
	],
	[
		"HTMLElement",
		"prototype",
		"lang"
	],
	[
		"HTMLElement",
		"prototype",
		"isContentEditable"
	],
	[
		"HTMLElement",
		"prototype",
		"inputMode"
	],
	[
		"HTMLElement",
		"prototype",
		"innerText"
	],
	[
		"HTMLElement",
		"prototype",
		"inert"
	],
	[
		"HTMLElement",
		"prototype",
		"hidePopover()"
	],
	[
		"HTMLElement",
		"prototype",
		"hidden"
	],
	[
		"HTMLElement",
		"prototype",
		"focus()"
	],
	[
		"HTMLElement",
		"prototype",
		"enterKeyHint"
	],
	[
		"HTMLElement",
		"prototype",
		"editContext"
	],
	[
		"HTMLElement",
		"prototype",
		"draggable"
	],
	[
		"HTMLElement",
		"prototype",
		"dir"
	],
	[
		"HTMLElement",
		"prototype",
		"dataset"
	],
	[
		"HTMLElement",
		"prototype",
		"contentEditable"
	],
	[
		"HTMLElement",
		"prototype",
		"click()"
	],
	[
		"HTMLElement",
		"prototype",
		"blur()"
	],
	[
		"HTMLElement",
		"prototype",
		"autofocus"
	],
	[
		"HTMLElement",
		"prototype",
		"autocorrect"
	],
	[
		"HTMLElement",
		"prototype",
		"autocapitalize"
	],
	[
		"HTMLElement",
		"prototype",
		"attributeStyleMap"
	],
	[
		"HTMLElement",
		"prototype",
		"attachInternals()"
	],
	[
		"HTMLElement",
		"prototype",
		"accessKeyLabel"
	],
	[
		"HTMLElement",
		"prototype",
		"accessKey"
	],
	[
		"HTMLElement",
		"prototype"
	],
	[
		"HTMLEmbedElement"
	],
	[
		"HTMLEmbedElement",
		"prototype",
		"width"
	],
	[
		"HTMLEmbedElement",
		"prototype",
		"type"
	],
	[
		"HTMLEmbedElement",
		"prototype",
		"src"
	],
	[
		"HTMLEmbedElement",
		"prototype",
		"name"
	],
	[
		"HTMLEmbedElement",
		"prototype",
		"height"
	],
	[
		"HTMLEmbedElement",
		"prototype",
		"getSVGDocument()"
	],
	[
		"HTMLEmbedElement",
		"prototype",
		"align"
	],
	[
		"HTMLEmbedElement",
		"prototype"
	],
	[
		"HTMLFencedFrameElement"
	],
	[
		"HTMLFencedFrameElement",
		"prototype",
		"width"
	],
	[
		"HTMLFencedFrameElement",
		"prototype",
		"sandbox"
	],
	[
		"HTMLFencedFrameElement",
		"prototype",
		"height"
	],
	[
		"HTMLFencedFrameElement",
		"prototype",
		"config"
	],
	[
		"HTMLFencedFrameElement",
		"prototype",
		"allow"
	],
	[
		"HTMLFencedFrameElement",
		"prototype"
	],
	[
		"HTMLFieldSetElement"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"willValidate"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"validity"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"validationMessage"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"type"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"setCustomValidity()"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"name"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"form"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"elements"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLFieldSetElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLFieldSetElement",
		"prototype"
	],
	[
		"HTMLFontElement"
	],
	[
		"HTMLFontElement",
		"prototype",
		"size"
	],
	[
		"HTMLFontElement",
		"prototype",
		"face"
	],
	[
		"HTMLFontElement",
		"prototype",
		"color"
	],
	[
		"HTMLFontElement",
		"prototype"
	],
	[
		"HTMLFormControlsCollection"
	],
	[
		"HTMLFormControlsCollection",
		"prototype",
		"namedItem()"
	],
	[
		"HTMLFormControlsCollection",
		"prototype"
	],
	[
		"HTMLFormElement"
	],
	[
		"HTMLFormElement",
		"prototype",
		"target"
	],
	[
		"HTMLFormElement",
		"prototype",
		"submit()"
	],
	[
		"HTMLFormElement",
		"prototype",
		"reset()"
	],
	[
		"HTMLFormElement",
		"prototype",
		"requestSubmit()"
	],
	[
		"HTMLFormElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLFormElement",
		"prototype",
		"relList"
	],
	[
		"HTMLFormElement",
		"prototype",
		"rel"
	],
	[
		"HTMLFormElement",
		"prototype",
		"noValidate"
	],
	[
		"HTMLFormElement",
		"prototype",
		"name"
	],
	[
		"HTMLFormElement",
		"prototype",
		"method"
	],
	[
		"HTMLFormElement",
		"prototype",
		"length"
	],
	[
		"HTMLFormElement",
		"prototype",
		"enctype"
	],
	[
		"HTMLFormElement",
		"prototype",
		"encoding"
	],
	[
		"HTMLFormElement",
		"prototype",
		"elements"
	],
	[
		"HTMLFormElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLFormElement",
		"prototype",
		"autocomplete"
	],
	[
		"HTMLFormElement",
		"prototype",
		"action"
	],
	[
		"HTMLFormElement",
		"prototype",
		"acceptCharset"
	],
	[
		"HTMLFormElement",
		"prototype"
	],
	[
		"HTMLFrameElement"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"src"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"scrolling"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"noResize"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"name"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"marginWidth"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"marginHeight"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"longDesc"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"frameBorder"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"contentWindow"
	],
	[
		"HTMLFrameElement",
		"prototype",
		"contentDocument"
	],
	[
		"HTMLFrameElement",
		"prototype"
	],
	[
		"HTMLFrameSetElement"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"rows"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onunload"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onunhandledrejection"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onstorage"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onrejectionhandled"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onportalactivate"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onpopstate"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onpageswap"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onpageshow"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onpagereveal"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onpagehide"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"ononline"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onoffline"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onmessageerror"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onmessage"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onlanguagechange"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onhashchange"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"ongamepaddisconnected"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"ongamepadconnected"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onbeforeunload"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onbeforeprint"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"onafterprint"
	],
	[
		"HTMLFrameSetElement",
		"prototype",
		"cols"
	],
	[
		"HTMLFrameSetElement",
		"prototype"
	],
	[
		"HTMLHeadElement"
	],
	[
		"HTMLHeadElement",
		"prototype"
	],
	[
		"HTMLHeadingElement"
	],
	[
		"HTMLHeadingElement",
		"prototype",
		"align"
	],
	[
		"HTMLHeadingElement",
		"prototype"
	],
	[
		"HTMLHRElement"
	],
	[
		"HTMLHRElement",
		"prototype",
		"width"
	],
	[
		"HTMLHRElement",
		"prototype",
		"size"
	],
	[
		"HTMLHRElement",
		"prototype",
		"noShade"
	],
	[
		"HTMLHRElement",
		"prototype",
		"color"
	],
	[
		"HTMLHRElement",
		"prototype",
		"align"
	],
	[
		"HTMLHRElement",
		"prototype"
	],
	[
		"HTMLHtmlElement"
	],
	[
		"HTMLHtmlElement",
		"prototype",
		"version"
	],
	[
		"HTMLHtmlElement",
		"prototype"
	],
	[
		"HTMLIFrameElement"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"width"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"srcdoc"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"src"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"sharedStorageWritable"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"scrolling"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"sandbox"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"privateToken"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"permissionsPolicy"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"name"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"marginWidth"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"marginHeight"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"longDesc"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"loading"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"height"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"getSVGDocument()"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"frameBorder"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"csp"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"credentialless"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"credentialless"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"cowl"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"contentWindow"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"contentDocument"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"allowFullscreen"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"allow"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"align"
	],
	[
		"HTMLIFrameElement",
		"prototype",
		"adAuctionHeaders"
	],
	[
		"HTMLIFrameElement",
		"prototype"
	],
	[
		"HTMLImageElement"
	],
	[
		"HTMLImageElement",
		"prototype",
		"y"
	],
	[
		"HTMLImageElement",
		"prototype",
		"x"
	],
	[
		"HTMLImageElement",
		"prototype",
		"width"
	],
	[
		"HTMLImageElement",
		"prototype",
		"vspace"
	],
	[
		"HTMLImageElement",
		"prototype",
		"useMap"
	],
	[
		"HTMLImageElement",
		"prototype",
		"srcset"
	],
	[
		"HTMLImageElement",
		"prototype",
		"src"
	],
	[
		"HTMLImageElement",
		"prototype",
		"sizes"
	],
	[
		"HTMLImageElement",
		"prototype",
		"sharedStorageWritable"
	],
	[
		"HTMLImageElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"HTMLImageElement",
		"prototype",
		"naturalWidth"
	],
	[
		"HTMLImageElement",
		"prototype",
		"naturalHeight"
	],
	[
		"HTMLImageElement",
		"prototype",
		"name"
	],
	[
		"HTMLImageElement",
		"prototype",
		"lowsrc"
	],
	[
		"HTMLImageElement",
		"prototype",
		"longDesc"
	],
	[
		"HTMLImageElement",
		"prototype",
		"loading"
	],
	[
		"HTMLImageElement",
		"prototype",
		"isMap"
	],
	[
		"HTMLImageElement",
		"prototype",
		"hspace"
	],
	[
		"HTMLImageElement",
		"prototype",
		"height"
	],
	[
		"HTMLImageElement",
		"prototype",
		"fetchPriority"
	],
	[
		"HTMLImageElement",
		"prototype",
		"decoding"
	],
	[
		"HTMLImageElement",
		"prototype",
		"decode()"
	],
	[
		"HTMLImageElement",
		"prototype",
		"currentSrc"
	],
	[
		"HTMLImageElement",
		"prototype",
		"crossOrigin"
	],
	[
		"HTMLImageElement",
		"prototype",
		"complete"
	],
	[
		"HTMLImageElement",
		"prototype",
		"border"
	],
	[
		"HTMLImageElement",
		"prototype",
		"attributionSrc"
	],
	[
		"HTMLImageElement",
		"prototype",
		"alt"
	],
	[
		"HTMLImageElement",
		"prototype",
		"align"
	],
	[
		"HTMLImageElement",
		"prototype"
	],
	[
		"HTMLInputElement"
	],
	[
		"HTMLInputElement",
		"prototype",
		"willValidate"
	],
	[
		"HTMLInputElement",
		"prototype",
		"width"
	],
	[
		"HTMLInputElement",
		"prototype",
		"webkitdirectory"
	],
	[
		"HTMLInputElement",
		"prototype",
		"webkitEntries"
	],
	[
		"HTMLInputElement",
		"prototype",
		"valueAsNumber"
	],
	[
		"HTMLInputElement",
		"prototype",
		"valueAsDate"
	],
	[
		"HTMLInputElement",
		"prototype",
		"value"
	],
	[
		"HTMLInputElement",
		"prototype",
		"validity"
	],
	[
		"HTMLInputElement",
		"prototype",
		"validationMessage"
	],
	[
		"HTMLInputElement",
		"prototype",
		"useMap"
	],
	[
		"HTMLInputElement",
		"prototype",
		"type"
	],
	[
		"HTMLInputElement",
		"prototype",
		"stepUp()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"stepDown()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"step"
	],
	[
		"HTMLInputElement",
		"prototype",
		"src"
	],
	[
		"HTMLInputElement",
		"prototype",
		"size"
	],
	[
		"HTMLInputElement",
		"prototype",
		"showPicker()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"setSelectionRange()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"setRangeText()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"setCustomValidity()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"selectionStart"
	],
	[
		"HTMLInputElement",
		"prototype",
		"selectionEnd"
	],
	[
		"HTMLInputElement",
		"prototype",
		"selectionDirection"
	],
	[
		"HTMLInputElement",
		"prototype",
		"select()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"required"
	],
	[
		"HTMLInputElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"readOnly"
	],
	[
		"HTMLInputElement",
		"prototype",
		"popoverTargetElement"
	],
	[
		"HTMLInputElement",
		"prototype",
		"popoverTargetAction"
	],
	[
		"HTMLInputElement",
		"prototype",
		"placeholder"
	],
	[
		"HTMLInputElement",
		"prototype",
		"pattern"
	],
	[
		"HTMLInputElement",
		"prototype",
		"name"
	],
	[
		"HTMLInputElement",
		"prototype",
		"multiple"
	],
	[
		"HTMLInputElement",
		"prototype",
		"minLength"
	],
	[
		"HTMLInputElement",
		"prototype",
		"min"
	],
	[
		"HTMLInputElement",
		"prototype",
		"maxLength"
	],
	[
		"HTMLInputElement",
		"prototype",
		"max"
	],
	[
		"HTMLInputElement",
		"prototype",
		"list"
	],
	[
		"HTMLInputElement",
		"prototype",
		"labels"
	],
	[
		"HTMLInputElement",
		"prototype",
		"indeterminate"
	],
	[
		"HTMLInputElement",
		"prototype",
		"height"
	],
	[
		"HTMLInputElement",
		"prototype",
		"formTarget"
	],
	[
		"HTMLInputElement",
		"prototype",
		"formNoValidate"
	],
	[
		"HTMLInputElement",
		"prototype",
		"formMethod"
	],
	[
		"HTMLInputElement",
		"prototype",
		"formEnctype"
	],
	[
		"HTMLInputElement",
		"prototype",
		"formAction"
	],
	[
		"HTMLInputElement",
		"prototype",
		"form"
	],
	[
		"HTMLInputElement",
		"prototype",
		"files"
	],
	[
		"HTMLInputElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLInputElement",
		"prototype",
		"dirName"
	],
	[
		"HTMLInputElement",
		"prototype",
		"defaultValue"
	],
	[
		"HTMLInputElement",
		"prototype",
		"defaultChecked"
	],
	[
		"HTMLInputElement",
		"prototype",
		"checked"
	],
	[
		"HTMLInputElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLInputElement",
		"prototype",
		"capture"
	],
	[
		"HTMLInputElement",
		"prototype",
		"autocomplete"
	],
	[
		"HTMLInputElement",
		"prototype",
		"alt"
	],
	[
		"HTMLInputElement",
		"prototype",
		"align"
	],
	[
		"HTMLInputElement",
		"prototype",
		"accept"
	],
	[
		"HTMLInputElement",
		"prototype"
	],
	[
		"HTMLLabelElement"
	],
	[
		"HTMLLabelElement",
		"prototype",
		"htmlFor"
	],
	[
		"HTMLLabelElement",
		"prototype",
		"form"
	],
	[
		"HTMLLabelElement",
		"prototype",
		"control"
	],
	[
		"HTMLLabelElement",
		"prototype"
	],
	[
		"HTMLLegendElement"
	],
	[
		"HTMLLegendElement",
		"prototype",
		"form"
	],
	[
		"HTMLLegendElement",
		"prototype",
		"align"
	],
	[
		"HTMLLegendElement",
		"prototype"
	],
	[
		"HTMLLIElement"
	],
	[
		"HTMLLIElement",
		"prototype",
		"value"
	],
	[
		"HTMLLIElement",
		"prototype",
		"type"
	],
	[
		"HTMLLIElement",
		"prototype"
	],
	[
		"HTMLLinkElement"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"type"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"target"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"sizes"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"sheet"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"rev"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"relList"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"rel"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"media"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"integrity"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"imageSrcset"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"imageSizes"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"hreflang"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"href"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"fetchPriority"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"crossOrigin"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"charset"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"blocking"
	],
	[
		"HTMLLinkElement",
		"prototype",
		"as"
	],
	[
		"HTMLLinkElement",
		"prototype"
	],
	[
		"HTMLMapElement"
	],
	[
		"HTMLMapElement",
		"prototype",
		"name"
	],
	[
		"HTMLMapElement",
		"prototype",
		"areas"
	],
	[
		"HTMLMapElement",
		"prototype"
	],
	[
		"HTMLMarqueeElement"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"width"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"vspace"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"trueSpeed"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"stop()"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"start()"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"scrollDelay"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"scrollAmount"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"loop"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"hspace"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"height"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"direction"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"bgColor"
	],
	[
		"HTMLMarqueeElement",
		"prototype",
		"behavior"
	],
	[
		"HTMLMarqueeElement",
		"prototype"
	],
	[
		"HTMLMediaElement"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"volume"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"videoTracks"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"textTracks"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"srcObject"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"src"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"sinkId"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"setSinkId()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"setMediaKeys()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"seeking"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"seekable"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"remote"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"readyState"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"preservesPitch"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"preload"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"played"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"playbackRate"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"play()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"paused"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"pause()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"onwaitingforkey"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"onencrypted"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"networkState"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"muted"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"mediaKeys"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"loop"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"load()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"getStartDate()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"fastSeek()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"error"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"ended"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"duration"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"disableRemotePlayback"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"defaultPlaybackRate"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"defaultMuted"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"currentTime"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"currentSrc"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"crossOrigin"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"controls"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"captureStream()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"canPlayType()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"buffered"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"autoplay"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"audioTracks"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"addTextTrack()"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"NETWORK_NO_SOURCE"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"NETWORK_LOADING"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"NETWORK_IDLE"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"NETWORK_EMPTY"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"HAVE_NOTHING"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"HAVE_METADATA"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"HAVE_FUTURE_DATA"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"HAVE_ENOUGH_DATA"
	],
	[
		"HTMLMediaElement",
		"prototype",
		"HAVE_CURRENT_DATA"
	],
	[
		"HTMLMediaElement",
		"prototype"
	],
	[
		"HTMLMediaElement",
		"NETWORK_NO_SOURCE"
	],
	[
		"HTMLMediaElement",
		"NETWORK_LOADING"
	],
	[
		"HTMLMediaElement",
		"NETWORK_IDLE"
	],
	[
		"HTMLMediaElement",
		"NETWORK_EMPTY"
	],
	[
		"HTMLMediaElement",
		"HAVE_NOTHING"
	],
	[
		"HTMLMediaElement",
		"HAVE_METADATA"
	],
	[
		"HTMLMediaElement",
		"HAVE_FUTURE_DATA"
	],
	[
		"HTMLMediaElement",
		"HAVE_ENOUGH_DATA"
	],
	[
		"HTMLMediaElement",
		"HAVE_CURRENT_DATA"
	],
	[
		"HTMLMenuElement"
	],
	[
		"HTMLMenuElement",
		"prototype",
		"compact"
	],
	[
		"HTMLMenuElement",
		"prototype"
	],
	[
		"HTMLMetaElement"
	],
	[
		"HTMLMetaElement",
		"prototype",
		"scheme"
	],
	[
		"HTMLMetaElement",
		"prototype",
		"name"
	],
	[
		"HTMLMetaElement",
		"prototype",
		"media"
	],
	[
		"HTMLMetaElement",
		"prototype",
		"httpEquiv"
	],
	[
		"HTMLMetaElement",
		"prototype",
		"content"
	],
	[
		"HTMLMetaElement",
		"prototype"
	],
	[
		"HTMLMeterElement"
	],
	[
		"HTMLMeterElement",
		"prototype",
		"value"
	],
	[
		"HTMLMeterElement",
		"prototype",
		"optimum"
	],
	[
		"HTMLMeterElement",
		"prototype",
		"min"
	],
	[
		"HTMLMeterElement",
		"prototype",
		"max"
	],
	[
		"HTMLMeterElement",
		"prototype",
		"low"
	],
	[
		"HTMLMeterElement",
		"prototype",
		"labels"
	],
	[
		"HTMLMeterElement",
		"prototype",
		"high"
	],
	[
		"HTMLMeterElement",
		"prototype"
	],
	[
		"HTMLModelElement"
	],
	[
		"HTMLModelElement",
		"prototype"
	],
	[
		"HTMLModElement"
	],
	[
		"HTMLModElement",
		"prototype",
		"dateTime"
	],
	[
		"HTMLModElement",
		"prototype",
		"cite"
	],
	[
		"HTMLModElement",
		"prototype"
	],
	[
		"HTMLObjectElement"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"willValidate"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"width"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"vspace"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"validity"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"validationMessage"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"useMap"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"type"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"standby"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"setCustomValidity()"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"name"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"hspace"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"height"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"getSVGDocument()"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"form"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"declare"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"data"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"contentWindow"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"contentDocument"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"codeType"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"codeBase"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"code"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"border"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"archive"
	],
	[
		"HTMLObjectElement",
		"prototype",
		"align"
	],
	[
		"HTMLObjectElement",
		"prototype"
	],
	[
		"HTMLOListElement"
	],
	[
		"HTMLOListElement",
		"prototype",
		"type"
	],
	[
		"HTMLOListElement",
		"prototype",
		"start"
	],
	[
		"HTMLOListElement",
		"prototype",
		"reversed"
	],
	[
		"HTMLOListElement",
		"prototype",
		"compact"
	],
	[
		"HTMLOListElement",
		"prototype"
	],
	[
		"HTMLOptGroupElement"
	],
	[
		"HTMLOptGroupElement",
		"prototype",
		"label"
	],
	[
		"HTMLOptGroupElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLOptGroupElement",
		"prototype"
	],
	[
		"HTMLOptionElement"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"value"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"text"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"selected"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"label"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"index"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"form"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLOptionElement",
		"prototype",
		"defaultSelected"
	],
	[
		"HTMLOptionElement",
		"prototype"
	],
	[
		"HTMLOptionsCollection"
	],
	[
		"HTMLOptionsCollection",
		"prototype",
		"selectedIndex"
	],
	[
		"HTMLOptionsCollection",
		"prototype",
		"remove()"
	],
	[
		"HTMLOptionsCollection",
		"prototype",
		"length"
	],
	[
		"HTMLOptionsCollection",
		"prototype",
		"add()"
	],
	[
		"HTMLOptionsCollection",
		"prototype"
	],
	[
		"HTMLOutputElement"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"willValidate"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"value"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"validity"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"validationMessage"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"type"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"setCustomValidity()"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"name"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"labels"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"htmlFor"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"form"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"defaultValue"
	],
	[
		"HTMLOutputElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLOutputElement",
		"prototype"
	],
	[
		"HTMLParagraphElement"
	],
	[
		"HTMLParagraphElement",
		"prototype",
		"align"
	],
	[
		"HTMLParagraphElement",
		"prototype"
	],
	[
		"HTMLParamElement"
	],
	[
		"HTMLParamElement",
		"prototype",
		"valueType"
	],
	[
		"HTMLParamElement",
		"prototype",
		"value"
	],
	[
		"HTMLParamElement",
		"prototype",
		"type"
	],
	[
		"HTMLParamElement",
		"prototype",
		"name"
	],
	[
		"HTMLParamElement",
		"prototype"
	],
	[
		"HTMLPictureElement"
	],
	[
		"HTMLPictureElement",
		"prototype"
	],
	[
		"HTMLPortalElement"
	],
	[
		"HTMLPortalElement",
		"prototype",
		"src"
	],
	[
		"HTMLPortalElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"HTMLPortalElement",
		"prototype",
		"postMessage()"
	],
	[
		"HTMLPortalElement",
		"prototype",
		"onmessageerror"
	],
	[
		"HTMLPortalElement",
		"prototype",
		"onmessage"
	],
	[
		"HTMLPortalElement",
		"prototype",
		"activate()"
	],
	[
		"HTMLPortalElement",
		"prototype"
	],
	[
		"HTMLPreElement"
	],
	[
		"HTMLPreElement",
		"prototype",
		"width"
	],
	[
		"HTMLPreElement",
		"prototype"
	],
	[
		"HTMLProgressElement"
	],
	[
		"HTMLProgressElement",
		"prototype",
		"value"
	],
	[
		"HTMLProgressElement",
		"prototype",
		"position"
	],
	[
		"HTMLProgressElement",
		"prototype",
		"max"
	],
	[
		"HTMLProgressElement",
		"prototype",
		"labels"
	],
	[
		"HTMLProgressElement",
		"prototype"
	],
	[
		"HTMLQuoteElement"
	],
	[
		"HTMLQuoteElement",
		"prototype",
		"cite"
	],
	[
		"HTMLQuoteElement",
		"prototype"
	],
	[
		"HTMLScriptElement"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"type"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"text"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"src"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"noModule"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"integrity"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"htmlFor"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"fetchPriority"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"event"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"defer"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"crossOrigin"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"charset"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"blocking"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"attributionSrc"
	],
	[
		"HTMLScriptElement",
		"prototype",
		"async"
	],
	[
		"HTMLScriptElement",
		"prototype"
	],
	[
		"HTMLScriptElement",
		"supports()"
	],
	[
		"HTMLSelectElement"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"willValidate"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"value"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"validity"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"validationMessage"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"type"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"size"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"showPicker()"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"setCustomValidity()"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"selectedOptions"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"selectedIndex"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"required"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"remove()"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"options"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"namedItem()"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"name"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"multiple"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"length"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"labels"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"item()"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"form"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"autocomplete"
	],
	[
		"HTMLSelectElement",
		"prototype",
		"add()"
	],
	[
		"HTMLSelectElement",
		"prototype"
	],
	[
		"HTMLSlotElement"
	],
	[
		"HTMLSlotElement",
		"prototype",
		"name"
	],
	[
		"HTMLSlotElement",
		"prototype",
		"assignedNodes()"
	],
	[
		"HTMLSlotElement",
		"prototype",
		"assignedElements()"
	],
	[
		"HTMLSlotElement",
		"prototype",
		"assign()"
	],
	[
		"HTMLSlotElement",
		"prototype"
	],
	[
		"HTMLSourceElement"
	],
	[
		"HTMLSourceElement",
		"prototype",
		"width"
	],
	[
		"HTMLSourceElement",
		"prototype",
		"type"
	],
	[
		"HTMLSourceElement",
		"prototype",
		"srcset"
	],
	[
		"HTMLSourceElement",
		"prototype",
		"src"
	],
	[
		"HTMLSourceElement",
		"prototype",
		"sizes"
	],
	[
		"HTMLSourceElement",
		"prototype",
		"media"
	],
	[
		"HTMLSourceElement",
		"prototype",
		"height"
	],
	[
		"HTMLSourceElement",
		"prototype"
	],
	[
		"HTMLSpanElement"
	],
	[
		"HTMLSpanElement",
		"prototype"
	],
	[
		"HTMLStyleElement"
	],
	[
		"HTMLStyleElement",
		"prototype",
		"type"
	],
	[
		"HTMLStyleElement",
		"prototype",
		"sheet"
	],
	[
		"HTMLStyleElement",
		"prototype",
		"media"
	],
	[
		"HTMLStyleElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLStyleElement",
		"prototype",
		"blocking"
	],
	[
		"HTMLStyleElement",
		"prototype"
	],
	[
		"HTMLTableCaptionElement"
	],
	[
		"HTMLTableCaptionElement",
		"prototype",
		"align"
	],
	[
		"HTMLTableCaptionElement",
		"prototype"
	],
	[
		"HTMLTableCellElement"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"width"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"vAlign"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"scope"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"rowSpan"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"noWrap"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"height"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"headers"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"colSpan"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"chOff"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"ch"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"cellIndex"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"bgColor"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"axis"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"align"
	],
	[
		"HTMLTableCellElement",
		"prototype",
		"abbr"
	],
	[
		"HTMLTableCellElement",
		"prototype"
	],
	[
		"HTMLTableColElement"
	],
	[
		"HTMLTableColElement",
		"prototype",
		"width"
	],
	[
		"HTMLTableColElement",
		"prototype",
		"vAlign"
	],
	[
		"HTMLTableColElement",
		"prototype",
		"span"
	],
	[
		"HTMLTableColElement",
		"prototype",
		"chOff"
	],
	[
		"HTMLTableColElement",
		"prototype",
		"ch"
	],
	[
		"HTMLTableColElement",
		"prototype",
		"align"
	],
	[
		"HTMLTableColElement",
		"prototype"
	],
	[
		"HTMLTableElement"
	],
	[
		"HTMLTableElement",
		"prototype",
		"width"
	],
	[
		"HTMLTableElement",
		"prototype",
		"tHead"
	],
	[
		"HTMLTableElement",
		"prototype",
		"tFoot"
	],
	[
		"HTMLTableElement",
		"prototype",
		"tBodies"
	],
	[
		"HTMLTableElement",
		"prototype",
		"summary"
	],
	[
		"HTMLTableElement",
		"prototype",
		"rules"
	],
	[
		"HTMLTableElement",
		"prototype",
		"rows"
	],
	[
		"HTMLTableElement",
		"prototype",
		"insertRow()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"frame"
	],
	[
		"HTMLTableElement",
		"prototype",
		"deleteTHead()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"deleteTFoot()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"deleteRow()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"deleteCaption()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"createTHead()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"createTFoot()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"createTBody()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"createCaption()"
	],
	[
		"HTMLTableElement",
		"prototype",
		"cellSpacing"
	],
	[
		"HTMLTableElement",
		"prototype",
		"cellPadding"
	],
	[
		"HTMLTableElement",
		"prototype",
		"caption"
	],
	[
		"HTMLTableElement",
		"prototype",
		"border"
	],
	[
		"HTMLTableElement",
		"prototype",
		"bgColor"
	],
	[
		"HTMLTableElement",
		"prototype",
		"align"
	],
	[
		"HTMLTableElement",
		"prototype"
	],
	[
		"HTMLTableRowElement"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"vAlign"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"sectionRowIndex"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"rowIndex"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"insertCell()"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"deleteCell()"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"chOff"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"ch"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"cells"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"bgColor"
	],
	[
		"HTMLTableRowElement",
		"prototype",
		"align"
	],
	[
		"HTMLTableRowElement",
		"prototype"
	],
	[
		"HTMLTableSectionElement"
	],
	[
		"HTMLTableSectionElement",
		"prototype",
		"vAlign"
	],
	[
		"HTMLTableSectionElement",
		"prototype",
		"rows"
	],
	[
		"HTMLTableSectionElement",
		"prototype",
		"insertRow()"
	],
	[
		"HTMLTableSectionElement",
		"prototype",
		"deleteRow()"
	],
	[
		"HTMLTableSectionElement",
		"prototype",
		"chOff"
	],
	[
		"HTMLTableSectionElement",
		"prototype",
		"ch"
	],
	[
		"HTMLTableSectionElement",
		"prototype",
		"align"
	],
	[
		"HTMLTableSectionElement",
		"prototype"
	],
	[
		"HTMLTemplateElement"
	],
	[
		"HTMLTemplateElement",
		"prototype",
		"shadowRootSerializable"
	],
	[
		"HTMLTemplateElement",
		"prototype",
		"shadowRootMode"
	],
	[
		"HTMLTemplateElement",
		"prototype",
		"shadowRootDelegatesFocus"
	],
	[
		"HTMLTemplateElement",
		"prototype",
		"shadowRootClonable"
	],
	[
		"HTMLTemplateElement",
		"prototype",
		"content"
	],
	[
		"HTMLTemplateElement",
		"prototype"
	],
	[
		"HTMLTextAreaElement"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"wrap"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"willValidate"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"value"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"validity"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"validationMessage"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"type"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"textLength"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"setSelectionRange()"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"setRangeText()"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"setCustomValidity()"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"selectionStart"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"selectionEnd"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"selectionDirection"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"select()"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"rows"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"required"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"reportValidity()"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"readOnly"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"placeholder"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"name"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"minLength"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"maxLength"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"labels"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"form"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"disabled"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"dirName"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"defaultValue"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"cols"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"checkValidity()"
	],
	[
		"HTMLTextAreaElement",
		"prototype",
		"autocomplete"
	],
	[
		"HTMLTextAreaElement",
		"prototype"
	],
	[
		"HTMLTimeElement"
	],
	[
		"HTMLTimeElement",
		"prototype",
		"dateTime"
	],
	[
		"HTMLTimeElement",
		"prototype"
	],
	[
		"HTMLTitleElement"
	],
	[
		"HTMLTitleElement",
		"prototype",
		"text"
	],
	[
		"HTMLTitleElement",
		"prototype"
	],
	[
		"HTMLTrackElement"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"track"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"srclang"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"src"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"readyState"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"label"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"kind"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"default"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"NONE"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"LOADING"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"LOADED"
	],
	[
		"HTMLTrackElement",
		"prototype",
		"ERROR"
	],
	[
		"HTMLTrackElement",
		"prototype"
	],
	[
		"HTMLTrackElement",
		"NONE"
	],
	[
		"HTMLTrackElement",
		"LOADING"
	],
	[
		"HTMLTrackElement",
		"LOADED"
	],
	[
		"HTMLTrackElement",
		"ERROR"
	],
	[
		"HTMLUListElement"
	],
	[
		"HTMLUListElement",
		"prototype",
		"type"
	],
	[
		"HTMLUListElement",
		"prototype",
		"compact"
	],
	[
		"HTMLUListElement",
		"prototype"
	],
	[
		"HTMLUnknownElement"
	],
	[
		"HTMLUnknownElement",
		"prototype"
	],
	[
		"HTMLVideoElement"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"width"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"videoWidth"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"videoHeight"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"requestVideoFrameCallback()"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"requestPictureInPicture()"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"poster"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"playsInline"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"onleavepictureinpicture"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"onenterpictureinpicture"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"height"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"getVideoPlaybackQuality()"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"disablePictureInPicture"
	],
	[
		"HTMLVideoElement",
		"prototype",
		"cancelVideoFrameCallback()"
	],
	[
		"HTMLVideoElement",
		"prototype"
	],
	[
		"IDBCursor"
	],
	[
		"IDBCursor",
		"prototype",
		"update()"
	],
	[
		"IDBCursor",
		"prototype",
		"source"
	],
	[
		"IDBCursor",
		"prototype",
		"request"
	],
	[
		"IDBCursor",
		"prototype",
		"primaryKey"
	],
	[
		"IDBCursor",
		"prototype",
		"key"
	],
	[
		"IDBCursor",
		"prototype",
		"direction"
	],
	[
		"IDBCursor",
		"prototype",
		"delete()"
	],
	[
		"IDBCursor",
		"prototype",
		"continuePrimaryKey()"
	],
	[
		"IDBCursor",
		"prototype",
		"continue()"
	],
	[
		"IDBCursor",
		"prototype",
		"advance()"
	],
	[
		"IDBCursor",
		"prototype"
	],
	[
		"IDBCursorWithValue"
	],
	[
		"IDBCursorWithValue",
		"prototype",
		"value"
	],
	[
		"IDBCursorWithValue",
		"prototype"
	],
	[
		"IDBDatabase"
	],
	[
		"IDBDatabase",
		"prototype",
		"version"
	],
	[
		"IDBDatabase",
		"prototype",
		"transaction()"
	],
	[
		"IDBDatabase",
		"prototype",
		"onversionchange"
	],
	[
		"IDBDatabase",
		"prototype",
		"onerror"
	],
	[
		"IDBDatabase",
		"prototype",
		"onclose"
	],
	[
		"IDBDatabase",
		"prototype",
		"onabort"
	],
	[
		"IDBDatabase",
		"prototype",
		"objectStoreNames"
	],
	[
		"IDBDatabase",
		"prototype",
		"name"
	],
	[
		"IDBDatabase",
		"prototype",
		"deleteObjectStore()"
	],
	[
		"IDBDatabase",
		"prototype",
		"createObjectStore()"
	],
	[
		"IDBDatabase",
		"prototype",
		"close()"
	],
	[
		"IDBDatabase",
		"prototype"
	],
	[
		"IDBFactory"
	],
	[
		"IDBFactory",
		"prototype",
		"open()"
	],
	[
		"IDBFactory",
		"prototype",
		"deleteDatabase()"
	],
	[
		"IDBFactory",
		"prototype",
		"databases()"
	],
	[
		"IDBFactory",
		"prototype",
		"cmp()"
	],
	[
		"IDBFactory",
		"prototype"
	],
	[
		"IDBIndex"
	],
	[
		"IDBIndex",
		"prototype",
		"unique"
	],
	[
		"IDBIndex",
		"prototype",
		"openKeyCursor()"
	],
	[
		"IDBIndex",
		"prototype",
		"openCursor()"
	],
	[
		"IDBIndex",
		"prototype",
		"objectStore"
	],
	[
		"IDBIndex",
		"prototype",
		"name"
	],
	[
		"IDBIndex",
		"prototype",
		"multiEntry"
	],
	[
		"IDBIndex",
		"prototype",
		"keyPath"
	],
	[
		"IDBIndex",
		"prototype",
		"getKey()"
	],
	[
		"IDBIndex",
		"prototype",
		"getAllKeys()"
	],
	[
		"IDBIndex",
		"prototype",
		"getAll()"
	],
	[
		"IDBIndex",
		"prototype",
		"get()"
	],
	[
		"IDBIndex",
		"prototype",
		"count()"
	],
	[
		"IDBIndex",
		"prototype"
	],
	[
		"IDBKeyRange"
	],
	[
		"IDBKeyRange",
		"prototype",
		"upperOpen"
	],
	[
		"IDBKeyRange",
		"prototype",
		"upper"
	],
	[
		"IDBKeyRange",
		"prototype",
		"lowerOpen"
	],
	[
		"IDBKeyRange",
		"prototype",
		"lower"
	],
	[
		"IDBKeyRange",
		"prototype",
		"includes()"
	],
	[
		"IDBKeyRange",
		"prototype"
	],
	[
		"IDBKeyRange",
		"upperBound()"
	],
	[
		"IDBKeyRange",
		"only()"
	],
	[
		"IDBKeyRange",
		"lowerBound()"
	],
	[
		"IDBKeyRange",
		"bound()"
	],
	[
		"IDBObjectStore"
	],
	[
		"IDBObjectStore",
		"prototype",
		"transaction"
	],
	[
		"IDBObjectStore",
		"prototype",
		"put()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"openKeyCursor()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"openCursor()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"name"
	],
	[
		"IDBObjectStore",
		"prototype",
		"keyPath"
	],
	[
		"IDBObjectStore",
		"prototype",
		"indexNames"
	],
	[
		"IDBObjectStore",
		"prototype",
		"index()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"getKey()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"getAllKeys()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"getAll()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"get()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"deleteIndex()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"delete()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"createIndex()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"count()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"clear()"
	],
	[
		"IDBObjectStore",
		"prototype",
		"autoIncrement"
	],
	[
		"IDBObjectStore",
		"prototype",
		"add()"
	],
	[
		"IDBObjectStore",
		"prototype"
	],
	[
		"IDBOpenDBRequest"
	],
	[
		"IDBOpenDBRequest",
		"prototype",
		"onupgradeneeded"
	],
	[
		"IDBOpenDBRequest",
		"prototype",
		"onblocked"
	],
	[
		"IDBOpenDBRequest",
		"prototype"
	],
	[
		"IDBRequest"
	],
	[
		"IDBRequest",
		"prototype",
		"transaction"
	],
	[
		"IDBRequest",
		"prototype",
		"source"
	],
	[
		"IDBRequest",
		"prototype",
		"result"
	],
	[
		"IDBRequest",
		"prototype",
		"readyState"
	],
	[
		"IDBRequest",
		"prototype",
		"onsuccess"
	],
	[
		"IDBRequest",
		"prototype",
		"onerror"
	],
	[
		"IDBRequest",
		"prototype",
		"error"
	],
	[
		"IDBRequest",
		"prototype"
	],
	[
		"IDBTransaction"
	],
	[
		"IDBTransaction",
		"prototype",
		"onerror"
	],
	[
		"IDBTransaction",
		"prototype",
		"oncomplete"
	],
	[
		"IDBTransaction",
		"prototype",
		"onabort"
	],
	[
		"IDBTransaction",
		"prototype",
		"objectStoreNames"
	],
	[
		"IDBTransaction",
		"prototype",
		"objectStore()"
	],
	[
		"IDBTransaction",
		"prototype",
		"mode"
	],
	[
		"IDBTransaction",
		"prototype",
		"error"
	],
	[
		"IDBTransaction",
		"prototype",
		"durability"
	],
	[
		"IDBTransaction",
		"prototype",
		"db"
	],
	[
		"IDBTransaction",
		"prototype",
		"commit()"
	],
	[
		"IDBTransaction",
		"prototype",
		"abort()"
	],
	[
		"IDBTransaction",
		"prototype"
	],
	[
		"IDBVersionChangeEvent"
	],
	[
		"IDBVersionChangeEvent",
		"prototype",
		"oldVersion"
	],
	[
		"IDBVersionChangeEvent",
		"prototype",
		"newVersion"
	],
	[
		"IDBVersionChangeEvent",
		"prototype"
	],
	[
		"IdentityCredential"
	],
	[
		"IdentityCredential",
		"prototype",
		"token"
	],
	[
		"IdentityCredential",
		"prototype",
		"isAutoSelected"
	],
	[
		"IdentityCredential",
		"prototype"
	],
	[
		"IdentityCredential",
		"disconnect()"
	],
	[
		"IdentityProvider"
	],
	[
		"IdentityProvider",
		"prototype"
	],
	[
		"IdentityProvider",
		"getUserInfo()"
	],
	[
		"IdentityProvider",
		"close()"
	],
	[
		"IdleDeadline"
	],
	[
		"IdleDeadline",
		"prototype",
		"timeRemaining()"
	],
	[
		"IdleDeadline",
		"prototype",
		"didTimeout"
	],
	[
		"IdleDeadline",
		"prototype"
	],
	[
		"IdleDetector"
	],
	[
		"IdleDetector",
		"prototype",
		"userState"
	],
	[
		"IdleDetector",
		"prototype",
		"start()"
	],
	[
		"IdleDetector",
		"prototype",
		"screenState"
	],
	[
		"IdleDetector",
		"prototype",
		"onchange"
	],
	[
		"IdleDetector",
		"prototype"
	],
	[
		"IdleDetector",
		"requestPermission()"
	],
	[
		"IIRFilterNode"
	],
	[
		"IIRFilterNode",
		"prototype",
		"getFrequencyResponse()"
	],
	[
		"IIRFilterNode",
		"prototype"
	],
	[
		"ImageBitmap"
	],
	[
		"ImageBitmap",
		"prototype",
		"width"
	],
	[
		"ImageBitmap",
		"prototype",
		"height"
	],
	[
		"ImageBitmap",
		"prototype",
		"close()"
	],
	[
		"ImageBitmap",
		"prototype"
	],
	[
		"ImageBitmapRenderingContext"
	],
	[
		"ImageBitmapRenderingContext",
		"prototype",
		"transferFromImageBitmap()"
	],
	[
		"ImageBitmapRenderingContext",
		"prototype",
		"canvas"
	],
	[
		"ImageBitmapRenderingContext",
		"prototype"
	],
	[
		"ImageCapture"
	],
	[
		"ImageCapture",
		"prototype",
		"track"
	],
	[
		"ImageCapture",
		"prototype",
		"takePhoto()"
	],
	[
		"ImageCapture",
		"prototype",
		"grabFrame()"
	],
	[
		"ImageCapture",
		"prototype",
		"getPhotoSettings()"
	],
	[
		"ImageCapture",
		"prototype",
		"getPhotoCapabilities()"
	],
	[
		"ImageCapture",
		"prototype"
	],
	[
		"ImageData"
	],
	[
		"ImageData",
		"prototype",
		"width"
	],
	[
		"ImageData",
		"prototype",
		"height"
	],
	[
		"ImageData",
		"prototype",
		"data"
	],
	[
		"ImageData",
		"prototype",
		"colorSpace"
	],
	[
		"ImageData",
		"prototype"
	],
	[
		"ImageDecoder"
	],
	[
		"ImageDecoder",
		"prototype",
		"type"
	],
	[
		"ImageDecoder",
		"prototype",
		"tracks"
	],
	[
		"ImageDecoder",
		"prototype",
		"reset()"
	],
	[
		"ImageDecoder",
		"prototype",
		"decode()"
	],
	[
		"ImageDecoder",
		"prototype",
		"completed"
	],
	[
		"ImageDecoder",
		"prototype",
		"complete"
	],
	[
		"ImageDecoder",
		"prototype",
		"close()"
	],
	[
		"ImageDecoder",
		"prototype"
	],
	[
		"ImageDecoder",
		"isTypeSupported()"
	],
	[
		"ImageTrack"
	],
	[
		"ImageTrack",
		"prototype",
		"selected"
	],
	[
		"ImageTrack",
		"prototype",
		"repetitionCount"
	],
	[
		"ImageTrack",
		"prototype",
		"frameCount"
	],
	[
		"ImageTrack",
		"prototype",
		"animated"
	],
	[
		"ImageTrack",
		"prototype"
	],
	[
		"ImageTrackList"
	],
	[
		"ImageTrackList",
		"prototype",
		"selectedTrack"
	],
	[
		"ImageTrackList",
		"prototype",
		"selectedIndex"
	],
	[
		"ImageTrackList",
		"prototype",
		"ready"
	],
	[
		"ImageTrackList",
		"prototype",
		"length"
	],
	[
		"ImageTrackList",
		"prototype"
	],
	[
		"Ink"
	],
	[
		"Ink",
		"prototype",
		"requestPresenter()"
	],
	[
		"Ink",
		"prototype"
	],
	[
		"InkPresenter"
	],
	[
		"InkPresenter",
		"prototype",
		"updateInkTrailStartPoint()"
	],
	[
		"InkPresenter",
		"prototype",
		"presentationArea"
	],
	[
		"InkPresenter",
		"prototype"
	],
	[
		"InputDeviceCapabilities"
	],
	[
		"InputDeviceCapabilities",
		"prototype",
		"pointerMovementScrolls"
	],
	[
		"InputDeviceCapabilities",
		"prototype",
		"firesTouchEvents"
	],
	[
		"InputDeviceCapabilities",
		"prototype"
	],
	[
		"InputDeviceInfo"
	],
	[
		"InputDeviceInfo",
		"prototype",
		"getCapabilities()"
	],
	[
		"InputDeviceInfo",
		"prototype"
	],
	[
		"InputEvent"
	],
	[
		"InputEvent",
		"prototype",
		"isComposing"
	],
	[
		"InputEvent",
		"prototype",
		"inputType"
	],
	[
		"InputEvent",
		"prototype",
		"getTargetRanges()"
	],
	[
		"InputEvent",
		"prototype",
		"dataTransfer"
	],
	[
		"InputEvent",
		"prototype",
		"data"
	],
	[
		"InputEvent",
		"prototype"
	],
	[
		"InstallEvent"
	],
	[
		"InstallEvent",
		"prototype",
		"addRoutes()"
	],
	[
		"InstallEvent",
		"prototype"
	],
	[
		"Instance"
	],
	[
		"Instance",
		"prototype",
		"exports"
	],
	[
		"Instance",
		"prototype"
	],
	[
		"InterestGroupBiddingAndScoringScriptRunnerGlobalScope"
	],
	[
		"InterestGroupBiddingAndScoringScriptRunnerGlobalScope",
		"prototype",
		"realTimeReporting"
	],
	[
		"InterestGroupBiddingAndScoringScriptRunnerGlobalScope",
		"prototype",
		"forDebuggingOnly"
	],
	[
		"InterestGroupBiddingAndScoringScriptRunnerGlobalScope",
		"prototype"
	],
	[
		"InterestGroupBiddingScriptRunnerGlobalScope"
	],
	[
		"InterestGroupBiddingScriptRunnerGlobalScope",
		"prototype",
		"setPrioritySignalsOverride()"
	],
	[
		"InterestGroupBiddingScriptRunnerGlobalScope",
		"prototype",
		"setPriority()"
	],
	[
		"InterestGroupBiddingScriptRunnerGlobalScope",
		"prototype",
		"setBid()"
	],
	[
		"InterestGroupBiddingScriptRunnerGlobalScope",
		"prototype"
	],
	[
		"InterestGroupReportingScriptRunnerGlobalScope"
	],
	[
		"InterestGroupReportingScriptRunnerGlobalScope",
		"prototype",
		"sendReportTo()"
	],
	[
		"InterestGroupReportingScriptRunnerGlobalScope",
		"prototype",
		"registerAdMacro()"
	],
	[
		"InterestGroupReportingScriptRunnerGlobalScope",
		"prototype",
		"registerAdBeacon()"
	],
	[
		"InterestGroupReportingScriptRunnerGlobalScope",
		"prototype"
	],
	[
		"InterestGroupScoringScriptRunnerGlobalScope"
	],
	[
		"InterestGroupScoringScriptRunnerGlobalScope",
		"prototype"
	],
	[
		"InterestGroupScriptRunnerGlobalScope"
	],
	[
		"InterestGroupScriptRunnerGlobalScope",
		"prototype",
		"privateAggregation"
	],
	[
		"InterestGroupScriptRunnerGlobalScope",
		"prototype"
	],
	[
		"IntersectionObserver"
	],
	[
		"IntersectionObserver",
		"prototype",
		"unobserve()"
	],
	[
		"IntersectionObserver",
		"prototype",
		"trackVisibility"
	],
	[
		"IntersectionObserver",
		"prototype",
		"thresholds"
	],
	[
		"IntersectionObserver",
		"prototype",
		"takeRecords()"
	],
	[
		"IntersectionObserver",
		"prototype",
		"scrollMargin"
	],
	[
		"IntersectionObserver",
		"prototype",
		"rootMargin"
	],
	[
		"IntersectionObserver",
		"prototype",
		"root"
	],
	[
		"IntersectionObserver",
		"prototype",
		"observe()"
	],
	[
		"IntersectionObserver",
		"prototype",
		"disconnect()"
	],
	[
		"IntersectionObserver",
		"prototype",
		"delay"
	],
	[
		"IntersectionObserver",
		"prototype"
	],
	[
		"IntersectionObserverEntry"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"time"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"target"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"rootBounds"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"isVisible"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"isIntersecting"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"intersectionRect"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"intersectionRatio"
	],
	[
		"IntersectionObserverEntry",
		"prototype",
		"boundingClientRect"
	],
	[
		"IntersectionObserverEntry",
		"prototype"
	],
	[
		"InterventionReportBody"
	],
	[
		"InterventionReportBody",
		"prototype",
		"toJSON()"
	],
	[
		"InterventionReportBody",
		"prototype",
		"sourceFile"
	],
	[
		"InterventionReportBody",
		"prototype",
		"message"
	],
	[
		"InterventionReportBody",
		"prototype",
		"lineNumber"
	],
	[
		"InterventionReportBody",
		"prototype",
		"id"
	],
	[
		"InterventionReportBody",
		"prototype",
		"columnNumber"
	],
	[
		"InterventionReportBody",
		"prototype"
	],
	[
		"IntrinsicSizes"
	],
	[
		"IntrinsicSizes",
		"prototype",
		"minContentSize"
	],
	[
		"IntrinsicSizes",
		"prototype",
		"maxContentSize"
	],
	[
		"IntrinsicSizes",
		"prototype"
	],
	[
		"Keyboard"
	],
	[
		"Keyboard",
		"prototype",
		"unlock()"
	],
	[
		"Keyboard",
		"prototype",
		"onlayoutchange"
	],
	[
		"Keyboard",
		"prototype",
		"lock()"
	],
	[
		"Keyboard",
		"prototype",
		"getLayoutMap()"
	],
	[
		"Keyboard",
		"prototype"
	],
	[
		"KeyboardEvent"
	],
	[
		"KeyboardEvent",
		"prototype",
		"shiftKey"
	],
	[
		"KeyboardEvent",
		"prototype",
		"repeat"
	],
	[
		"KeyboardEvent",
		"prototype",
		"metaKey"
	],
	[
		"KeyboardEvent",
		"prototype",
		"location"
	],
	[
		"KeyboardEvent",
		"prototype",
		"keyCode"
	],
	[
		"KeyboardEvent",
		"prototype",
		"key"
	],
	[
		"KeyboardEvent",
		"prototype",
		"isComposing"
	],
	[
		"KeyboardEvent",
		"prototype",
		"initKeyboardEvent()"
	],
	[
		"KeyboardEvent",
		"prototype",
		"getModifierState()"
	],
	[
		"KeyboardEvent",
		"prototype",
		"ctrlKey"
	],
	[
		"KeyboardEvent",
		"prototype",
		"code"
	],
	[
		"KeyboardEvent",
		"prototype",
		"charCode"
	],
	[
		"KeyboardEvent",
		"prototype",
		"altKey"
	],
	[
		"KeyboardEvent",
		"prototype",
		"DOM_KEY_LOCATION_STANDARD"
	],
	[
		"KeyboardEvent",
		"prototype",
		"DOM_KEY_LOCATION_RIGHT"
	],
	[
		"KeyboardEvent",
		"prototype",
		"DOM_KEY_LOCATION_NUMPAD"
	],
	[
		"KeyboardEvent",
		"prototype",
		"DOM_KEY_LOCATION_LEFT"
	],
	[
		"KeyboardEvent",
		"prototype"
	],
	[
		"KeyboardEvent",
		"DOM_KEY_LOCATION_STANDARD"
	],
	[
		"KeyboardEvent",
		"DOM_KEY_LOCATION_RIGHT"
	],
	[
		"KeyboardEvent",
		"DOM_KEY_LOCATION_NUMPAD"
	],
	[
		"KeyboardEvent",
		"DOM_KEY_LOCATION_LEFT"
	],
	[
		"KeyboardLayoutMap"
	],
	[
		"KeyboardLayoutMap",
		"prototype"
	],
	[
		"KeyframeEffect"
	],
	[
		"KeyframeEffect",
		"prototype",
		"target"
	],
	[
		"KeyframeEffect",
		"prototype",
		"setKeyframes()"
	],
	[
		"KeyframeEffect",
		"prototype",
		"pseudoElement"
	],
	[
		"KeyframeEffect",
		"prototype",
		"iterationComposite"
	],
	[
		"KeyframeEffect",
		"prototype",
		"getKeyframes()"
	],
	[
		"KeyframeEffect",
		"prototype",
		"composite"
	],
	[
		"KeyframeEffect",
		"prototype"
	],
	[
		"KeyFrameRequestEvent"
	],
	[
		"KeyFrameRequestEvent",
		"prototype",
		"rid"
	],
	[
		"KeyFrameRequestEvent",
		"prototype"
	],
	[
		"KHR_parallel_shader_compile"
	],
	[
		"KHR_parallel_shader_compile",
		"prototype",
		"COMPLETION_STATUS_KHR"
	],
	[
		"KHR_parallel_shader_compile",
		"prototype"
	],
	[
		"KHR_parallel_shader_compile",
		"COMPLETION_STATUS_KHR"
	],
	[
		"Label"
	],
	[
		"Label",
		"prototype",
		"subsumes()"
	],
	[
		"Label",
		"prototype",
		"or()"
	],
	[
		"Label",
		"prototype",
		"equals()"
	],
	[
		"Label",
		"prototype",
		"and()"
	],
	[
		"Label",
		"prototype"
	],
	[
		"LabeledObject"
	],
	[
		"LabeledObject",
		"prototype",
		"protectedObject"
	],
	[
		"LabeledObject",
		"prototype",
		"integrity"
	],
	[
		"LabeledObject",
		"prototype",
		"confidentiality"
	],
	[
		"LabeledObject",
		"prototype",
		"clone()"
	],
	[
		"LabeledObject",
		"prototype"
	],
	[
		"LargestContentfulPaint"
	],
	[
		"LargestContentfulPaint",
		"prototype",
		"url"
	],
	[
		"LargestContentfulPaint",
		"prototype",
		"toJSON()"
	],
	[
		"LargestContentfulPaint",
		"prototype",
		"size"
	],
	[
		"LargestContentfulPaint",
		"prototype",
		"renderTime"
	],
	[
		"LargestContentfulPaint",
		"prototype",
		"loadTime"
	],
	[
		"LargestContentfulPaint",
		"prototype",
		"id"
	],
	[
		"LargestContentfulPaint",
		"prototype",
		"element"
	],
	[
		"LargestContentfulPaint",
		"prototype"
	],
	[
		"LaunchParams"
	],
	[
		"LaunchParams",
		"prototype",
		"targetURL"
	],
	[
		"LaunchParams",
		"prototype",
		"files"
	],
	[
		"LaunchParams",
		"prototype"
	],
	[
		"LaunchQueue"
	],
	[
		"LaunchQueue",
		"prototype",
		"setConsumer()"
	],
	[
		"LaunchQueue",
		"prototype"
	],
	[
		"LayoutChild"
	],
	[
		"LayoutChild",
		"prototype",
		"styleMap"
	],
	[
		"LayoutChild",
		"prototype",
		"layoutNextFragment()"
	],
	[
		"LayoutChild",
		"prototype",
		"intrinsicSizes()"
	],
	[
		"LayoutChild",
		"prototype"
	],
	[
		"LayoutConstraints"
	],
	[
		"LayoutConstraints",
		"prototype",
		"percentageInlineSize"
	],
	[
		"LayoutConstraints",
		"prototype",
		"percentageBlockSize"
	],
	[
		"LayoutConstraints",
		"prototype",
		"fixedInlineSize"
	],
	[
		"LayoutConstraints",
		"prototype",
		"fixedBlockSize"
	],
	[
		"LayoutConstraints",
		"prototype",
		"data"
	],
	[
		"LayoutConstraints",
		"prototype",
		"blockFragmentationType"
	],
	[
		"LayoutConstraints",
		"prototype",
		"blockFragmentationOffset"
	],
	[
		"LayoutConstraints",
		"prototype",
		"availableInlineSize"
	],
	[
		"LayoutConstraints",
		"prototype",
		"availableBlockSize"
	],
	[
		"LayoutConstraints",
		"prototype"
	],
	[
		"LayoutEdges"
	],
	[
		"LayoutEdges",
		"prototype",
		"inlineStart"
	],
	[
		"LayoutEdges",
		"prototype",
		"inlineEnd"
	],
	[
		"LayoutEdges",
		"prototype",
		"inline"
	],
	[
		"LayoutEdges",
		"prototype",
		"blockStart"
	],
	[
		"LayoutEdges",
		"prototype",
		"blockEnd"
	],
	[
		"LayoutEdges",
		"prototype",
		"block"
	],
	[
		"LayoutEdges",
		"prototype"
	],
	[
		"LayoutFragment"
	],
	[
		"LayoutFragment",
		"prototype",
		"inlineSize"
	],
	[
		"LayoutFragment",
		"prototype",
		"inlineOffset"
	],
	[
		"LayoutFragment",
		"prototype",
		"data"
	],
	[
		"LayoutFragment",
		"prototype",
		"breakToken"
	],
	[
		"LayoutFragment",
		"prototype",
		"blockSize"
	],
	[
		"LayoutFragment",
		"prototype",
		"blockOffset"
	],
	[
		"LayoutFragment",
		"prototype"
	],
	[
		"LayoutShift"
	],
	[
		"LayoutShift",
		"prototype",
		"value"
	],
	[
		"LayoutShift",
		"prototype",
		"toJSON()"
	],
	[
		"LayoutShift",
		"prototype",
		"sources"
	],
	[
		"LayoutShift",
		"prototype",
		"lastInputTime"
	],
	[
		"LayoutShift",
		"prototype",
		"hadRecentInput"
	],
	[
		"LayoutShift",
		"prototype"
	],
	[
		"LayoutShiftAttribution"
	],
	[
		"LayoutShiftAttribution",
		"prototype",
		"previousRect"
	],
	[
		"LayoutShiftAttribution",
		"prototype",
		"node"
	],
	[
		"LayoutShiftAttribution",
		"prototype",
		"currentRect"
	],
	[
		"LayoutShiftAttribution",
		"prototype"
	],
	[
		"LayoutWorkletGlobalScope"
	],
	[
		"LayoutWorkletGlobalScope",
		"prototype",
		"registerLayout()"
	],
	[
		"LayoutWorkletGlobalScope",
		"prototype"
	],
	[
		"LinearAccelerationSensor"
	],
	[
		"LinearAccelerationSensor",
		"prototype"
	],
	[
		"Location"
	],
	[
		"Location",
		"prototype",
		"search"
	],
	[
		"Location",
		"prototype",
		"replace()"
	],
	[
		"Location",
		"prototype",
		"reload()"
	],
	[
		"Location",
		"prototype",
		"protocol"
	],
	[
		"Location",
		"prototype",
		"port"
	],
	[
		"Location",
		"prototype",
		"pathname"
	],
	[
		"Location",
		"prototype",
		"origin"
	],
	[
		"Location",
		"prototype",
		"href"
	],
	[
		"Location",
		"prototype",
		"hostname"
	],
	[
		"Location",
		"prototype",
		"host"
	],
	[
		"Location",
		"prototype",
		"hash"
	],
	[
		"Location",
		"prototype",
		"assign()"
	],
	[
		"Location",
		"prototype",
		"ancestorOrigins"
	],
	[
		"Location",
		"prototype"
	],
	[
		"Lock"
	],
	[
		"Lock",
		"prototype",
		"name"
	],
	[
		"Lock",
		"prototype",
		"mode"
	],
	[
		"Lock",
		"prototype"
	],
	[
		"LockManager"
	],
	[
		"LockManager",
		"prototype",
		"request()"
	],
	[
		"LockManager",
		"prototype",
		"query()"
	],
	[
		"LockManager",
		"prototype"
	],
	[
		"Magnetometer"
	],
	[
		"Magnetometer",
		"prototype",
		"z"
	],
	[
		"Magnetometer",
		"prototype",
		"y"
	],
	[
		"Magnetometer",
		"prototype",
		"x"
	],
	[
		"Magnetometer",
		"prototype"
	],
	[
		"ManagedMediaSource"
	],
	[
		"ManagedMediaSource",
		"prototype",
		"streaming"
	],
	[
		"ManagedMediaSource",
		"prototype",
		"onstartstreaming"
	],
	[
		"ManagedMediaSource",
		"prototype",
		"onendstreaming"
	],
	[
		"ManagedMediaSource",
		"prototype"
	],
	[
		"ManagedSourceBuffer"
	],
	[
		"ManagedSourceBuffer",
		"prototype",
		"onbufferedchange"
	],
	[
		"ManagedSourceBuffer",
		"prototype"
	],
	[
		"MathMLElement"
	],
	[
		"MathMLElement",
		"prototype",
		"tabIndex"
	],
	[
		"MathMLElement",
		"prototype",
		"style"
	],
	[
		"MathMLElement",
		"prototype",
		"onwheel"
	],
	[
		"MathMLElement",
		"prototype",
		"onwebkittransitionend"
	],
	[
		"MathMLElement",
		"prototype",
		"onwebkitanimationstart"
	],
	[
		"MathMLElement",
		"prototype",
		"onwebkitanimationiteration"
	],
	[
		"MathMLElement",
		"prototype",
		"onwebkitanimationend"
	],
	[
		"MathMLElement",
		"prototype",
		"onwaiting"
	],
	[
		"MathMLElement",
		"prototype",
		"onvolumechange"
	],
	[
		"MathMLElement",
		"prototype",
		"ontransitionstart"
	],
	[
		"MathMLElement",
		"prototype",
		"ontransitionrun"
	],
	[
		"MathMLElement",
		"prototype",
		"ontransitionend"
	],
	[
		"MathMLElement",
		"prototype",
		"ontransitioncancel"
	],
	[
		"MathMLElement",
		"prototype",
		"ontouchstart"
	],
	[
		"MathMLElement",
		"prototype",
		"ontouchmove"
	],
	[
		"MathMLElement",
		"prototype",
		"ontouchend"
	],
	[
		"MathMLElement",
		"prototype",
		"ontouchcancel"
	],
	[
		"MathMLElement",
		"prototype",
		"ontoggle"
	],
	[
		"MathMLElement",
		"prototype",
		"ontimeupdate"
	],
	[
		"MathMLElement",
		"prototype",
		"onsuspend"
	],
	[
		"MathMLElement",
		"prototype",
		"onsubmit"
	],
	[
		"MathMLElement",
		"prototype",
		"onstalled"
	],
	[
		"MathMLElement",
		"prototype",
		"onsnapchanging"
	],
	[
		"MathMLElement",
		"prototype",
		"onsnapchanged"
	],
	[
		"MathMLElement",
		"prototype",
		"onslotchange"
	],
	[
		"MathMLElement",
		"prototype",
		"onselectstart"
	],
	[
		"MathMLElement",
		"prototype",
		"onselectionchange"
	],
	[
		"MathMLElement",
		"prototype",
		"onselect"
	],
	[
		"MathMLElement",
		"prototype",
		"onseeking"
	],
	[
		"MathMLElement",
		"prototype",
		"onseeked"
	],
	[
		"MathMLElement",
		"prototype",
		"onsecuritypolicyviolation"
	],
	[
		"MathMLElement",
		"prototype",
		"onscrollend"
	],
	[
		"MathMLElement",
		"prototype",
		"onscroll"
	],
	[
		"MathMLElement",
		"prototype",
		"onresize"
	],
	[
		"MathMLElement",
		"prototype",
		"onreset"
	],
	[
		"MathMLElement",
		"prototype",
		"onratechange"
	],
	[
		"MathMLElement",
		"prototype",
		"onprogress"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointerup"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointerrawupdate"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointerover"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointerout"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointermove"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointerleave"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointerenter"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointerdown"
	],
	[
		"MathMLElement",
		"prototype",
		"onpointercancel"
	],
	[
		"MathMLElement",
		"prototype",
		"onplaying"
	],
	[
		"MathMLElement",
		"prototype",
		"onplay"
	],
	[
		"MathMLElement",
		"prototype",
		"onpause"
	],
	[
		"MathMLElement",
		"prototype",
		"onpaste"
	],
	[
		"MathMLElement",
		"prototype",
		"onmouseup"
	],
	[
		"MathMLElement",
		"prototype",
		"onmouseover"
	],
	[
		"MathMLElement",
		"prototype",
		"onmouseout"
	],
	[
		"MathMLElement",
		"prototype",
		"onmousemove"
	],
	[
		"MathMLElement",
		"prototype",
		"onmouseleave"
	],
	[
		"MathMLElement",
		"prototype",
		"onmouseenter"
	],
	[
		"MathMLElement",
		"prototype",
		"onmousedown"
	],
	[
		"MathMLElement",
		"prototype",
		"onlostpointercapture"
	],
	[
		"MathMLElement",
		"prototype",
		"onloadstart"
	],
	[
		"MathMLElement",
		"prototype",
		"onloadedmetadata"
	],
	[
		"MathMLElement",
		"prototype",
		"onloadeddata"
	],
	[
		"MathMLElement",
		"prototype",
		"onload"
	],
	[
		"MathMLElement",
		"prototype",
		"onkeyup"
	],
	[
		"MathMLElement",
		"prototype",
		"onkeypress"
	],
	[
		"MathMLElement",
		"prototype",
		"onkeydown"
	],
	[
		"MathMLElement",
		"prototype",
		"oninvalid"
	],
	[
		"MathMLElement",
		"prototype",
		"oninput"
	],
	[
		"MathMLElement",
		"prototype",
		"ongotpointercapture"
	],
	[
		"MathMLElement",
		"prototype",
		"onformdata"
	],
	[
		"MathMLElement",
		"prototype",
		"onfocus"
	],
	[
		"MathMLElement",
		"prototype",
		"onerror"
	],
	[
		"MathMLElement",
		"prototype",
		"onended"
	],
	[
		"MathMLElement",
		"prototype",
		"onemptied"
	],
	[
		"MathMLElement",
		"prototype",
		"ondurationchange"
	],
	[
		"MathMLElement",
		"prototype",
		"ondrop"
	],
	[
		"MathMLElement",
		"prototype",
		"ondragstart"
	],
	[
		"MathMLElement",
		"prototype",
		"ondragover"
	],
	[
		"MathMLElement",
		"prototype",
		"ondragleave"
	],
	[
		"MathMLElement",
		"prototype",
		"ondragenter"
	],
	[
		"MathMLElement",
		"prototype",
		"ondragend"
	],
	[
		"MathMLElement",
		"prototype",
		"ondrag"
	],
	[
		"MathMLElement",
		"prototype",
		"ondblclick"
	],
	[
		"MathMLElement",
		"prototype",
		"oncut"
	],
	[
		"MathMLElement",
		"prototype",
		"oncuechange"
	],
	[
		"MathMLElement",
		"prototype",
		"oncopy"
	],
	[
		"MathMLElement",
		"prototype",
		"oncontextrestored"
	],
	[
		"MathMLElement",
		"prototype",
		"oncontextmenu"
	],
	[
		"MathMLElement",
		"prototype",
		"oncontextlost"
	],
	[
		"MathMLElement",
		"prototype",
		"onclose"
	],
	[
		"MathMLElement",
		"prototype",
		"onclick"
	],
	[
		"MathMLElement",
		"prototype",
		"onchange"
	],
	[
		"MathMLElement",
		"prototype",
		"oncanplaythrough"
	],
	[
		"MathMLElement",
		"prototype",
		"oncanplay"
	],
	[
		"MathMLElement",
		"prototype",
		"oncancel"
	],
	[
		"MathMLElement",
		"prototype",
		"onblur"
	],
	[
		"MathMLElement",
		"prototype",
		"onbeforexrselect"
	],
	[
		"MathMLElement",
		"prototype",
		"onbeforetoggle"
	],
	[
		"MathMLElement",
		"prototype",
		"onbeforematch"
	],
	[
		"MathMLElement",
		"prototype",
		"onbeforeinput"
	],
	[
		"MathMLElement",
		"prototype",
		"onauxclick"
	],
	[
		"MathMLElement",
		"prototype",
		"onanimationstart"
	],
	[
		"MathMLElement",
		"prototype",
		"onanimationiteration"
	],
	[
		"MathMLElement",
		"prototype",
		"onanimationend"
	],
	[
		"MathMLElement",
		"prototype",
		"onanimationcancel"
	],
	[
		"MathMLElement",
		"prototype",
		"onabort"
	],
	[
		"MathMLElement",
		"prototype",
		"nonce"
	],
	[
		"MathMLElement",
		"prototype",
		"focus()"
	],
	[
		"MathMLElement",
		"prototype",
		"dataset"
	],
	[
		"MathMLElement",
		"prototype",
		"blur()"
	],
	[
		"MathMLElement",
		"prototype",
		"autofocus"
	],
	[
		"MathMLElement",
		"prototype",
		"attributeStyleMap"
	],
	[
		"MathMLElement",
		"prototype"
	],
	[
		"MediaCapabilities"
	],
	[
		"MediaCapabilities",
		"prototype",
		"encodingInfo()"
	],
	[
		"MediaCapabilities",
		"prototype",
		"decodingInfo()"
	],
	[
		"MediaCapabilities",
		"prototype"
	],
	[
		"MediaDeviceInfo"
	],
	[
		"MediaDeviceInfo",
		"prototype",
		"toJSON()"
	],
	[
		"MediaDeviceInfo",
		"prototype",
		"label"
	],
	[
		"MediaDeviceInfo",
		"prototype",
		"kind"
	],
	[
		"MediaDeviceInfo",
		"prototype",
		"groupId"
	],
	[
		"MediaDeviceInfo",
		"prototype",
		"deviceId"
	],
	[
		"MediaDeviceInfo",
		"prototype"
	],
	[
		"MediaDevices"
	],
	[
		"MediaDevices",
		"prototype",
		"setSupportedCaptureActions()"
	],
	[
		"MediaDevices",
		"prototype",
		"setCaptureHandleConfig()"
	],
	[
		"MediaDevices",
		"prototype",
		"selectAudioOutput()"
	],
	[
		"MediaDevices",
		"prototype",
		"ondevicechange"
	],
	[
		"MediaDevices",
		"prototype",
		"oncaptureaction"
	],
	[
		"MediaDevices",
		"prototype",
		"getViewportMedia()"
	],
	[
		"MediaDevices",
		"prototype",
		"getUserMedia()"
	],
	[
		"MediaDevices",
		"prototype",
		"getSupportedConstraints()"
	],
	[
		"MediaDevices",
		"prototype",
		"getDisplayMediaSet()"
	],
	[
		"MediaDevices",
		"prototype",
		"getDisplayMedia()"
	],
	[
		"MediaDevices",
		"prototype",
		"getAllScreensMedia()"
	],
	[
		"MediaDevices",
		"prototype",
		"enumerateDevices()"
	],
	[
		"MediaDevices",
		"prototype",
		"defaultSemantics"
	],
	[
		"MediaDevices",
		"prototype"
	],
	[
		"MediaElementAudioSourceNode"
	],
	[
		"MediaElementAudioSourceNode",
		"prototype",
		"mediaElement"
	],
	[
		"MediaElementAudioSourceNode",
		"prototype"
	],
	[
		"MediaEncryptedEvent"
	],
	[
		"MediaEncryptedEvent",
		"prototype",
		"initDataType"
	],
	[
		"MediaEncryptedEvent",
		"prototype",
		"initData"
	],
	[
		"MediaEncryptedEvent",
		"prototype"
	],
	[
		"MediaError"
	],
	[
		"MediaError",
		"prototype",
		"message"
	],
	[
		"MediaError",
		"prototype",
		"code"
	],
	[
		"MediaError",
		"prototype",
		"MEDIA_ERR_SRC_NOT_SUPPORTED"
	],
	[
		"MediaError",
		"prototype",
		"MEDIA_ERR_NETWORK"
	],
	[
		"MediaError",
		"prototype",
		"MEDIA_ERR_DECODE"
	],
	[
		"MediaError",
		"prototype",
		"MEDIA_ERR_ABORTED"
	],
	[
		"MediaError",
		"prototype"
	],
	[
		"MediaError",
		"MEDIA_ERR_SRC_NOT_SUPPORTED"
	],
	[
		"MediaError",
		"MEDIA_ERR_NETWORK"
	],
	[
		"MediaError",
		"MEDIA_ERR_DECODE"
	],
	[
		"MediaError",
		"MEDIA_ERR_ABORTED"
	],
	[
		"MediaKeyMessageEvent"
	],
	[
		"MediaKeyMessageEvent",
		"prototype",
		"messageType"
	],
	[
		"MediaKeyMessageEvent",
		"prototype",
		"message"
	],
	[
		"MediaKeyMessageEvent",
		"prototype"
	],
	[
		"MediaKeys"
	],
	[
		"MediaKeys",
		"prototype",
		"setServerCertificate()"
	],
	[
		"MediaKeys",
		"prototype",
		"getStatusForPolicy()"
	],
	[
		"MediaKeys",
		"prototype",
		"createSession()"
	],
	[
		"MediaKeys",
		"prototype"
	],
	[
		"MediaKeySession"
	],
	[
		"MediaKeySession",
		"prototype",
		"update()"
	],
	[
		"MediaKeySession",
		"prototype",
		"sessionId"
	],
	[
		"MediaKeySession",
		"prototype",
		"remove()"
	],
	[
		"MediaKeySession",
		"prototype",
		"onmessage"
	],
	[
		"MediaKeySession",
		"prototype",
		"onkeystatuseschange"
	],
	[
		"MediaKeySession",
		"prototype",
		"load()"
	],
	[
		"MediaKeySession",
		"prototype",
		"keyStatuses"
	],
	[
		"MediaKeySession",
		"prototype",
		"generateRequest()"
	],
	[
		"MediaKeySession",
		"prototype",
		"expiration"
	],
	[
		"MediaKeySession",
		"prototype",
		"closed"
	],
	[
		"MediaKeySession",
		"prototype",
		"close()"
	],
	[
		"MediaKeySession",
		"prototype"
	],
	[
		"MediaKeyStatusMap"
	],
	[
		"MediaKeyStatusMap",
		"prototype",
		"size"
	],
	[
		"MediaKeyStatusMap",
		"prototype",
		"has()"
	],
	[
		"MediaKeyStatusMap",
		"prototype",
		"get()"
	],
	[
		"MediaKeyStatusMap",
		"prototype"
	],
	[
		"MediaKeySystemAccess"
	],
	[
		"MediaKeySystemAccess",
		"prototype",
		"keySystem"
	],
	[
		"MediaKeySystemAccess",
		"prototype",
		"getConfiguration()"
	],
	[
		"MediaKeySystemAccess",
		"prototype",
		"createMediaKeys()"
	],
	[
		"MediaKeySystemAccess",
		"prototype"
	],
	[
		"MediaList"
	],
	[
		"MediaList",
		"prototype",
		"mediaText"
	],
	[
		"MediaList",
		"prototype",
		"length"
	],
	[
		"MediaList",
		"prototype",
		"item()"
	],
	[
		"MediaList",
		"prototype",
		"deleteMedium()"
	],
	[
		"MediaList",
		"prototype",
		"appendMedium()"
	],
	[
		"MediaList",
		"prototype"
	],
	[
		"MediaMetadata"
	],
	[
		"MediaMetadata",
		"prototype",
		"title"
	],
	[
		"MediaMetadata",
		"prototype",
		"chapterInfo"
	],
	[
		"MediaMetadata",
		"prototype",
		"artwork"
	],
	[
		"MediaMetadata",
		"prototype",
		"artist"
	],
	[
		"MediaMetadata",
		"prototype",
		"album"
	],
	[
		"MediaMetadata",
		"prototype"
	],
	[
		"MediaQueryList"
	],
	[
		"MediaQueryList",
		"prototype",
		"removeListener()"
	],
	[
		"MediaQueryList",
		"prototype",
		"onchange"
	],
	[
		"MediaQueryList",
		"prototype",
		"media"
	],
	[
		"MediaQueryList",
		"prototype",
		"matches"
	],
	[
		"MediaQueryList",
		"prototype",
		"addListener()"
	],
	[
		"MediaQueryList",
		"prototype"
	],
	[
		"MediaQueryListEvent"
	],
	[
		"MediaQueryListEvent",
		"prototype",
		"media"
	],
	[
		"MediaQueryListEvent",
		"prototype",
		"matches"
	],
	[
		"MediaQueryListEvent",
		"prototype"
	],
	[
		"MediaRecorder"
	],
	[
		"MediaRecorder",
		"prototype",
		"videoBitsPerSecond"
	],
	[
		"MediaRecorder",
		"prototype",
		"stream"
	],
	[
		"MediaRecorder",
		"prototype",
		"stop()"
	],
	[
		"MediaRecorder",
		"prototype",
		"state"
	],
	[
		"MediaRecorder",
		"prototype",
		"start()"
	],
	[
		"MediaRecorder",
		"prototype",
		"resume()"
	],
	[
		"MediaRecorder",
		"prototype",
		"requestData()"
	],
	[
		"MediaRecorder",
		"prototype",
		"pause()"
	],
	[
		"MediaRecorder",
		"prototype",
		"onstop"
	],
	[
		"MediaRecorder",
		"prototype",
		"onstart"
	],
	[
		"MediaRecorder",
		"prototype",
		"onresume"
	],
	[
		"MediaRecorder",
		"prototype",
		"onpause"
	],
	[
		"MediaRecorder",
		"prototype",
		"onerror"
	],
	[
		"MediaRecorder",
		"prototype",
		"ondataavailable"
	],
	[
		"MediaRecorder",
		"prototype",
		"mimeType"
	],
	[
		"MediaRecorder",
		"prototype",
		"audioBitsPerSecond"
	],
	[
		"MediaRecorder",
		"prototype",
		"audioBitrateMode"
	],
	[
		"MediaRecorder",
		"prototype"
	],
	[
		"MediaRecorder",
		"isTypeSupported()"
	],
	[
		"MediaSession"
	],
	[
		"MediaSession",
		"prototype",
		"setScreenshareActive()"
	],
	[
		"MediaSession",
		"prototype",
		"setPositionState()"
	],
	[
		"MediaSession",
		"prototype",
		"setMicrophoneActive()"
	],
	[
		"MediaSession",
		"prototype",
		"setCameraActive()"
	],
	[
		"MediaSession",
		"prototype",
		"setActionHandler()"
	],
	[
		"MediaSession",
		"prototype",
		"playbackState"
	],
	[
		"MediaSession",
		"prototype",
		"metadata"
	],
	[
		"MediaSession",
		"prototype"
	],
	[
		"MediaSource"
	],
	[
		"MediaSource",
		"prototype",
		"sourceBuffers"
	],
	[
		"MediaSource",
		"prototype",
		"setLiveSeekableRange()"
	],
	[
		"MediaSource",
		"prototype",
		"removeSourceBuffer()"
	],
	[
		"MediaSource",
		"prototype",
		"readyState"
	],
	[
		"MediaSource",
		"prototype",
		"onsourceopen"
	],
	[
		"MediaSource",
		"prototype",
		"onsourceended"
	],
	[
		"MediaSource",
		"prototype",
		"onsourceclose"
	],
	[
		"MediaSource",
		"prototype",
		"handle"
	],
	[
		"MediaSource",
		"prototype",
		"endOfStream()"
	],
	[
		"MediaSource",
		"prototype",
		"duration"
	],
	[
		"MediaSource",
		"prototype",
		"clearLiveSeekableRange()"
	],
	[
		"MediaSource",
		"prototype",
		"addSourceBuffer()"
	],
	[
		"MediaSource",
		"prototype",
		"activeSourceBuffers"
	],
	[
		"MediaSource",
		"prototype"
	],
	[
		"MediaSource",
		"isTypeSupported()"
	],
	[
		"MediaSource",
		"canConstructInDedicatedWorker"
	],
	[
		"MediaSourceHandle"
	],
	[
		"MediaSourceHandle",
		"prototype"
	],
	[
		"MediaStream"
	],
	[
		"MediaStream",
		"prototype",
		"removeTrack()"
	],
	[
		"MediaStream",
		"prototype",
		"onremovetrack"
	],
	[
		"MediaStream",
		"prototype",
		"onaddtrack"
	],
	[
		"MediaStream",
		"prototype",
		"id"
	],
	[
		"MediaStream",
		"prototype",
		"getVideoTracks()"
	],
	[
		"MediaStream",
		"prototype",
		"getTracks()"
	],
	[
		"MediaStream",
		"prototype",
		"getTrackById()"
	],
	[
		"MediaStream",
		"prototype",
		"getAudioTracks()"
	],
	[
		"MediaStream",
		"prototype",
		"clone()"
	],
	[
		"MediaStream",
		"prototype",
		"addTrack()"
	],
	[
		"MediaStream",
		"prototype",
		"active"
	],
	[
		"MediaStream",
		"prototype"
	],
	[
		"MediaStreamAudioDestinationNode"
	],
	[
		"MediaStreamAudioDestinationNode",
		"prototype",
		"stream"
	],
	[
		"MediaStreamAudioDestinationNode",
		"prototype"
	],
	[
		"MediaStreamAudioSourceNode"
	],
	[
		"MediaStreamAudioSourceNode",
		"prototype",
		"mediaStream"
	],
	[
		"MediaStreamAudioSourceNode",
		"prototype"
	],
	[
		"MediaStreamTrack"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"stop()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"stats"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"sendCaptureAction()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"readyState"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"onunmute"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"onmute"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"onisolationchange"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"onended"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"onconfigurationchange"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"oncapturehandlechange"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"muted"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"label"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"kind"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"isolated"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"id"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"getSupportedCaptureActions()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"getSettings()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"getConstraints()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"getCaptureHandle()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"getCapabilities()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"enabled"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"contentHint"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"clone()"
	],
	[
		"MediaStreamTrack",
		"prototype",
		"applyConstraints()"
	],
	[
		"MediaStreamTrack",
		"prototype"
	],
	[
		"MediaStreamTrackAudioSourceNode"
	],
	[
		"MediaStreamTrackAudioSourceNode",
		"prototype"
	],
	[
		"MediaStreamTrackAudioStats"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"totalFramesDuration"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"totalFrames"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"toJSON()"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"resetLatency()"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"minimumLatency"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"maximumLatency"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"latency"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"deliveredFramesDuration"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"deliveredFrames"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype",
		"averageLatency"
	],
	[
		"MediaStreamTrackAudioStats",
		"prototype"
	],
	[
		"MediaStreamTrackEvent"
	],
	[
		"MediaStreamTrackEvent",
		"prototype",
		"track"
	],
	[
		"MediaStreamTrackEvent",
		"prototype"
	],
	[
		"MediaStreamTrackGenerator"
	],
	[
		"MediaStreamTrackGenerator",
		"prototype",
		"writable"
	],
	[
		"MediaStreamTrackGenerator",
		"prototype"
	],
	[
		"MediaStreamTrackProcessor"
	],
	[
		"MediaStreamTrackProcessor",
		"prototype",
		"readable"
	],
	[
		"MediaStreamTrackProcessor",
		"prototype",
		"readable"
	],
	[
		"MediaStreamTrackProcessor",
		"prototype"
	],
	[
		"MediaStreamTrackVideoStats"
	],
	[
		"MediaStreamTrackVideoStats",
		"prototype",
		"totalFrames"
	],
	[
		"MediaStreamTrackVideoStats",
		"prototype",
		"toJSON()"
	],
	[
		"MediaStreamTrackVideoStats",
		"prototype",
		"discardedFrames"
	],
	[
		"MediaStreamTrackVideoStats",
		"prototype",
		"deliveredFrames"
	],
	[
		"MediaStreamTrackVideoStats",
		"prototype"
	],
	[
		"Memory"
	],
	[
		"Memory",
		"prototype",
		"toResizableBuffer()"
	],
	[
		"Memory",
		"prototype",
		"toFixedLengthBuffer()"
	],
	[
		"Memory",
		"prototype",
		"grow()"
	],
	[
		"Memory",
		"prototype",
		"buffer"
	],
	[
		"Memory",
		"prototype"
	],
	[
		"MessageChannel"
	],
	[
		"MessageChannel",
		"prototype",
		"port2"
	],
	[
		"MessageChannel",
		"prototype",
		"port1"
	],
	[
		"MessageChannel",
		"prototype"
	],
	[
		"MessageEvent"
	],
	[
		"MessageEvent",
		"prototype",
		"source"
	],
	[
		"MessageEvent",
		"prototype",
		"ports"
	],
	[
		"MessageEvent",
		"prototype",
		"origin"
	],
	[
		"MessageEvent",
		"prototype",
		"origin"
	],
	[
		"MessageEvent",
		"prototype",
		"lastEventId"
	],
	[
		"MessageEvent",
		"prototype",
		"initMessageEvent()"
	],
	[
		"MessageEvent",
		"prototype",
		"extendedOrigin"
	],
	[
		"MessageEvent",
		"prototype",
		"data"
	],
	[
		"MessageEvent",
		"prototype"
	],
	[
		"MessagePort"
	],
	[
		"MessagePort",
		"prototype",
		"start()"
	],
	[
		"MessagePort",
		"prototype",
		"postMessage()"
	],
	[
		"MessagePort",
		"prototype",
		"onmessageerror"
	],
	[
		"MessagePort",
		"prototype",
		"onmessage"
	],
	[
		"MessagePort",
		"prototype",
		"onclose"
	],
	[
		"MessagePort",
		"prototype",
		"close()"
	],
	[
		"MessagePort",
		"prototype"
	],
	[
		"MIDIAccess"
	],
	[
		"MIDIAccess",
		"prototype",
		"sysexEnabled"
	],
	[
		"MIDIAccess",
		"prototype",
		"outputs"
	],
	[
		"MIDIAccess",
		"prototype",
		"onstatechange"
	],
	[
		"MIDIAccess",
		"prototype",
		"inputs"
	],
	[
		"MIDIAccess",
		"prototype"
	],
	[
		"MIDIConnectionEvent"
	],
	[
		"MIDIConnectionEvent",
		"prototype",
		"port"
	],
	[
		"MIDIConnectionEvent",
		"prototype"
	],
	[
		"MIDIInput"
	],
	[
		"MIDIInput",
		"prototype",
		"onmidimessage"
	],
	[
		"MIDIInput",
		"prototype"
	],
	[
		"MIDIInputMap"
	],
	[
		"MIDIInputMap",
		"prototype"
	],
	[
		"MIDIMessageEvent"
	],
	[
		"MIDIMessageEvent",
		"prototype",
		"data"
	],
	[
		"MIDIMessageEvent",
		"prototype"
	],
	[
		"MIDIOutput"
	],
	[
		"MIDIOutput",
		"prototype",
		"send()"
	],
	[
		"MIDIOutput",
		"prototype",
		"clear()"
	],
	[
		"MIDIOutput",
		"prototype"
	],
	[
		"MIDIOutputMap"
	],
	[
		"MIDIOutputMap",
		"prototype"
	],
	[
		"MIDIPort"
	],
	[
		"MIDIPort",
		"prototype",
		"version"
	],
	[
		"MIDIPort",
		"prototype",
		"type"
	],
	[
		"MIDIPort",
		"prototype",
		"state"
	],
	[
		"MIDIPort",
		"prototype",
		"open()"
	],
	[
		"MIDIPort",
		"prototype",
		"onstatechange"
	],
	[
		"MIDIPort",
		"prototype",
		"name"
	],
	[
		"MIDIPort",
		"prototype",
		"manufacturer"
	],
	[
		"MIDIPort",
		"prototype",
		"id"
	],
	[
		"MIDIPort",
		"prototype",
		"connection"
	],
	[
		"MIDIPort",
		"prototype",
		"close()"
	],
	[
		"MIDIPort",
		"prototype"
	],
	[
		"MimeType"
	],
	[
		"MimeType",
		"prototype",
		"type"
	],
	[
		"MimeType",
		"prototype",
		"suffixes"
	],
	[
		"MimeType",
		"prototype",
		"enabledPlugin"
	],
	[
		"MimeType",
		"prototype",
		"description"
	],
	[
		"MimeType",
		"prototype"
	],
	[
		"MimeTypeArray"
	],
	[
		"MimeTypeArray",
		"prototype",
		"namedItem()"
	],
	[
		"MimeTypeArray",
		"prototype",
		"length"
	],
	[
		"MimeTypeArray",
		"prototype",
		"item()"
	],
	[
		"MimeTypeArray",
		"prototype"
	],
	[
		"ML"
	],
	[
		"ML",
		"prototype",
		"createContext()"
	],
	[
		"ML",
		"prototype"
	],
	[
		"MLContext"
	],
	[
		"MLContext",
		"prototype",
		"opSupportLimits()"
	],
	[
		"MLContext",
		"prototype",
		"compute()"
	],
	[
		"MLContext",
		"prototype"
	],
	[
		"MLGraph"
	],
	[
		"MLGraph",
		"prototype"
	],
	[
		"MLGraphBuilder"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"where()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"triangular()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"transpose()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"tanh()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"tan()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"sub()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"sqrt()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"split()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"softsign()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"softplus()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"softmax()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"slice()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"sin()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"sigmoid()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reshape()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"resample2d()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"relu()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceSumSquare()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceSum()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceProduct()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceMin()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceMean()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceMax()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceLogSumExp()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceLogSum()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceL2()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reduceL1()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"reciprocal()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"prelu()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"pow()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"pad()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"neg()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"mul()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"min()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"maxPool2d()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"max()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"matmul()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"lstmCell()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"lstm()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"logicalNot()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"log()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"linear()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"lesserOrEqual()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"lesser()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"leakyRelu()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"layerNormalization()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"l2Pool2d()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"instanceNormalization()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"input()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"identity()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"hardSwish()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"hardSigmoid()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"gruCell()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"gru()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"greaterOrEqual()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"greater()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"gemm()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"gelu()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"gather()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"floor()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"expand()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"exp()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"erf()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"equal()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"elu()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"div()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"cos()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"convTranspose2d()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"conv2d()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"constant()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"concat()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"clamp()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"ceil()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"cast()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"build()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"batchNormalization()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"averagePool2d()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"argMin()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"argMax()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"add()"
	],
	[
		"MLGraphBuilder",
		"prototype",
		"abs()"
	],
	[
		"MLGraphBuilder",
		"prototype"
	],
	[
		"MLModel"
	],
	[
		"MLModel",
		"prototype",
		"outputs()"
	],
	[
		"MLModel",
		"prototype",
		"inputs()"
	],
	[
		"MLModel",
		"prototype",
		"compute()"
	],
	[
		"MLModel",
		"prototype"
	],
	[
		"MLModelLoader"
	],
	[
		"MLModelLoader",
		"prototype",
		"load()"
	],
	[
		"MLModelLoader",
		"prototype"
	],
	[
		"MLOperand"
	],
	[
		"MLOperand",
		"prototype",
		"shape()"
	],
	[
		"MLOperand",
		"prototype",
		"dataType()"
	],
	[
		"MLOperand",
		"prototype"
	],
	[
		"Module"
	],
	[
		"Module",
		"prototype"
	],
	[
		"Module",
		"imports()"
	],
	[
		"Module",
		"exports()"
	],
	[
		"Module",
		"customSections()"
	],
	[
		"MonetizationCurrencyAmount"
	],
	[
		"MonetizationCurrencyAmount",
		"prototype",
		"value"
	],
	[
		"MonetizationCurrencyAmount",
		"prototype",
		"currency"
	],
	[
		"MonetizationCurrencyAmount",
		"prototype"
	],
	[
		"MonetizationEvent"
	],
	[
		"MonetizationEvent",
		"prototype",
		"receipt"
	],
	[
		"MonetizationEvent",
		"prototype",
		"paymentPointer"
	],
	[
		"MonetizationEvent",
		"prototype",
		"incomingPayment"
	],
	[
		"MonetizationEvent",
		"prototype",
		"assetScale"
	],
	[
		"MonetizationEvent",
		"prototype",
		"assetCode"
	],
	[
		"MonetizationEvent",
		"prototype",
		"amountSent"
	],
	[
		"MonetizationEvent",
		"prototype",
		"amount"
	],
	[
		"MonetizationEvent",
		"prototype"
	],
	[
		"MouseEvent"
	],
	[
		"MouseEvent",
		"prototype",
		"y"
	],
	[
		"MouseEvent",
		"prototype",
		"x"
	],
	[
		"MouseEvent",
		"prototype",
		"shiftKey"
	],
	[
		"MouseEvent",
		"prototype",
		"screenY"
	],
	[
		"MouseEvent",
		"prototype",
		"screenX"
	],
	[
		"MouseEvent",
		"prototype",
		"relatedTarget"
	],
	[
		"MouseEvent",
		"prototype",
		"pageY"
	],
	[
		"MouseEvent",
		"prototype",
		"pageX"
	],
	[
		"MouseEvent",
		"prototype",
		"offsetY"
	],
	[
		"MouseEvent",
		"prototype",
		"offsetX"
	],
	[
		"MouseEvent",
		"prototype",
		"movementY"
	],
	[
		"MouseEvent",
		"prototype",
		"movementX"
	],
	[
		"MouseEvent",
		"prototype",
		"metaKey"
	],
	[
		"MouseEvent",
		"prototype",
		"layerY"
	],
	[
		"MouseEvent",
		"prototype",
		"layerX"
	],
	[
		"MouseEvent",
		"prototype",
		"initMouseEvent()"
	],
	[
		"MouseEvent",
		"prototype",
		"getModifierState()"
	],
	[
		"MouseEvent",
		"prototype",
		"ctrlKey"
	],
	[
		"MouseEvent",
		"prototype",
		"clientY"
	],
	[
		"MouseEvent",
		"prototype",
		"clientX"
	],
	[
		"MouseEvent",
		"prototype",
		"buttons"
	],
	[
		"MouseEvent",
		"prototype",
		"button"
	],
	[
		"MouseEvent",
		"prototype",
		"altKey"
	],
	[
		"MouseEvent",
		"prototype"
	],
	[
		"MutationEvent"
	],
	[
		"MutationEvent",
		"prototype",
		"relatedNode"
	],
	[
		"MutationEvent",
		"prototype",
		"prevValue"
	],
	[
		"MutationEvent",
		"prototype",
		"newValue"
	],
	[
		"MutationEvent",
		"prototype",
		"initMutationEvent()"
	],
	[
		"MutationEvent",
		"prototype",
		"attrName"
	],
	[
		"MutationEvent",
		"prototype",
		"attrChange"
	],
	[
		"MutationEvent",
		"prototype",
		"REMOVAL"
	],
	[
		"MutationEvent",
		"prototype",
		"MODIFICATION"
	],
	[
		"MutationEvent",
		"prototype",
		"ADDITION"
	],
	[
		"MutationEvent",
		"prototype"
	],
	[
		"MutationEvent",
		"REMOVAL"
	],
	[
		"MutationEvent",
		"MODIFICATION"
	],
	[
		"MutationEvent",
		"ADDITION"
	],
	[
		"MutationObserver"
	],
	[
		"MutationObserver",
		"prototype",
		"takeRecords()"
	],
	[
		"MutationObserver",
		"prototype",
		"observe()"
	],
	[
		"MutationObserver",
		"prototype",
		"disconnect()"
	],
	[
		"MutationObserver",
		"prototype"
	],
	[
		"MutationRecord"
	],
	[
		"MutationRecord",
		"prototype",
		"type"
	],
	[
		"MutationRecord",
		"prototype",
		"target"
	],
	[
		"MutationRecord",
		"prototype",
		"removedNodes"
	],
	[
		"MutationRecord",
		"prototype",
		"previousSibling"
	],
	[
		"MutationRecord",
		"prototype",
		"oldValue"
	],
	[
		"MutationRecord",
		"prototype",
		"nextSibling"
	],
	[
		"MutationRecord",
		"prototype",
		"attributeNamespace"
	],
	[
		"MutationRecord",
		"prototype",
		"attributeName"
	],
	[
		"MutationRecord",
		"prototype",
		"addedNodes"
	],
	[
		"MutationRecord",
		"prototype"
	],
	[
		"NamedFlow"
	],
	[
		"NamedFlow",
		"prototype",
		"overset"
	],
	[
		"NamedFlow",
		"prototype",
		"name"
	],
	[
		"NamedFlow",
		"prototype",
		"getRegionsByContent()"
	],
	[
		"NamedFlow",
		"prototype",
		"getRegions()"
	],
	[
		"NamedFlow",
		"prototype",
		"getContent()"
	],
	[
		"NamedFlow",
		"prototype",
		"firstEmptyRegionIndex"
	],
	[
		"NamedFlow",
		"prototype"
	],
	[
		"NamedFlowMap"
	],
	[
		"NamedFlowMap",
		"prototype"
	],
	[
		"NamedNodeMap"
	],
	[
		"NamedNodeMap",
		"prototype",
		"setNamedItemNS()"
	],
	[
		"NamedNodeMap",
		"prototype",
		"setNamedItem()"
	],
	[
		"NamedNodeMap",
		"prototype",
		"removeNamedItemNS()"
	],
	[
		"NamedNodeMap",
		"prototype",
		"removeNamedItem()"
	],
	[
		"NamedNodeMap",
		"prototype",
		"length"
	],
	[
		"NamedNodeMap",
		"prototype",
		"item()"
	],
	[
		"NamedNodeMap",
		"prototype",
		"getNamedItemNS()"
	],
	[
		"NamedNodeMap",
		"prototype",
		"getNamedItem()"
	],
	[
		"NamedNodeMap",
		"prototype"
	],
	[
		"NavigateEvent"
	],
	[
		"NavigateEvent",
		"prototype",
		"userInitiated"
	],
	[
		"NavigateEvent",
		"prototype",
		"signal"
	],
	[
		"NavigateEvent",
		"prototype",
		"scroll()"
	],
	[
		"NavigateEvent",
		"prototype",
		"navigationType"
	],
	[
		"NavigateEvent",
		"prototype",
		"intercept()"
	],
	[
		"NavigateEvent",
		"prototype",
		"info"
	],
	[
		"NavigateEvent",
		"prototype",
		"hashChange"
	],
	[
		"NavigateEvent",
		"prototype",
		"hasUAVisualTransition"
	],
	[
		"NavigateEvent",
		"prototype",
		"formData"
	],
	[
		"NavigateEvent",
		"prototype",
		"downloadRequest"
	],
	[
		"NavigateEvent",
		"prototype",
		"destination"
	],
	[
		"NavigateEvent",
		"prototype",
		"canIntercept"
	],
	[
		"NavigateEvent",
		"prototype"
	],
	[
		"Navigation"
	],
	[
		"Navigation",
		"prototype",
		"updateCurrentEntry()"
	],
	[
		"Navigation",
		"prototype",
		"traverseTo()"
	],
	[
		"Navigation",
		"prototype",
		"transition"
	],
	[
		"Navigation",
		"prototype",
		"reload()"
	],
	[
		"Navigation",
		"prototype",
		"onnavigatesuccess"
	],
	[
		"Navigation",
		"prototype",
		"onnavigateerror"
	],
	[
		"Navigation",
		"prototype",
		"onnavigate"
	],
	[
		"Navigation",
		"prototype",
		"oncurrententrychange"
	],
	[
		"Navigation",
		"prototype",
		"navigate()"
	],
	[
		"Navigation",
		"prototype",
		"forward()"
	],
	[
		"Navigation",
		"prototype",
		"entries()"
	],
	[
		"Navigation",
		"prototype",
		"currentEntry"
	],
	[
		"Navigation",
		"prototype",
		"canGoForward"
	],
	[
		"Navigation",
		"prototype",
		"canGoBack"
	],
	[
		"Navigation",
		"prototype",
		"back()"
	],
	[
		"Navigation",
		"prototype",
		"activation"
	],
	[
		"Navigation",
		"prototype"
	],
	[
		"NavigationActivation"
	],
	[
		"NavigationActivation",
		"prototype",
		"navigationType"
	],
	[
		"NavigationActivation",
		"prototype",
		"from"
	],
	[
		"NavigationActivation",
		"prototype",
		"entry"
	],
	[
		"NavigationActivation",
		"prototype"
	],
	[
		"NavigationCurrentEntryChangeEvent"
	],
	[
		"NavigationCurrentEntryChangeEvent",
		"prototype",
		"navigationType"
	],
	[
		"NavigationCurrentEntryChangeEvent",
		"prototype",
		"from"
	],
	[
		"NavigationCurrentEntryChangeEvent",
		"prototype"
	],
	[
		"NavigationDestination"
	],
	[
		"NavigationDestination",
		"prototype",
		"url"
	],
	[
		"NavigationDestination",
		"prototype",
		"sameDocument"
	],
	[
		"NavigationDestination",
		"prototype",
		"key"
	],
	[
		"NavigationDestination",
		"prototype",
		"index"
	],
	[
		"NavigationDestination",
		"prototype",
		"id"
	],
	[
		"NavigationDestination",
		"prototype",
		"getState()"
	],
	[
		"NavigationDestination",
		"prototype"
	],
	[
		"NavigationEvent"
	],
	[
		"NavigationEvent",
		"prototype",
		"relatedTarget"
	],
	[
		"NavigationEvent",
		"prototype",
		"dir"
	],
	[
		"NavigationEvent",
		"prototype"
	],
	[
		"NavigationHistoryEntry"
	],
	[
		"NavigationHistoryEntry",
		"prototype",
		"url"
	],
	[
		"NavigationHistoryEntry",
		"prototype",
		"sameDocument"
	],
	[
		"NavigationHistoryEntry",
		"prototype",
		"ondispose"
	],
	[
		"NavigationHistoryEntry",
		"prototype",
		"key"
	],
	[
		"NavigationHistoryEntry",
		"prototype",
		"index"
	],
	[
		"NavigationHistoryEntry",
		"prototype",
		"id"
	],
	[
		"NavigationHistoryEntry",
		"prototype",
		"getState()"
	],
	[
		"NavigationHistoryEntry",
		"prototype"
	],
	[
		"NavigationPreloadManager"
	],
	[
		"NavigationPreloadManager",
		"prototype",
		"setHeaderValue()"
	],
	[
		"NavigationPreloadManager",
		"prototype",
		"getState()"
	],
	[
		"NavigationPreloadManager",
		"prototype",
		"enable()"
	],
	[
		"NavigationPreloadManager",
		"prototype",
		"disable()"
	],
	[
		"NavigationPreloadManager",
		"prototype"
	],
	[
		"NavigationTransition"
	],
	[
		"NavigationTransition",
		"prototype",
		"navigationType"
	],
	[
		"NavigationTransition",
		"prototype",
		"from"
	],
	[
		"NavigationTransition",
		"prototype",
		"finished"
	],
	[
		"NavigationTransition",
		"prototype"
	],
	[
		"Navigator"
	],
	[
		"Navigator",
		"prototype",
		"xr"
	],
	[
		"Navigator",
		"prototype",
		"windowControlsOverlay"
	],
	[
		"Navigator",
		"prototype",
		"webdriver"
	],
	[
		"Navigator",
		"prototype",
		"wakeLock"
	],
	[
		"Navigator",
		"prototype",
		"virtualKeyboard"
	],
	[
		"Navigator",
		"prototype",
		"vibrate()"
	],
	[
		"Navigator",
		"prototype",
		"vendorSub"
	],
	[
		"Navigator",
		"prototype",
		"vendor"
	],
	[
		"Navigator",
		"prototype",
		"userAgentData"
	],
	[
		"Navigator",
		"prototype",
		"userAgent"
	],
	[
		"Navigator",
		"prototype",
		"userActivation"
	],
	[
		"Navigator",
		"prototype",
		"usb"
	],
	[
		"Navigator",
		"prototype",
		"updateAdInterestGroups()"
	],
	[
		"Navigator",
		"prototype",
		"unregisterProtocolHandler()"
	],
	[
		"Navigator",
		"prototype",
		"taintEnabled()"
	],
	[
		"Navigator",
		"prototype",
		"storageBuckets"
	],
	[
		"Navigator",
		"prototype",
		"storage"
	],
	[
		"Navigator",
		"prototype",
		"smartCard"
	],
	[
		"Navigator",
		"prototype",
		"share()"
	],
	[
		"Navigator",
		"prototype",
		"setAppBadge()"
	],
	[
		"Navigator",
		"prototype",
		"serviceWorker"
	],
	[
		"Navigator",
		"prototype",
		"serial"
	],
	[
		"Navigator",
		"prototype",
		"sendBeacon()"
	],
	[
		"Navigator",
		"prototype",
		"scheduling"
	],
	[
		"Navigator",
		"prototype",
		"runAdAuction()"
	],
	[
		"Navigator",
		"prototype",
		"requestMediaKeySystemAccess()"
	],
	[
		"Navigator",
		"prototype",
		"requestMIDIAccess()"
	],
	[
		"Navigator",
		"prototype",
		"registerProtocolHandler()"
	],
	[
		"Navigator",
		"prototype",
		"queryHandwritingRecognizer()"
	],
	[
		"Navigator",
		"prototype",
		"protectedAudience"
	],
	[
		"Navigator",
		"prototype",
		"productSub"
	],
	[
		"Navigator",
		"prototype",
		"product"
	],
	[
		"Navigator",
		"prototype",
		"presentation"
	],
	[
		"Navigator",
		"prototype",
		"plugins"
	],
	[
		"Navigator",
		"prototype",
		"platform"
	],
	[
		"Navigator",
		"prototype",
		"permissions"
	],
	[
		"Navigator",
		"prototype",
		"pdfViewerEnabled"
	],
	[
		"Navigator",
		"prototype",
		"oscpu"
	],
	[
		"Navigator",
		"prototype",
		"onLine"
	],
	[
		"Navigator",
		"prototype",
		"ml"
	],
	[
		"Navigator",
		"prototype",
		"mimeTypes"
	],
	[
		"Navigator",
		"prototype",
		"mediaSession"
	],
	[
		"Navigator",
		"prototype",
		"mediaDevices"
	],
	[
		"Navigator",
		"prototype",
		"mediaCapabilities"
	],
	[
		"Navigator",
		"prototype",
		"maxTouchPoints"
	],
	[
		"Navigator",
		"prototype",
		"managed"
	],
	[
		"Navigator",
		"prototype",
		"locks"
	],
	[
		"Navigator",
		"prototype",
		"leaveAdInterestGroup()"
	],
	[
		"Navigator",
		"prototype",
		"languages"
	],
	[
		"Navigator",
		"prototype",
		"language"
	],
	[
		"Navigator",
		"prototype",
		"keyboard"
	],
	[
		"Navigator",
		"prototype",
		"joinAdInterestGroup()"
	],
	[
		"Navigator",
		"prototype",
		"javaEnabled()"
	],
	[
		"Navigator",
		"prototype",
		"ink"
	],
	[
		"Navigator",
		"prototype",
		"identity"
	],
	[
		"Navigator",
		"prototype",
		"hid"
	],
	[
		"Navigator",
		"prototype",
		"hardwareConcurrency"
	],
	[
		"Navigator",
		"prototype",
		"gpu"
	],
	[
		"Navigator",
		"prototype",
		"getInterestGroupAdAuctionData()"
	],
	[
		"Navigator",
		"prototype",
		"getInstalledRelatedApps()"
	],
	[
		"Navigator",
		"prototype",
		"getGamepads()"
	],
	[
		"Navigator",
		"prototype",
		"getBattery()"
	],
	[
		"Navigator",
		"prototype",
		"getAutoplayPolicy()"
	],
	[
		"Navigator",
		"prototype",
		"geolocation"
	],
	[
		"Navigator",
		"prototype",
		"devicePosture"
	],
	[
		"Navigator",
		"prototype",
		"deviceMemory"
	],
	[
		"Navigator",
		"prototype",
		"deprecatedURNtoURL()"
	],
	[
		"Navigator",
		"prototype",
		"deprecatedRunAdAuctionEnforcesKAnonymity"
	],
	[
		"Navigator",
		"prototype",
		"deprecatedReplaceInURN()"
	],
	[
		"Navigator",
		"prototype",
		"credentials"
	],
	[
		"Navigator",
		"prototype",
		"createHandwritingRecognizer()"
	],
	[
		"Navigator",
		"prototype",
		"createAuctionNonce()"
	],
	[
		"Navigator",
		"prototype",
		"cookieEnabled"
	],
	[
		"Navigator",
		"prototype",
		"contacts"
	],
	[
		"Navigator",
		"prototype",
		"connection"
	],
	[
		"Navigator",
		"prototype",
		"clipboard"
	],
	[
		"Navigator",
		"prototype",
		"clearOriginJoinedAdInterestGroups()"
	],
	[
		"Navigator",
		"prototype",
		"clearAppBadge()"
	],
	[
		"Navigator",
		"prototype",
		"canShare()"
	],
	[
		"Navigator",
		"prototype",
		"canLoadAdAuctionFencedFrame()"
	],
	[
		"Navigator",
		"prototype",
		"bluetooth"
	],
	[
		"Navigator",
		"prototype",
		"audioSession"
	],
	[
		"Navigator",
		"prototype",
		"appVersion"
	],
	[
		"Navigator",
		"prototype",
		"appName"
	],
	[
		"Navigator",
		"prototype",
		"appCodeName"
	],
	[
		"Navigator",
		"prototype",
		"adAuctionComponents()"
	],
	[
		"Navigator",
		"prototype"
	],
	[
		"NavigatorManagedData"
	],
	[
		"NavigatorManagedData",
		"prototype",
		"onmanagedconfigurationchange"
	],
	[
		"NavigatorManagedData",
		"prototype",
		"getSerialNumber()"
	],
	[
		"NavigatorManagedData",
		"prototype",
		"getManagedConfiguration()"
	],
	[
		"NavigatorManagedData",
		"prototype",
		"getHostname()"
	],
	[
		"NavigatorManagedData",
		"prototype",
		"getDirectoryId()"
	],
	[
		"NavigatorManagedData",
		"prototype",
		"getAnnotatedLocation()"
	],
	[
		"NavigatorManagedData",
		"prototype",
		"getAnnotatedAssetId()"
	],
	[
		"NavigatorManagedData",
		"prototype"
	],
	[
		"NavigatorUAData"
	],
	[
		"NavigatorUAData",
		"prototype",
		"toJSON()"
	],
	[
		"NavigatorUAData",
		"prototype",
		"platform"
	],
	[
		"NavigatorUAData",
		"prototype",
		"mobile"
	],
	[
		"NavigatorUAData",
		"prototype",
		"getHighEntropyValues()"
	],
	[
		"NavigatorUAData",
		"prototype",
		"brands"
	],
	[
		"NavigatorUAData",
		"prototype"
	],
	[
		"NDEFMessage"
	],
	[
		"NDEFMessage",
		"prototype",
		"records"
	],
	[
		"NDEFMessage",
		"prototype"
	],
	[
		"NDEFReader"
	],
	[
		"NDEFReader",
		"prototype",
		"write()"
	],
	[
		"NDEFReader",
		"prototype",
		"scan()"
	],
	[
		"NDEFReader",
		"prototype",
		"onreadingerror"
	],
	[
		"NDEFReader",
		"prototype",
		"onreading"
	],
	[
		"NDEFReader",
		"prototype",
		"makeReadOnly()"
	],
	[
		"NDEFReader",
		"prototype"
	],
	[
		"NDEFReadingEvent"
	],
	[
		"NDEFReadingEvent",
		"prototype",
		"serialNumber"
	],
	[
		"NDEFReadingEvent",
		"prototype",
		"message"
	],
	[
		"NDEFReadingEvent",
		"prototype"
	],
	[
		"NDEFRecord"
	],
	[
		"NDEFRecord",
		"prototype",
		"toRecords()"
	],
	[
		"NDEFRecord",
		"prototype",
		"recordType"
	],
	[
		"NDEFRecord",
		"prototype",
		"mediaType"
	],
	[
		"NDEFRecord",
		"prototype",
		"lang"
	],
	[
		"NDEFRecord",
		"prototype",
		"id"
	],
	[
		"NDEFRecord",
		"prototype",
		"encoding"
	],
	[
		"NDEFRecord",
		"prototype",
		"data"
	],
	[
		"NDEFRecord",
		"prototype"
	],
	[
		"NetworkInformation"
	],
	[
		"NetworkInformation",
		"prototype",
		"type"
	],
	[
		"NetworkInformation",
		"prototype",
		"saveData"
	],
	[
		"NetworkInformation",
		"prototype",
		"rtt"
	],
	[
		"NetworkInformation",
		"prototype",
		"onchange"
	],
	[
		"NetworkInformation",
		"prototype",
		"effectiveType"
	],
	[
		"NetworkInformation",
		"prototype",
		"downlinkMax"
	],
	[
		"NetworkInformation",
		"prototype",
		"downlink"
	],
	[
		"NetworkInformation",
		"prototype"
	],
	[
		"Node"
	],
	[
		"Node",
		"prototype",
		"textContent"
	],
	[
		"Node",
		"prototype",
		"replaceChild()"
	],
	[
		"Node",
		"prototype",
		"removeChild()"
	],
	[
		"Node",
		"prototype",
		"previousSibling"
	],
	[
		"Node",
		"prototype",
		"parentNode"
	],
	[
		"Node",
		"prototype",
		"parentElement"
	],
	[
		"Node",
		"prototype",
		"ownerDocument"
	],
	[
		"Node",
		"prototype",
		"normalize()"
	],
	[
		"Node",
		"prototype",
		"nodeValue"
	],
	[
		"Node",
		"prototype",
		"nodeType"
	],
	[
		"Node",
		"prototype",
		"nodeName"
	],
	[
		"Node",
		"prototype",
		"nextSibling"
	],
	[
		"Node",
		"prototype",
		"lookupPrefix()"
	],
	[
		"Node",
		"prototype",
		"lookupNamespaceURI()"
	],
	[
		"Node",
		"prototype",
		"lastChild"
	],
	[
		"Node",
		"prototype",
		"isSameNode()"
	],
	[
		"Node",
		"prototype",
		"isEqualNode()"
	],
	[
		"Node",
		"prototype",
		"isDefaultNamespace()"
	],
	[
		"Node",
		"prototype",
		"isConnected"
	],
	[
		"Node",
		"prototype",
		"insertBefore()"
	],
	[
		"Node",
		"prototype",
		"hasChildNodes()"
	],
	[
		"Node",
		"prototype",
		"getRootNode()"
	],
	[
		"Node",
		"prototype",
		"firstChild"
	],
	[
		"Node",
		"prototype",
		"contains()"
	],
	[
		"Node",
		"prototype",
		"compareDocumentPosition()"
	],
	[
		"Node",
		"prototype",
		"cloneNode()"
	],
	[
		"Node",
		"prototype",
		"childNodes"
	],
	[
		"Node",
		"prototype",
		"baseURI"
	],
	[
		"Node",
		"prototype",
		"appendChild()"
	],
	[
		"Node",
		"prototype",
		"TEXT_NODE"
	],
	[
		"Node",
		"prototype",
		"PROCESSING_INSTRUCTION_NODE"
	],
	[
		"Node",
		"prototype",
		"NOTATION_NODE"
	],
	[
		"Node",
		"prototype",
		"ENTITY_REFERENCE_NODE"
	],
	[
		"Node",
		"prototype",
		"ENTITY_NODE"
	],
	[
		"Node",
		"prototype",
		"ELEMENT_NODE"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_TYPE_NODE"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_POSITION_PRECEDING"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_POSITION_FOLLOWING"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_POSITION_DISCONNECTED"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_POSITION_CONTAINS"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_POSITION_CONTAINED_BY"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_NODE"
	],
	[
		"Node",
		"prototype",
		"DOCUMENT_FRAGMENT_NODE"
	],
	[
		"Node",
		"prototype",
		"COMMENT_NODE"
	],
	[
		"Node",
		"prototype",
		"CDATA_SECTION_NODE"
	],
	[
		"Node",
		"prototype",
		"ATTRIBUTE_NODE"
	],
	[
		"Node",
		"prototype"
	],
	[
		"Node",
		"TEXT_NODE"
	],
	[
		"Node",
		"PROCESSING_INSTRUCTION_NODE"
	],
	[
		"Node",
		"NOTATION_NODE"
	],
	[
		"Node",
		"ENTITY_REFERENCE_NODE"
	],
	[
		"Node",
		"ENTITY_NODE"
	],
	[
		"Node",
		"ELEMENT_NODE"
	],
	[
		"Node",
		"DOCUMENT_TYPE_NODE"
	],
	[
		"Node",
		"DOCUMENT_POSITION_PRECEDING"
	],
	[
		"Node",
		"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"
	],
	[
		"Node",
		"DOCUMENT_POSITION_FOLLOWING"
	],
	[
		"Node",
		"DOCUMENT_POSITION_DISCONNECTED"
	],
	[
		"Node",
		"DOCUMENT_POSITION_CONTAINS"
	],
	[
		"Node",
		"DOCUMENT_POSITION_CONTAINED_BY"
	],
	[
		"Node",
		"DOCUMENT_NODE"
	],
	[
		"Node",
		"DOCUMENT_FRAGMENT_NODE"
	],
	[
		"Node",
		"COMMENT_NODE"
	],
	[
		"Node",
		"CDATA_SECTION_NODE"
	],
	[
		"Node",
		"ATTRIBUTE_NODE"
	],
	[
		"NodeIterator"
	],
	[
		"NodeIterator",
		"prototype",
		"whatToShow"
	],
	[
		"NodeIterator",
		"prototype",
		"root"
	],
	[
		"NodeIterator",
		"prototype",
		"referenceNode"
	],
	[
		"NodeIterator",
		"prototype",
		"previousNode()"
	],
	[
		"NodeIterator",
		"prototype",
		"pointerBeforeReferenceNode"
	],
	[
		"NodeIterator",
		"prototype",
		"nextNode()"
	],
	[
		"NodeIterator",
		"prototype",
		"filter"
	],
	[
		"NodeIterator",
		"prototype",
		"detach()"
	],
	[
		"NodeIterator",
		"prototype"
	],
	[
		"NodeList"
	],
	[
		"NodeList",
		"prototype",
		"length"
	],
	[
		"NodeList",
		"prototype",
		"item()"
	],
	[
		"NodeList",
		"prototype"
	],
	[
		"Notification"
	],
	[
		"Notification",
		"prototype",
		"vibrate"
	],
	[
		"Notification",
		"prototype",
		"title"
	],
	[
		"Notification",
		"prototype",
		"timestamp"
	],
	[
		"Notification",
		"prototype",
		"tag"
	],
	[
		"Notification",
		"prototype",
		"silent"
	],
	[
		"Notification",
		"prototype",
		"requireInteraction"
	],
	[
		"Notification",
		"prototype",
		"renotify"
	],
	[
		"Notification",
		"prototype",
		"onshow"
	],
	[
		"Notification",
		"prototype",
		"onerror"
	],
	[
		"Notification",
		"prototype",
		"onclose"
	],
	[
		"Notification",
		"prototype",
		"onclick"
	],
	[
		"Notification",
		"prototype",
		"lang"
	],
	[
		"Notification",
		"prototype",
		"image"
	],
	[
		"Notification",
		"prototype",
		"icon"
	],
	[
		"Notification",
		"prototype",
		"dir"
	],
	[
		"Notification",
		"prototype",
		"data"
	],
	[
		"Notification",
		"prototype",
		"close()"
	],
	[
		"Notification",
		"prototype",
		"body"
	],
	[
		"Notification",
		"prototype",
		"badge"
	],
	[
		"Notification",
		"prototype",
		"actions"
	],
	[
		"Notification",
		"prototype"
	],
	[
		"Notification",
		"requestPermission()"
	],
	[
		"Notification",
		"permission"
	],
	[
		"Notification",
		"maxActions"
	],
	[
		"NotificationEvent"
	],
	[
		"NotificationEvent",
		"prototype",
		"notification"
	],
	[
		"NotificationEvent",
		"prototype",
		"action"
	],
	[
		"NotificationEvent",
		"prototype"
	],
	[
		"NotRestoredReasonDetails"
	],
	[
		"NotRestoredReasonDetails",
		"prototype",
		"toJSON()"
	],
	[
		"NotRestoredReasonDetails",
		"prototype",
		"reason"
	],
	[
		"NotRestoredReasonDetails",
		"prototype"
	],
	[
		"NotRestoredReasons"
	],
	[
		"NotRestoredReasons",
		"prototype",
		"url"
	],
	[
		"NotRestoredReasons",
		"prototype",
		"toJSON()"
	],
	[
		"NotRestoredReasons",
		"prototype",
		"src"
	],
	[
		"NotRestoredReasons",
		"prototype",
		"reasons"
	],
	[
		"NotRestoredReasons",
		"prototype",
		"name"
	],
	[
		"NotRestoredReasons",
		"prototype",
		"id"
	],
	[
		"NotRestoredReasons",
		"prototype",
		"children"
	],
	[
		"NotRestoredReasons",
		"prototype"
	],
	[
		"Observable"
	],
	[
		"Observable",
		"prototype",
		"toArray()"
	],
	[
		"Observable",
		"prototype",
		"takeUntil()"
	],
	[
		"Observable",
		"prototype",
		"take()"
	],
	[
		"Observable",
		"prototype",
		"switchMap()"
	],
	[
		"Observable",
		"prototype",
		"subscribe()"
	],
	[
		"Observable",
		"prototype",
		"some()"
	],
	[
		"Observable",
		"prototype",
		"reduce()"
	],
	[
		"Observable",
		"prototype",
		"map()"
	],
	[
		"Observable",
		"prototype",
		"last()"
	],
	[
		"Observable",
		"prototype",
		"inspect()"
	],
	[
		"Observable",
		"prototype",
		"forEach()"
	],
	[
		"Observable",
		"prototype",
		"flatMap()"
	],
	[
		"Observable",
		"prototype",
		"first()"
	],
	[
		"Observable",
		"prototype",
		"find()"
	],
	[
		"Observable",
		"prototype",
		"finally()"
	],
	[
		"Observable",
		"prototype",
		"filter()"
	],
	[
		"Observable",
		"prototype",
		"every()"
	],
	[
		"Observable",
		"prototype",
		"drop()"
	],
	[
		"Observable",
		"prototype",
		"catch()"
	],
	[
		"Observable",
		"prototype"
	],
	[
		"Observable",
		"from()"
	],
	[
		"OES_draw_buffers_indexed"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype",
		"enableiOES()"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype",
		"disableiOES()"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype",
		"colorMaskiOES()"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype",
		"blendFunciOES()"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype",
		"blendFuncSeparateiOES()"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype",
		"blendEquationiOES()"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype",
		"blendEquationSeparateiOES()"
	],
	[
		"OES_draw_buffers_indexed",
		"prototype"
	],
	[
		"OES_element_index_uint"
	],
	[
		"OES_element_index_uint",
		"prototype"
	],
	[
		"OES_fbo_render_mipmap"
	],
	[
		"OES_fbo_render_mipmap",
		"prototype"
	],
	[
		"OES_standard_derivatives"
	],
	[
		"OES_standard_derivatives",
		"prototype",
		"FRAGMENT_SHADER_DERIVATIVE_HINT_OES"
	],
	[
		"OES_standard_derivatives",
		"prototype"
	],
	[
		"OES_standard_derivatives",
		"FRAGMENT_SHADER_DERIVATIVE_HINT_OES"
	],
	[
		"OES_texture_float"
	],
	[
		"OES_texture_float",
		"prototype"
	],
	[
		"OES_texture_float_linear"
	],
	[
		"OES_texture_float_linear",
		"prototype"
	],
	[
		"OES_texture_half_float"
	],
	[
		"OES_texture_half_float",
		"prototype",
		"HALF_FLOAT_OES"
	],
	[
		"OES_texture_half_float",
		"prototype"
	],
	[
		"OES_texture_half_float",
		"HALF_FLOAT_OES"
	],
	[
		"OES_texture_half_float_linear"
	],
	[
		"OES_texture_half_float_linear",
		"prototype"
	],
	[
		"OES_vertex_array_object"
	],
	[
		"OES_vertex_array_object",
		"prototype",
		"isVertexArrayOES()"
	],
	[
		"OES_vertex_array_object",
		"prototype",
		"deleteVertexArrayOES()"
	],
	[
		"OES_vertex_array_object",
		"prototype",
		"createVertexArrayOES()"
	],
	[
		"OES_vertex_array_object",
		"prototype",
		"bindVertexArrayOES()"
	],
	[
		"OES_vertex_array_object",
		"prototype",
		"VERTEX_ARRAY_BINDING_OES"
	],
	[
		"OES_vertex_array_object",
		"prototype"
	],
	[
		"OES_vertex_array_object",
		"VERTEX_ARRAY_BINDING_OES"
	],
	[
		"OfflineAudioCompletionEvent"
	],
	[
		"OfflineAudioCompletionEvent",
		"prototype",
		"renderedBuffer"
	],
	[
		"OfflineAudioCompletionEvent",
		"prototype"
	],
	[
		"OfflineAudioContext"
	],
	[
		"OfflineAudioContext",
		"prototype",
		"suspend()"
	],
	[
		"OfflineAudioContext",
		"prototype",
		"startRendering()"
	],
	[
		"OfflineAudioContext",
		"prototype",
		"resume()"
	],
	[
		"OfflineAudioContext",
		"prototype",
		"oncomplete"
	],
	[
		"OfflineAudioContext",
		"prototype",
		"length"
	],
	[
		"OfflineAudioContext",
		"prototype"
	],
	[
		"OffscreenCanvas"
	],
	[
		"OffscreenCanvas",
		"prototype",
		"width"
	],
	[
		"OffscreenCanvas",
		"prototype",
		"transferToImageBitmap()"
	],
	[
		"OffscreenCanvas",
		"prototype",
		"oncontextrestored"
	],
	[
		"OffscreenCanvas",
		"prototype",
		"oncontextlost"
	],
	[
		"OffscreenCanvas",
		"prototype",
		"height"
	],
	[
		"OffscreenCanvas",
		"prototype",
		"getContext()"
	],
	[
		"OffscreenCanvas",
		"prototype",
		"convertToBlob()"
	],
	[
		"OffscreenCanvas",
		"prototype"
	],
	[
		"OffscreenCanvasRenderingContext2D"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"wordSpacing"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"translate()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"transform()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"textRendering"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"textBaseline"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"textAlign"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"strokeText()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"strokeStyle"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"strokeRect()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"stroke()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"shadowOffsetY"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"shadowOffsetX"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"shadowColor"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"shadowBlur"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"setTransform()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"setLineDash()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"scale()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"save()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"roundRect()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"rotate()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"restore()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"resetTransform()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"reset()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"rect()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"quadraticCurveTo()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"putImageData()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"moveTo()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"miterLimit"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"measureText()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"lineWidth"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"lineTo()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"lineJoin"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"lineDashOffset"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"lineCap"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"letterSpacing"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"isPointInStroke()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"isPointInPath()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"isContextLost()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"imageSmoothingQuality"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"imageSmoothingEnabled"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"globalCompositeOperation"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"globalAlpha"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"getTransform()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"getLineDash()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"getImageData()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"fontVariantCaps"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"fontStretch"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"fontKerning"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"font"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"filter"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"fillText()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"fillStyle"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"fillRect()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"fill()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"ellipse()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"drawImage()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"direction"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"createRadialGradient()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"createPattern()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"createLinearGradient()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"createImageData()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"createConicGradient()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"closePath()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"clip()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"clearRect()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"canvas"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"bezierCurveTo()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"beginPath()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"arcTo()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype",
		"arc()"
	],
	[
		"OffscreenCanvasRenderingContext2D",
		"prototype"
	],
	[
		"OrientationSensor"
	],
	[
		"OrientationSensor",
		"prototype",
		"quaternion"
	],
	[
		"OrientationSensor",
		"prototype",
		"populateMatrix()"
	],
	[
		"OrientationSensor",
		"prototype"
	],
	[
		"OscillatorNode"
	],
	[
		"OscillatorNode",
		"prototype",
		"type"
	],
	[
		"OscillatorNode",
		"prototype",
		"setPeriodicWave()"
	],
	[
		"OscillatorNode",
		"prototype",
		"frequency"
	],
	[
		"OscillatorNode",
		"prototype",
		"detune"
	],
	[
		"OscillatorNode",
		"prototype"
	],
	[
		"OTPCredential"
	],
	[
		"OTPCredential",
		"prototype",
		"code"
	],
	[
		"OTPCredential",
		"prototype"
	],
	[
		"OverconstrainedError"
	],
	[
		"OverconstrainedError",
		"prototype",
		"constraint"
	],
	[
		"OverconstrainedError",
		"prototype"
	],
	[
		"OVR_multiview2"
	],
	[
		"OVR_multiview2",
		"prototype",
		"framebufferTextureMultiviewOVR()"
	],
	[
		"OVR_multiview2",
		"prototype",
		"MAX_VIEWS_OVR"
	],
	[
		"OVR_multiview2",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR"
	],
	[
		"OVR_multiview2",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR"
	],
	[
		"OVR_multiview2",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR"
	],
	[
		"OVR_multiview2",
		"prototype"
	],
	[
		"OVR_multiview2",
		"MAX_VIEWS_OVR"
	],
	[
		"OVR_multiview2",
		"FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR"
	],
	[
		"OVR_multiview2",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR"
	],
	[
		"OVR_multiview2",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR"
	],
	[
		"PageRevealEvent"
	],
	[
		"PageRevealEvent",
		"prototype",
		"viewTransition"
	],
	[
		"PageRevealEvent",
		"prototype"
	],
	[
		"PageSwapEvent"
	],
	[
		"PageSwapEvent",
		"prototype",
		"viewTransition"
	],
	[
		"PageSwapEvent",
		"prototype",
		"activation"
	],
	[
		"PageSwapEvent",
		"prototype"
	],
	[
		"PageTransitionEvent"
	],
	[
		"PageTransitionEvent",
		"prototype",
		"persisted"
	],
	[
		"PageTransitionEvent",
		"prototype"
	],
	[
		"PaintRenderingContext2D"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"translate()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"transform()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"strokeStyle"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"strokeRect()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"stroke()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"shadowOffsetY"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"shadowOffsetX"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"shadowColor"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"shadowBlur"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"setTransform()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"setLineDash()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"scale()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"save()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"roundRect()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"rotate()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"restore()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"resetTransform()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"reset()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"rect()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"quadraticCurveTo()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"moveTo()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"miterLimit"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"lineWidth"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"lineTo()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"lineJoin"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"lineDashOffset"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"lineCap"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"isPointInStroke()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"isPointInPath()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"isContextLost()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"imageSmoothingQuality"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"imageSmoothingEnabled"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"globalCompositeOperation"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"globalAlpha"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"getTransform()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"getLineDash()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"fillStyle"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"fillRect()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"fill()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"ellipse()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"drawImage()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"createRadialGradient()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"createPattern()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"createLinearGradient()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"createConicGradient()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"closePath()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"clip()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"clearRect()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"bezierCurveTo()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"beginPath()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"arcTo()"
	],
	[
		"PaintRenderingContext2D",
		"prototype",
		"arc()"
	],
	[
		"PaintRenderingContext2D",
		"prototype"
	],
	[
		"PaintSize"
	],
	[
		"PaintSize",
		"prototype",
		"width"
	],
	[
		"PaintSize",
		"prototype",
		"height"
	],
	[
		"PaintSize",
		"prototype"
	],
	[
		"PaintWorkletGlobalScope"
	],
	[
		"PaintWorkletGlobalScope",
		"prototype",
		"registerPaint()"
	],
	[
		"PaintWorkletGlobalScope",
		"prototype",
		"devicePixelRatio"
	],
	[
		"PaintWorkletGlobalScope",
		"prototype"
	],
	[
		"PannerNode"
	],
	[
		"PannerNode",
		"prototype",
		"setPosition()"
	],
	[
		"PannerNode",
		"prototype",
		"setOrientation()"
	],
	[
		"PannerNode",
		"prototype",
		"rolloffFactor"
	],
	[
		"PannerNode",
		"prototype",
		"refDistance"
	],
	[
		"PannerNode",
		"prototype",
		"positionZ"
	],
	[
		"PannerNode",
		"prototype",
		"positionY"
	],
	[
		"PannerNode",
		"prototype",
		"positionX"
	],
	[
		"PannerNode",
		"prototype",
		"panningModel"
	],
	[
		"PannerNode",
		"prototype",
		"orientationZ"
	],
	[
		"PannerNode",
		"prototype",
		"orientationY"
	],
	[
		"PannerNode",
		"prototype",
		"orientationX"
	],
	[
		"PannerNode",
		"prototype",
		"maxDistance"
	],
	[
		"PannerNode",
		"prototype",
		"distanceModel"
	],
	[
		"PannerNode",
		"prototype",
		"coneOuterGain"
	],
	[
		"PannerNode",
		"prototype",
		"coneOuterAngle"
	],
	[
		"PannerNode",
		"prototype",
		"coneInnerAngle"
	],
	[
		"PannerNode",
		"prototype"
	],
	[
		"PasswordCredential"
	],
	[
		"PasswordCredential",
		"prototype",
		"password"
	],
	[
		"PasswordCredential",
		"prototype",
		"name"
	],
	[
		"PasswordCredential",
		"prototype",
		"iconURL"
	],
	[
		"PasswordCredential",
		"prototype"
	],
	[
		"Path2D"
	],
	[
		"Path2D",
		"prototype",
		"roundRect()"
	],
	[
		"Path2D",
		"prototype",
		"rect()"
	],
	[
		"Path2D",
		"prototype",
		"quadraticCurveTo()"
	],
	[
		"Path2D",
		"prototype",
		"moveTo()"
	],
	[
		"Path2D",
		"prototype",
		"lineTo()"
	],
	[
		"Path2D",
		"prototype",
		"ellipse()"
	],
	[
		"Path2D",
		"prototype",
		"closePath()"
	],
	[
		"Path2D",
		"prototype",
		"bezierCurveTo()"
	],
	[
		"Path2D",
		"prototype",
		"arcTo()"
	],
	[
		"Path2D",
		"prototype",
		"arc()"
	],
	[
		"Path2D",
		"prototype",
		"addPath()"
	],
	[
		"Path2D",
		"prototype"
	],
	[
		"PaymentManager"
	],
	[
		"PaymentManager",
		"prototype",
		"userHint"
	],
	[
		"PaymentManager",
		"prototype",
		"enableDelegations()"
	],
	[
		"PaymentManager",
		"prototype"
	],
	[
		"PaymentMethodChangeEvent"
	],
	[
		"PaymentMethodChangeEvent",
		"prototype",
		"methodName"
	],
	[
		"PaymentMethodChangeEvent",
		"prototype",
		"methodDetails"
	],
	[
		"PaymentMethodChangeEvent",
		"prototype"
	],
	[
		"PaymentRequest"
	],
	[
		"PaymentRequest",
		"prototype",
		"show()"
	],
	[
		"PaymentRequest",
		"prototype",
		"shippingType"
	],
	[
		"PaymentRequest",
		"prototype",
		"shippingOption"
	],
	[
		"PaymentRequest",
		"prototype",
		"shippingAddress"
	],
	[
		"PaymentRequest",
		"prototype",
		"onshippingoptionchange"
	],
	[
		"PaymentRequest",
		"prototype",
		"onshippingaddresschange"
	],
	[
		"PaymentRequest",
		"prototype",
		"onpaymentmethodchange"
	],
	[
		"PaymentRequest",
		"prototype",
		"id"
	],
	[
		"PaymentRequest",
		"prototype",
		"canMakePayment()"
	],
	[
		"PaymentRequest",
		"prototype",
		"abort()"
	],
	[
		"PaymentRequest",
		"prototype"
	],
	[
		"PaymentRequest",
		"isSecurePaymentConfirmationAvailable()"
	],
	[
		"PaymentRequestEvent"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"total"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"topOrigin"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"shippingOptions"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"respondWith()"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"paymentRequestOrigin"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"paymentRequestId"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"paymentOptions"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"openWindow()"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"modifiers"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"methodData"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"changeShippingOption()"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"changeShippingAddress()"
	],
	[
		"PaymentRequestEvent",
		"prototype",
		"changePaymentMethod()"
	],
	[
		"PaymentRequestEvent",
		"prototype"
	],
	[
		"PaymentRequestUpdateEvent"
	],
	[
		"PaymentRequestUpdateEvent",
		"prototype",
		"updateWith()"
	],
	[
		"PaymentRequestUpdateEvent",
		"prototype"
	],
	[
		"PaymentResponse"
	],
	[
		"PaymentResponse",
		"prototype",
		"toJSON()"
	],
	[
		"PaymentResponse",
		"prototype",
		"shippingOption"
	],
	[
		"PaymentResponse",
		"prototype",
		"shippingAddress"
	],
	[
		"PaymentResponse",
		"prototype",
		"retry()"
	],
	[
		"PaymentResponse",
		"prototype",
		"requestId"
	],
	[
		"PaymentResponse",
		"prototype",
		"payerPhone"
	],
	[
		"PaymentResponse",
		"prototype",
		"payerName"
	],
	[
		"PaymentResponse",
		"prototype",
		"payerEmail"
	],
	[
		"PaymentResponse",
		"prototype",
		"onpayerdetailchange"
	],
	[
		"PaymentResponse",
		"prototype",
		"methodName"
	],
	[
		"PaymentResponse",
		"prototype",
		"details"
	],
	[
		"PaymentResponse",
		"prototype",
		"complete()"
	],
	[
		"PaymentResponse",
		"prototype"
	],
	[
		"PendingBeacon"
	],
	[
		"PendingBeacon",
		"prototype",
		"url"
	],
	[
		"PendingBeacon",
		"prototype",
		"timeout"
	],
	[
		"PendingBeacon",
		"prototype",
		"sendNow()"
	],
	[
		"PendingBeacon",
		"prototype",
		"pending"
	],
	[
		"PendingBeacon",
		"prototype",
		"method"
	],
	[
		"PendingBeacon",
		"prototype",
		"deactivate()"
	],
	[
		"PendingBeacon",
		"prototype",
		"backgroundTimeout"
	],
	[
		"PendingBeacon",
		"prototype"
	],
	[
		"PendingGetBeacon"
	],
	[
		"PendingGetBeacon",
		"prototype",
		"setURL()"
	],
	[
		"PendingGetBeacon",
		"prototype"
	],
	[
		"PendingPostBeacon"
	],
	[
		"PendingPostBeacon",
		"prototype",
		"setData()"
	],
	[
		"PendingPostBeacon",
		"prototype"
	],
	[
		"Performance"
	],
	[
		"Performance",
		"prototype",
		"toJSON()"
	],
	[
		"Performance",
		"prototype",
		"timing"
	],
	[
		"Performance",
		"prototype",
		"timeOrigin"
	],
	[
		"Performance",
		"prototype",
		"setResourceTimingBufferSize()"
	],
	[
		"Performance",
		"prototype",
		"onresourcetimingbufferfull"
	],
	[
		"Performance",
		"prototype",
		"now()"
	],
	[
		"Performance",
		"prototype",
		"navigation"
	],
	[
		"Performance",
		"prototype",
		"measureUserAgentSpecificMemory()"
	],
	[
		"Performance",
		"prototype",
		"measure()"
	],
	[
		"Performance",
		"prototype",
		"mark()"
	],
	[
		"Performance",
		"prototype",
		"interactionCount"
	],
	[
		"Performance",
		"prototype",
		"getEntriesByType()"
	],
	[
		"Performance",
		"prototype",
		"getEntriesByName()"
	],
	[
		"Performance",
		"prototype",
		"getEntries()"
	],
	[
		"Performance",
		"prototype",
		"eventCounts"
	],
	[
		"Performance",
		"prototype",
		"clearResourceTimings()"
	],
	[
		"Performance",
		"prototype",
		"clearMeasures()"
	],
	[
		"Performance",
		"prototype",
		"clearMarks()"
	],
	[
		"Performance",
		"prototype"
	],
	[
		"PerformanceElementTiming"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"url"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"renderTime"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"naturalWidth"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"naturalHeight"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"loadTime"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"intersectionRect"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"identifier"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"id"
	],
	[
		"PerformanceElementTiming",
		"prototype",
		"element"
	],
	[
		"PerformanceElementTiming",
		"prototype"
	],
	[
		"PerformanceEntry"
	],
	[
		"PerformanceEntry",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceEntry",
		"prototype",
		"startTime"
	],
	[
		"PerformanceEntry",
		"prototype",
		"navigationId"
	],
	[
		"PerformanceEntry",
		"prototype",
		"name"
	],
	[
		"PerformanceEntry",
		"prototype",
		"id"
	],
	[
		"PerformanceEntry",
		"prototype",
		"entryType"
	],
	[
		"PerformanceEntry",
		"prototype",
		"duration"
	],
	[
		"PerformanceEntry",
		"prototype"
	],
	[
		"PerformanceEventTiming"
	],
	[
		"PerformanceEventTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceEventTiming",
		"prototype",
		"target"
	],
	[
		"PerformanceEventTiming",
		"prototype",
		"processingStart"
	],
	[
		"PerformanceEventTiming",
		"prototype",
		"processingEnd"
	],
	[
		"PerformanceEventTiming",
		"prototype",
		"interactionId"
	],
	[
		"PerformanceEventTiming",
		"prototype",
		"cancelable"
	],
	[
		"PerformanceEventTiming",
		"prototype"
	],
	[
		"PerformanceLongAnimationFrameTiming"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"styleAndLayoutStart"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"startTime"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"scripts"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"renderStart"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"name"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"firstUIEventTimestamp"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"entryType"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"duration"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype",
		"blockingDuration"
	],
	[
		"PerformanceLongAnimationFrameTiming",
		"prototype"
	],
	[
		"PerformanceLongTaskTiming"
	],
	[
		"PerformanceLongTaskTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceLongTaskTiming",
		"prototype",
		"startTime"
	],
	[
		"PerformanceLongTaskTiming",
		"prototype",
		"name"
	],
	[
		"PerformanceLongTaskTiming",
		"prototype",
		"entryType"
	],
	[
		"PerformanceLongTaskTiming",
		"prototype",
		"duration"
	],
	[
		"PerformanceLongTaskTiming",
		"prototype",
		"attribution"
	],
	[
		"PerformanceLongTaskTiming",
		"prototype"
	],
	[
		"PerformanceMark"
	],
	[
		"PerformanceMark",
		"prototype",
		"detail"
	],
	[
		"PerformanceMark",
		"prototype"
	],
	[
		"PerformanceMeasure"
	],
	[
		"PerformanceMeasure",
		"prototype",
		"detail"
	],
	[
		"PerformanceMeasure",
		"prototype"
	],
	[
		"PerformanceNavigation"
	],
	[
		"PerformanceNavigation",
		"prototype",
		"type"
	],
	[
		"PerformanceNavigation",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceNavigation",
		"prototype",
		"redirectCount"
	],
	[
		"PerformanceNavigation",
		"prototype",
		"TYPE_RESERVED"
	],
	[
		"PerformanceNavigation",
		"prototype",
		"TYPE_RELOAD"
	],
	[
		"PerformanceNavigation",
		"prototype",
		"TYPE_NAVIGATE"
	],
	[
		"PerformanceNavigation",
		"prototype",
		"TYPE_BACK_FORWARD"
	],
	[
		"PerformanceNavigation",
		"prototype"
	],
	[
		"PerformanceNavigation",
		"TYPE_RESERVED"
	],
	[
		"PerformanceNavigation",
		"TYPE_RELOAD"
	],
	[
		"PerformanceNavigation",
		"TYPE_NAVIGATE"
	],
	[
		"PerformanceNavigation",
		"TYPE_BACK_FORWARD"
	],
	[
		"PerformanceNavigationTiming"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"unloadEventStart"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"unloadEventEnd"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"type"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"redirectCount"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"notRestoredReasons"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"loadEventStart"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"loadEventEnd"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"domInteractive"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"domContentLoadedEventStart"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"domContentLoadedEventEnd"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"domComplete"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"criticalCHRestart"
	],
	[
		"PerformanceNavigationTiming",
		"prototype",
		"activationStart"
	],
	[
		"PerformanceNavigationTiming",
		"prototype"
	],
	[
		"PerformanceObserver"
	],
	[
		"PerformanceObserver",
		"prototype",
		"takeRecords()"
	],
	[
		"PerformanceObserver",
		"prototype",
		"observe()"
	],
	[
		"PerformanceObserver",
		"prototype",
		"disconnect()"
	],
	[
		"PerformanceObserver",
		"prototype"
	],
	[
		"PerformanceObserver",
		"supportedEntryTypes"
	],
	[
		"PerformanceObserverEntryList"
	],
	[
		"PerformanceObserverEntryList",
		"prototype",
		"getEntriesByType()"
	],
	[
		"PerformanceObserverEntryList",
		"prototype",
		"getEntriesByName()"
	],
	[
		"PerformanceObserverEntryList",
		"prototype",
		"getEntries()"
	],
	[
		"PerformanceObserverEntryList",
		"prototype"
	],
	[
		"PerformancePaintTiming"
	],
	[
		"PerformancePaintTiming",
		"prototype"
	],
	[
		"PerformanceResourceTiming"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"workerStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"transferSize"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"serverTiming"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"secureConnectionStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"responseStatus"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"responseStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"responseEnd"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"requestStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"renderBlockingStatus"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"redirectStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"redirectEnd"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"nextHopProtocol"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"initiatorType"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"firstInterimResponseStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"fetchStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"encodedBodySize"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"domainLookupStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"domainLookupEnd"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"deliveryType"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"decodedBodySize"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"contentType"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"connectStart"
	],
	[
		"PerformanceResourceTiming",
		"prototype",
		"connectEnd"
	],
	[
		"PerformanceResourceTiming",
		"prototype"
	],
	[
		"PerformanceScriptTiming"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"windowAttribution"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"window"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"startTime"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"sourceURL"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"sourceFunctionName"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"sourceCharPosition"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"pauseDuration"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"name"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"invokerType"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"invoker"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"forcedStyleAndLayoutDuration"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"executionStart"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"entryType"
	],
	[
		"PerformanceScriptTiming",
		"prototype",
		"duration"
	],
	[
		"PerformanceScriptTiming",
		"prototype"
	],
	[
		"PerformanceServerTiming"
	],
	[
		"PerformanceServerTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceServerTiming",
		"prototype",
		"name"
	],
	[
		"PerformanceServerTiming",
		"prototype",
		"duration"
	],
	[
		"PerformanceServerTiming",
		"prototype",
		"description"
	],
	[
		"PerformanceServerTiming",
		"prototype"
	],
	[
		"PerformanceTiming"
	],
	[
		"PerformanceTiming",
		"prototype",
		"unloadEventStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"unloadEventEnd"
	],
	[
		"PerformanceTiming",
		"prototype",
		"toJSON()"
	],
	[
		"PerformanceTiming",
		"prototype",
		"secureConnectionStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"responseStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"responseEnd"
	],
	[
		"PerformanceTiming",
		"prototype",
		"requestStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"redirectStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"redirectEnd"
	],
	[
		"PerformanceTiming",
		"prototype",
		"navigationStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"loadEventStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"loadEventEnd"
	],
	[
		"PerformanceTiming",
		"prototype",
		"fetchStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"domainLookupStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"domainLookupEnd"
	],
	[
		"PerformanceTiming",
		"prototype",
		"domLoading"
	],
	[
		"PerformanceTiming",
		"prototype",
		"domInteractive"
	],
	[
		"PerformanceTiming",
		"prototype",
		"domContentLoadedEventStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"domContentLoadedEventEnd"
	],
	[
		"PerformanceTiming",
		"prototype",
		"domComplete"
	],
	[
		"PerformanceTiming",
		"prototype",
		"connectStart"
	],
	[
		"PerformanceTiming",
		"prototype",
		"connectEnd"
	],
	[
		"PerformanceTiming",
		"prototype"
	],
	[
		"PeriodicSyncEvent"
	],
	[
		"PeriodicSyncEvent",
		"prototype",
		"tag"
	],
	[
		"PeriodicSyncEvent",
		"prototype"
	],
	[
		"PeriodicSyncManager"
	],
	[
		"PeriodicSyncManager",
		"prototype",
		"unregister()"
	],
	[
		"PeriodicSyncManager",
		"prototype",
		"register()"
	],
	[
		"PeriodicSyncManager",
		"prototype",
		"getTags()"
	],
	[
		"PeriodicSyncManager",
		"prototype"
	],
	[
		"PeriodicWave"
	],
	[
		"PeriodicWave",
		"prototype"
	],
	[
		"Permissions"
	],
	[
		"Permissions",
		"prototype",
		"revoke()"
	],
	[
		"Permissions",
		"prototype",
		"request()"
	],
	[
		"Permissions",
		"prototype",
		"query()"
	],
	[
		"Permissions",
		"prototype"
	],
	[
		"PermissionsPolicy"
	],
	[
		"PermissionsPolicy",
		"prototype",
		"getAllowlistForFeature()"
	],
	[
		"PermissionsPolicy",
		"prototype",
		"features()"
	],
	[
		"PermissionsPolicy",
		"prototype",
		"allowsFeature()"
	],
	[
		"PermissionsPolicy",
		"prototype",
		"allowedFeatures()"
	],
	[
		"PermissionsPolicy",
		"prototype"
	],
	[
		"PermissionsPolicyViolationReportBody"
	],
	[
		"PermissionsPolicyViolationReportBody",
		"prototype",
		"toJSON()"
	],
	[
		"PermissionsPolicyViolationReportBody",
		"prototype",
		"sourceFile"
	],
	[
		"PermissionsPolicyViolationReportBody",
		"prototype",
		"lineNumber"
	],
	[
		"PermissionsPolicyViolationReportBody",
		"prototype",
		"featureId"
	],
	[
		"PermissionsPolicyViolationReportBody",
		"prototype",
		"disposition"
	],
	[
		"PermissionsPolicyViolationReportBody",
		"prototype",
		"columnNumber"
	],
	[
		"PermissionsPolicyViolationReportBody",
		"prototype"
	],
	[
		"PermissionStatus"
	],
	[
		"PermissionStatus",
		"prototype",
		"state"
	],
	[
		"PermissionStatus",
		"prototype",
		"onchange"
	],
	[
		"PermissionStatus",
		"prototype",
		"name"
	],
	[
		"PermissionStatus",
		"prototype"
	],
	[
		"PictureInPictureEvent"
	],
	[
		"PictureInPictureEvent",
		"prototype",
		"pictureInPictureWindow"
	],
	[
		"PictureInPictureEvent",
		"prototype"
	],
	[
		"PictureInPictureWindow"
	],
	[
		"PictureInPictureWindow",
		"prototype",
		"width"
	],
	[
		"PictureInPictureWindow",
		"prototype",
		"onresize"
	],
	[
		"PictureInPictureWindow",
		"prototype",
		"height"
	],
	[
		"PictureInPictureWindow",
		"prototype"
	],
	[
		"Plugin"
	],
	[
		"Plugin",
		"prototype",
		"namedItem()"
	],
	[
		"Plugin",
		"prototype",
		"name"
	],
	[
		"Plugin",
		"prototype",
		"length"
	],
	[
		"Plugin",
		"prototype",
		"item()"
	],
	[
		"Plugin",
		"prototype",
		"filename"
	],
	[
		"Plugin",
		"prototype",
		"description"
	],
	[
		"Plugin",
		"prototype"
	],
	[
		"PluginArray"
	],
	[
		"PluginArray",
		"prototype",
		"refresh()"
	],
	[
		"PluginArray",
		"prototype",
		"namedItem()"
	],
	[
		"PluginArray",
		"prototype",
		"length"
	],
	[
		"PluginArray",
		"prototype",
		"item()"
	],
	[
		"PluginArray",
		"prototype"
	],
	[
		"PointerEvent"
	],
	[
		"PointerEvent",
		"prototype",
		"width"
	],
	[
		"PointerEvent",
		"prototype",
		"twist"
	],
	[
		"PointerEvent",
		"prototype",
		"tiltY"
	],
	[
		"PointerEvent",
		"prototype",
		"tiltX"
	],
	[
		"PointerEvent",
		"prototype",
		"tangentialPressure"
	],
	[
		"PointerEvent",
		"prototype",
		"pressure"
	],
	[
		"PointerEvent",
		"prototype",
		"pointerType"
	],
	[
		"PointerEvent",
		"prototype",
		"pointerId"
	],
	[
		"PointerEvent",
		"prototype",
		"persistentDeviceId"
	],
	[
		"PointerEvent",
		"prototype",
		"isPrimary"
	],
	[
		"PointerEvent",
		"prototype",
		"height"
	],
	[
		"PointerEvent",
		"prototype",
		"getPredictedEvents()"
	],
	[
		"PointerEvent",
		"prototype",
		"getCoalescedEvents()"
	],
	[
		"PointerEvent",
		"prototype",
		"azimuthAngle"
	],
	[
		"PointerEvent",
		"prototype",
		"altitudeAngle"
	],
	[
		"PointerEvent",
		"prototype"
	],
	[
		"PopStateEvent"
	],
	[
		"PopStateEvent",
		"prototype",
		"state"
	],
	[
		"PopStateEvent",
		"prototype",
		"hasUAVisualTransition"
	],
	[
		"PopStateEvent",
		"prototype"
	],
	[
		"PortalActivateEvent"
	],
	[
		"PortalActivateEvent",
		"prototype",
		"data"
	],
	[
		"PortalActivateEvent",
		"prototype",
		"adoptPredecessor()"
	],
	[
		"PortalActivateEvent",
		"prototype"
	],
	[
		"PortalHost"
	],
	[
		"PortalHost",
		"prototype",
		"postMessage()"
	],
	[
		"PortalHost",
		"prototype",
		"onmessageerror"
	],
	[
		"PortalHost",
		"prototype",
		"onmessage"
	],
	[
		"PortalHost",
		"prototype"
	],
	[
		"Presentation"
	],
	[
		"Presentation",
		"prototype",
		"receiver"
	],
	[
		"Presentation",
		"prototype",
		"defaultRequest"
	],
	[
		"Presentation",
		"prototype"
	],
	[
		"PresentationAvailability"
	],
	[
		"PresentationAvailability",
		"prototype",
		"value"
	],
	[
		"PresentationAvailability",
		"prototype",
		"onchange"
	],
	[
		"PresentationAvailability",
		"prototype"
	],
	[
		"PresentationConnection"
	],
	[
		"PresentationConnection",
		"prototype",
		"url"
	],
	[
		"PresentationConnection",
		"prototype",
		"terminate()"
	],
	[
		"PresentationConnection",
		"prototype",
		"state"
	],
	[
		"PresentationConnection",
		"prototype",
		"send()"
	],
	[
		"PresentationConnection",
		"prototype",
		"onterminate"
	],
	[
		"PresentationConnection",
		"prototype",
		"onmessage"
	],
	[
		"PresentationConnection",
		"prototype",
		"onconnect"
	],
	[
		"PresentationConnection",
		"prototype",
		"onclose"
	],
	[
		"PresentationConnection",
		"prototype",
		"id"
	],
	[
		"PresentationConnection",
		"prototype",
		"close()"
	],
	[
		"PresentationConnection",
		"prototype",
		"binaryType"
	],
	[
		"PresentationConnection",
		"prototype"
	],
	[
		"PresentationConnectionAvailableEvent"
	],
	[
		"PresentationConnectionAvailableEvent",
		"prototype",
		"connection"
	],
	[
		"PresentationConnectionAvailableEvent",
		"prototype"
	],
	[
		"PresentationConnectionCloseEvent"
	],
	[
		"PresentationConnectionCloseEvent",
		"prototype",
		"reason"
	],
	[
		"PresentationConnectionCloseEvent",
		"prototype",
		"message"
	],
	[
		"PresentationConnectionCloseEvent",
		"prototype"
	],
	[
		"PresentationConnectionList"
	],
	[
		"PresentationConnectionList",
		"prototype",
		"onconnectionavailable"
	],
	[
		"PresentationConnectionList",
		"prototype",
		"connections"
	],
	[
		"PresentationConnectionList",
		"prototype"
	],
	[
		"PresentationReceiver"
	],
	[
		"PresentationReceiver",
		"prototype",
		"connectionList"
	],
	[
		"PresentationReceiver",
		"prototype"
	],
	[
		"PresentationRequest"
	],
	[
		"PresentationRequest",
		"prototype",
		"start()"
	],
	[
		"PresentationRequest",
		"prototype",
		"reconnect()"
	],
	[
		"PresentationRequest",
		"prototype",
		"onconnectionavailable"
	],
	[
		"PresentationRequest",
		"prototype",
		"getAvailability()"
	],
	[
		"PresentationRequest",
		"prototype"
	],
	[
		"PressureObserver"
	],
	[
		"PressureObserver",
		"prototype",
		"unobserve()"
	],
	[
		"PressureObserver",
		"prototype",
		"takeRecords()"
	],
	[
		"PressureObserver",
		"prototype",
		"observe()"
	],
	[
		"PressureObserver",
		"prototype",
		"disconnect()"
	],
	[
		"PressureObserver",
		"prototype"
	],
	[
		"PressureObserver",
		"knownSources"
	],
	[
		"PressureRecord"
	],
	[
		"PressureRecord",
		"prototype",
		"toJSON()"
	],
	[
		"PressureRecord",
		"prototype",
		"time"
	],
	[
		"PressureRecord",
		"prototype",
		"state"
	],
	[
		"PressureRecord",
		"prototype",
		"source"
	],
	[
		"PressureRecord",
		"prototype"
	],
	[
		"PrivateAggregation"
	],
	[
		"PrivateAggregation",
		"prototype",
		"enableDebugMode()"
	],
	[
		"PrivateAggregation",
		"prototype",
		"contributeToHistogramOnEvent()"
	],
	[
		"PrivateAggregation",
		"prototype",
		"contributeToHistogram()"
	],
	[
		"PrivateAggregation",
		"prototype"
	],
	[
		"Privilege"
	],
	[
		"Privilege",
		"prototype",
		"delegate()"
	],
	[
		"Privilege",
		"prototype",
		"combine()"
	],
	[
		"Privilege",
		"prototype",
		"asLabel()"
	],
	[
		"Privilege",
		"prototype"
	],
	[
		"Privilege",
		"FreshPrivilege()"
	],
	[
		"ProcessingInstruction"
	],
	[
		"ProcessingInstruction",
		"prototype",
		"target"
	],
	[
		"ProcessingInstruction",
		"prototype",
		"sheet"
	],
	[
		"ProcessingInstruction",
		"prototype"
	],
	[
		"Profiler"
	],
	[
		"Profiler",
		"prototype",
		"stopped"
	],
	[
		"Profiler",
		"prototype",
		"stop()"
	],
	[
		"Profiler",
		"prototype",
		"sampleInterval"
	],
	[
		"Profiler",
		"prototype"
	],
	[
		"ProgressEvent"
	],
	[
		"ProgressEvent",
		"prototype",
		"total"
	],
	[
		"ProgressEvent",
		"prototype",
		"loaded"
	],
	[
		"ProgressEvent",
		"prototype",
		"lengthComputable"
	],
	[
		"ProgressEvent",
		"prototype"
	],
	[
		"PromiseRejectionEvent"
	],
	[
		"PromiseRejectionEvent",
		"prototype",
		"reason"
	],
	[
		"PromiseRejectionEvent",
		"prototype",
		"promise"
	],
	[
		"PromiseRejectionEvent",
		"prototype"
	],
	[
		"ProtectedAudience"
	],
	[
		"ProtectedAudience",
		"prototype",
		"queryFeatureSupport()"
	],
	[
		"ProtectedAudience",
		"prototype"
	],
	[
		"ProximitySensor"
	],
	[
		"ProximitySensor",
		"prototype",
		"near"
	],
	[
		"ProximitySensor",
		"prototype",
		"max"
	],
	[
		"ProximitySensor",
		"prototype",
		"distance"
	],
	[
		"ProximitySensor",
		"prototype"
	],
	[
		"PublicKeyCredential"
	],
	[
		"PublicKeyCredential",
		"prototype",
		"toJSON()"
	],
	[
		"PublicKeyCredential",
		"prototype",
		"response"
	],
	[
		"PublicKeyCredential",
		"prototype",
		"rawId"
	],
	[
		"PublicKeyCredential",
		"prototype",
		"getClientExtensionResults()"
	],
	[
		"PublicKeyCredential",
		"prototype",
		"authenticatorAttachment"
	],
	[
		"PublicKeyCredential",
		"prototype"
	],
	[
		"PublicKeyCredential",
		"signalUnknownCredential()"
	],
	[
		"PublicKeyCredential",
		"signalCurrentUserDetails()"
	],
	[
		"PublicKeyCredential",
		"signalAllAcceptedCredentials()"
	],
	[
		"PublicKeyCredential",
		"parseRequestOptionsFromJSON()"
	],
	[
		"PublicKeyCredential",
		"parseCreationOptionsFromJSON()"
	],
	[
		"PublicKeyCredential",
		"isUserVerifyingPlatformAuthenticatorAvailable()"
	],
	[
		"PublicKeyCredential",
		"isConditionalMediationAvailable()"
	],
	[
		"PublicKeyCredential",
		"getClientCapabilities()"
	],
	[
		"PushEvent"
	],
	[
		"PushEvent",
		"prototype",
		"data"
	],
	[
		"PushEvent",
		"prototype"
	],
	[
		"PushManager"
	],
	[
		"PushManager",
		"prototype",
		"subscribe()"
	],
	[
		"PushManager",
		"prototype",
		"permissionState()"
	],
	[
		"PushManager",
		"prototype",
		"getSubscription()"
	],
	[
		"PushManager",
		"prototype"
	],
	[
		"PushManager",
		"supportedContentEncodings"
	],
	[
		"PushMessageData"
	],
	[
		"PushMessageData",
		"prototype",
		"text()"
	],
	[
		"PushMessageData",
		"prototype",
		"json()"
	],
	[
		"PushMessageData",
		"prototype",
		"bytes()"
	],
	[
		"PushMessageData",
		"prototype",
		"blob()"
	],
	[
		"PushMessageData",
		"prototype",
		"arrayBuffer()"
	],
	[
		"PushMessageData",
		"prototype"
	],
	[
		"PushSubscription"
	],
	[
		"PushSubscription",
		"prototype",
		"unsubscribe()"
	],
	[
		"PushSubscription",
		"prototype",
		"toJSON()"
	],
	[
		"PushSubscription",
		"prototype",
		"options"
	],
	[
		"PushSubscription",
		"prototype",
		"getKey()"
	],
	[
		"PushSubscription",
		"prototype",
		"expirationTime"
	],
	[
		"PushSubscription",
		"prototype",
		"endpoint"
	],
	[
		"PushSubscription",
		"prototype"
	],
	[
		"PushSubscriptionChangeEvent"
	],
	[
		"PushSubscriptionChangeEvent",
		"prototype",
		"oldSubscription"
	],
	[
		"PushSubscriptionChangeEvent",
		"prototype",
		"newSubscription"
	],
	[
		"PushSubscriptionChangeEvent",
		"prototype"
	],
	[
		"PushSubscriptionOptions"
	],
	[
		"PushSubscriptionOptions",
		"prototype",
		"userVisibleOnly"
	],
	[
		"PushSubscriptionOptions",
		"prototype",
		"applicationServerKey"
	],
	[
		"PushSubscriptionOptions",
		"prototype"
	],
	[
		"QuicBidirectionalStream"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"writingAborted"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"writeBufferedAmount"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"write()"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"writable"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"waitForWriteBufferedAmountBelow()"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"waitForReadable()"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"readingAborted"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"readableAmount"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"readable"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"readInto()"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"abortWriting()"
	],
	[
		"QuicBidirectionalStream",
		"prototype",
		"abortReading()"
	],
	[
		"QuicBidirectionalStream",
		"prototype"
	],
	[
		"QuicReceiveStream"
	],
	[
		"QuicReceiveStream",
		"prototype",
		"waitForReadable()"
	],
	[
		"QuicReceiveStream",
		"prototype",
		"readingAborted"
	],
	[
		"QuicReceiveStream",
		"prototype",
		"readableAmount"
	],
	[
		"QuicReceiveStream",
		"prototype",
		"readable"
	],
	[
		"QuicReceiveStream",
		"prototype",
		"readInto()"
	],
	[
		"QuicReceiveStream",
		"prototype",
		"abortReading()"
	],
	[
		"QuicReceiveStream",
		"prototype"
	],
	[
		"QuicSendStream"
	],
	[
		"QuicSendStream",
		"prototype",
		"writingAborted"
	],
	[
		"QuicSendStream",
		"prototype",
		"writeBufferedAmount"
	],
	[
		"QuicSendStream",
		"prototype",
		"write()"
	],
	[
		"QuicSendStream",
		"prototype",
		"writable"
	],
	[
		"QuicSendStream",
		"prototype",
		"waitForWriteBufferedAmountBelow()"
	],
	[
		"QuicSendStream",
		"prototype",
		"abortWriting()"
	],
	[
		"QuicSendStream",
		"prototype"
	],
	[
		"QuicStream"
	],
	[
		"QuicStream",
		"prototype",
		"transport"
	],
	[
		"QuicStream",
		"prototype",
		"streamId"
	],
	[
		"QuicStream",
		"prototype"
	],
	[
		"QuicTransport"
	],
	[
		"QuicTransport",
		"prototype"
	],
	[
		"QuicTransportBase"
	],
	[
		"QuicTransportBase",
		"prototype",
		"stop()"
	],
	[
		"QuicTransportBase",
		"prototype",
		"state"
	],
	[
		"QuicTransportBase",
		"prototype",
		"sendDatagram()"
	],
	[
		"QuicTransportBase",
		"prototype",
		"receiveDatagrams()"
	],
	[
		"QuicTransportBase",
		"prototype",
		"readyToSendDatagram()"
	],
	[
		"QuicTransportBase",
		"prototype",
		"onstatechange"
	],
	[
		"QuicTransportBase",
		"prototype",
		"onreceivestream"
	],
	[
		"QuicTransportBase",
		"prototype",
		"onerror"
	],
	[
		"QuicTransportBase",
		"prototype",
		"onbidirectionalstream"
	],
	[
		"QuicTransportBase",
		"prototype",
		"maxDatagramSize"
	],
	[
		"QuicTransportBase",
		"prototype",
		"createSendStream()"
	],
	[
		"QuicTransportBase",
		"prototype",
		"createBidirectionalStream()"
	],
	[
		"QuicTransportBase",
		"prototype"
	],
	[
		"RadioNodeList"
	],
	[
		"RadioNodeList",
		"prototype",
		"value"
	],
	[
		"RadioNodeList",
		"prototype"
	],
	[
		"Range"
	],
	[
		"Range",
		"prototype",
		"surroundContents()"
	],
	[
		"Range",
		"prototype",
		"setStartBefore()"
	],
	[
		"Range",
		"prototype",
		"setStartAfter()"
	],
	[
		"Range",
		"prototype",
		"setStart()"
	],
	[
		"Range",
		"prototype",
		"setEndBefore()"
	],
	[
		"Range",
		"prototype",
		"setEndAfter()"
	],
	[
		"Range",
		"prototype",
		"setEnd()"
	],
	[
		"Range",
		"prototype",
		"selectNodeContents()"
	],
	[
		"Range",
		"prototype",
		"selectNode()"
	],
	[
		"Range",
		"prototype",
		"isPointInRange()"
	],
	[
		"Range",
		"prototype",
		"intersectsNode()"
	],
	[
		"Range",
		"prototype",
		"insertNode()"
	],
	[
		"Range",
		"prototype",
		"getClientRects()"
	],
	[
		"Range",
		"prototype",
		"getBoundingClientRect()"
	],
	[
		"Range",
		"prototype",
		"extractContents()"
	],
	[
		"Range",
		"prototype",
		"detach()"
	],
	[
		"Range",
		"prototype",
		"deleteContents()"
	],
	[
		"Range",
		"prototype",
		"createContextualFragment()"
	],
	[
		"Range",
		"prototype",
		"comparePoint()"
	],
	[
		"Range",
		"prototype",
		"compareBoundaryPoints()"
	],
	[
		"Range",
		"prototype",
		"commonAncestorContainer"
	],
	[
		"Range",
		"prototype",
		"collapse()"
	],
	[
		"Range",
		"prototype",
		"cloneRange()"
	],
	[
		"Range",
		"prototype",
		"cloneContents()"
	],
	[
		"Range",
		"prototype",
		"START_TO_START"
	],
	[
		"Range",
		"prototype",
		"START_TO_END"
	],
	[
		"Range",
		"prototype",
		"END_TO_START"
	],
	[
		"Range",
		"prototype",
		"END_TO_END"
	],
	[
		"Range",
		"prototype"
	],
	[
		"Range",
		"START_TO_START"
	],
	[
		"Range",
		"START_TO_END"
	],
	[
		"Range",
		"END_TO_START"
	],
	[
		"Range",
		"END_TO_END"
	],
	[
		"ReadableByteStreamController"
	],
	[
		"ReadableByteStreamController",
		"prototype",
		"error()"
	],
	[
		"ReadableByteStreamController",
		"prototype",
		"enqueue()"
	],
	[
		"ReadableByteStreamController",
		"prototype",
		"desiredSize"
	],
	[
		"ReadableByteStreamController",
		"prototype",
		"close()"
	],
	[
		"ReadableByteStreamController",
		"prototype",
		"byobRequest"
	],
	[
		"ReadableByteStreamController",
		"prototype"
	],
	[
		"ReadableStream"
	],
	[
		"ReadableStream",
		"prototype",
		"tee()"
	],
	[
		"ReadableStream",
		"prototype",
		"pipeTo()"
	],
	[
		"ReadableStream",
		"prototype",
		"pipeThrough()"
	],
	[
		"ReadableStream",
		"prototype",
		"locked"
	],
	[
		"ReadableStream",
		"prototype",
		"getReader()"
	],
	[
		"ReadableStream",
		"prototype",
		"cancel()"
	],
	[
		"ReadableStream",
		"prototype"
	],
	[
		"ReadableStream",
		"from()"
	],
	[
		"ReadableStreamBYOBReader"
	],
	[
		"ReadableStreamBYOBReader",
		"prototype",
		"releaseLock()"
	],
	[
		"ReadableStreamBYOBReader",
		"prototype",
		"read()"
	],
	[
		"ReadableStreamBYOBReader",
		"prototype",
		"closed"
	],
	[
		"ReadableStreamBYOBReader",
		"prototype",
		"cancel()"
	],
	[
		"ReadableStreamBYOBReader",
		"prototype"
	],
	[
		"ReadableStreamBYOBRequest"
	],
	[
		"ReadableStreamBYOBRequest",
		"prototype",
		"view"
	],
	[
		"ReadableStreamBYOBRequest",
		"prototype",
		"respondWithNewView()"
	],
	[
		"ReadableStreamBYOBRequest",
		"prototype",
		"respond()"
	],
	[
		"ReadableStreamBYOBRequest",
		"prototype"
	],
	[
		"ReadableStreamDefaultController"
	],
	[
		"ReadableStreamDefaultController",
		"prototype",
		"error()"
	],
	[
		"ReadableStreamDefaultController",
		"prototype",
		"enqueue()"
	],
	[
		"ReadableStreamDefaultController",
		"prototype",
		"desiredSize"
	],
	[
		"ReadableStreamDefaultController",
		"prototype",
		"close()"
	],
	[
		"ReadableStreamDefaultController",
		"prototype"
	],
	[
		"ReadableStreamDefaultReader"
	],
	[
		"ReadableStreamDefaultReader",
		"prototype",
		"releaseLock()"
	],
	[
		"ReadableStreamDefaultReader",
		"prototype",
		"read()"
	],
	[
		"ReadableStreamDefaultReader",
		"prototype",
		"closed"
	],
	[
		"ReadableStreamDefaultReader",
		"prototype",
		"cancel()"
	],
	[
		"ReadableStreamDefaultReader",
		"prototype"
	],
	[
		"RealTimeReporting"
	],
	[
		"RealTimeReporting",
		"prototype",
		"contributeToHistogram()"
	],
	[
		"RealTimeReporting",
		"prototype"
	],
	[
		"ReceiveStreamEvent"
	],
	[
		"ReceiveStreamEvent",
		"prototype",
		"stream"
	],
	[
		"ReceiveStreamEvent",
		"prototype"
	],
	[
		"RelativeOrientationSensor"
	],
	[
		"RelativeOrientationSensor",
		"prototype"
	],
	[
		"RemotePlayback"
	],
	[
		"RemotePlayback",
		"prototype",
		"watchAvailability()"
	],
	[
		"RemotePlayback",
		"prototype",
		"state"
	],
	[
		"RemotePlayback",
		"prototype",
		"prompt()"
	],
	[
		"RemotePlayback",
		"prototype",
		"ondisconnect"
	],
	[
		"RemotePlayback",
		"prototype",
		"onconnecting"
	],
	[
		"RemotePlayback",
		"prototype",
		"onconnect"
	],
	[
		"RemotePlayback",
		"prototype",
		"cancelWatchAvailability()"
	],
	[
		"RemotePlayback",
		"prototype"
	],
	[
		"Report"
	],
	[
		"Report",
		"prototype",
		"url"
	],
	[
		"Report",
		"prototype",
		"type"
	],
	[
		"Report",
		"prototype",
		"toJSON()"
	],
	[
		"Report",
		"prototype",
		"body"
	],
	[
		"Report",
		"prototype"
	],
	[
		"ReportBody"
	],
	[
		"ReportBody",
		"prototype",
		"toJSON()"
	],
	[
		"ReportBody",
		"prototype"
	],
	[
		"ReportingObserver"
	],
	[
		"ReportingObserver",
		"prototype",
		"takeRecords()"
	],
	[
		"ReportingObserver",
		"prototype",
		"observe()"
	],
	[
		"ReportingObserver",
		"prototype",
		"disconnect()"
	],
	[
		"ReportingObserver",
		"prototype"
	],
	[
		"Request"
	],
	[
		"Request",
		"prototype",
		"url"
	],
	[
		"Request",
		"prototype",
		"text()"
	],
	[
		"Request",
		"prototype",
		"targetAddressSpace"
	],
	[
		"Request",
		"prototype",
		"signal"
	],
	[
		"Request",
		"prototype",
		"referrerPolicy"
	],
	[
		"Request",
		"prototype",
		"referrer"
	],
	[
		"Request",
		"prototype",
		"redirect"
	],
	[
		"Request",
		"prototype",
		"mode"
	],
	[
		"Request",
		"prototype",
		"method"
	],
	[
		"Request",
		"prototype",
		"keepalive"
	],
	[
		"Request",
		"prototype",
		"json()"
	],
	[
		"Request",
		"prototype",
		"isReloadNavigation"
	],
	[
		"Request",
		"prototype",
		"isHistoryNavigation"
	],
	[
		"Request",
		"prototype",
		"integrity"
	],
	[
		"Request",
		"prototype",
		"headers"
	],
	[
		"Request",
		"prototype",
		"formData()"
	],
	[
		"Request",
		"prototype",
		"duplex"
	],
	[
		"Request",
		"prototype",
		"destination"
	],
	[
		"Request",
		"prototype",
		"credentials"
	],
	[
		"Request",
		"prototype",
		"clone()"
	],
	[
		"Request",
		"prototype",
		"cache"
	],
	[
		"Request",
		"prototype",
		"bytes()"
	],
	[
		"Request",
		"prototype",
		"bodyUsed"
	],
	[
		"Request",
		"prototype",
		"body"
	],
	[
		"Request",
		"prototype",
		"blob()"
	],
	[
		"Request",
		"prototype",
		"arrayBuffer()"
	],
	[
		"Request",
		"prototype"
	],
	[
		"ResizeObserver"
	],
	[
		"ResizeObserver",
		"prototype",
		"unobserve()"
	],
	[
		"ResizeObserver",
		"prototype",
		"observe()"
	],
	[
		"ResizeObserver",
		"prototype",
		"disconnect()"
	],
	[
		"ResizeObserver",
		"prototype"
	],
	[
		"ResizeObserverEntry"
	],
	[
		"ResizeObserverEntry",
		"prototype",
		"target"
	],
	[
		"ResizeObserverEntry",
		"prototype",
		"devicePixelContentBoxSize"
	],
	[
		"ResizeObserverEntry",
		"prototype",
		"contentRect"
	],
	[
		"ResizeObserverEntry",
		"prototype",
		"contentBoxSize"
	],
	[
		"ResizeObserverEntry",
		"prototype",
		"borderBoxSize"
	],
	[
		"ResizeObserverEntry",
		"prototype"
	],
	[
		"ResizeObserverSize"
	],
	[
		"ResizeObserverSize",
		"prototype",
		"inlineSize"
	],
	[
		"ResizeObserverSize",
		"prototype",
		"blockSize"
	],
	[
		"ResizeObserverSize",
		"prototype"
	],
	[
		"Response"
	],
	[
		"Response",
		"prototype",
		"url"
	],
	[
		"Response",
		"prototype",
		"type"
	],
	[
		"Response",
		"prototype",
		"text()"
	],
	[
		"Response",
		"prototype",
		"statusText"
	],
	[
		"Response",
		"prototype",
		"status"
	],
	[
		"Response",
		"prototype",
		"redirected"
	],
	[
		"Response",
		"prototype",
		"ok"
	],
	[
		"Response",
		"prototype",
		"json()"
	],
	[
		"Response",
		"prototype",
		"headers"
	],
	[
		"Response",
		"prototype",
		"formData()"
	],
	[
		"Response",
		"prototype",
		"clone()"
	],
	[
		"Response",
		"prototype",
		"bytes()"
	],
	[
		"Response",
		"prototype",
		"bodyUsed"
	],
	[
		"Response",
		"prototype",
		"body"
	],
	[
		"Response",
		"prototype",
		"blob()"
	],
	[
		"Response",
		"prototype",
		"arrayBuffer()"
	],
	[
		"Response",
		"prototype"
	],
	[
		"Response",
		"redirect()"
	],
	[
		"Response",
		"json()"
	],
	[
		"Response",
		"error()"
	],
	[
		"RestrictionTarget"
	],
	[
		"RestrictionTarget",
		"prototype"
	],
	[
		"RestrictionTarget",
		"fromElement()"
	],
	[
		"RTCCertificate"
	],
	[
		"RTCCertificate",
		"prototype",
		"getFingerprints()"
	],
	[
		"RTCCertificate",
		"prototype",
		"expires"
	],
	[
		"RTCCertificate",
		"prototype"
	],
	[
		"RTCCertificate",
		"getSupportedAlgorithms()"
	],
	[
		"RTCCertificate",
		"generateCertificate()"
	],
	[
		"RTCDataChannel"
	],
	[
		"RTCDataChannel",
		"prototype",
		"transport"
	],
	[
		"RTCDataChannel",
		"prototype",
		"send()"
	],
	[
		"RTCDataChannel",
		"prototype",
		"send()"
	],
	[
		"RTCDataChannel",
		"prototype",
		"readyState"
	],
	[
		"RTCDataChannel",
		"prototype",
		"readyState"
	],
	[
		"RTCDataChannel",
		"prototype",
		"protocol"
	],
	[
		"RTCDataChannel",
		"prototype",
		"priority"
	],
	[
		"RTCDataChannel",
		"prototype",
		"ordered"
	],
	[
		"RTCDataChannel",
		"prototype",
		"onopen"
	],
	[
		"RTCDataChannel",
		"prototype",
		"onmessage"
	],
	[
		"RTCDataChannel",
		"prototype",
		"onerror"
	],
	[
		"RTCDataChannel",
		"prototype",
		"onerror"
	],
	[
		"RTCDataChannel",
		"prototype",
		"onclosing"
	],
	[
		"RTCDataChannel",
		"prototype",
		"onclose"
	],
	[
		"RTCDataChannel",
		"prototype",
		"onbufferedamountlow"
	],
	[
		"RTCDataChannel",
		"prototype",
		"negotiated"
	],
	[
		"RTCDataChannel",
		"prototype",
		"maxRetransmits"
	],
	[
		"RTCDataChannel",
		"prototype",
		"maxPacketLifeTime"
	],
	[
		"RTCDataChannel",
		"prototype",
		"label"
	],
	[
		"RTCDataChannel",
		"prototype",
		"id"
	],
	[
		"RTCDataChannel",
		"prototype",
		"getParameters()"
	],
	[
		"RTCDataChannel",
		"prototype",
		"close()"
	],
	[
		"RTCDataChannel",
		"prototype",
		"close()"
	],
	[
		"RTCDataChannel",
		"prototype",
		"bufferedAmountLowThreshold"
	],
	[
		"RTCDataChannel",
		"prototype",
		"bufferedAmount"
	],
	[
		"RTCDataChannel",
		"prototype",
		"binaryType"
	],
	[
		"RTCDataChannel",
		"prototype"
	],
	[
		"RTCDataChannelEvent"
	],
	[
		"RTCDataChannelEvent",
		"prototype",
		"channel"
	],
	[
		"RTCDataChannelEvent",
		"prototype"
	],
	[
		"RTCDataTransport"
	],
	[
		"RTCDataTransport",
		"prototype"
	],
	[
		"RTCDtlsTransport"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"transport"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"stop()"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"state"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"state"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"start()"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"onstatechange"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"onstatechange"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"onerror"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"onerror"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"iceTransport"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"getRemoteParameters()"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"getRemoteCertificates()"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"getRemoteCertificates()"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"getLocalParameters()"
	],
	[
		"RTCDtlsTransport",
		"prototype",
		"getCertificates()"
	],
	[
		"RTCDtlsTransport",
		"prototype"
	],
	[
		"RTCDtmfSender"
	],
	[
		"RTCDtmfSender",
		"prototype",
		"toneBuffer"
	],
	[
		"RTCDtmfSender",
		"prototype",
		"sender"
	],
	[
		"RTCDtmfSender",
		"prototype",
		"ontonechange"
	],
	[
		"RTCDtmfSender",
		"prototype",
		"insertDTMF()"
	],
	[
		"RTCDtmfSender",
		"prototype",
		"canInsertDTMF"
	],
	[
		"RTCDtmfSender",
		"prototype"
	],
	[
		"RTCDTMFSender"
	],
	[
		"RTCDTMFSender",
		"prototype",
		"toneBuffer"
	],
	[
		"RTCDTMFSender",
		"prototype",
		"ontonechange"
	],
	[
		"RTCDTMFSender",
		"prototype",
		"insertDTMF()"
	],
	[
		"RTCDTMFSender",
		"prototype",
		"canInsertDTMF"
	],
	[
		"RTCDTMFSender",
		"prototype"
	],
	[
		"RTCDTMFToneChangeEvent"
	],
	[
		"RTCDTMFToneChangeEvent",
		"prototype",
		"tone"
	],
	[
		"RTCDTMFToneChangeEvent",
		"prototype"
	],
	[
		"RTCEncodedAudioFrame"
	],
	[
		"RTCEncodedAudioFrame",
		"prototype",
		"getMetadata()"
	],
	[
		"RTCEncodedAudioFrame",
		"prototype",
		"data"
	],
	[
		"RTCEncodedAudioFrame",
		"prototype"
	],
	[
		"RTCEncodedVideoFrame"
	],
	[
		"RTCEncodedVideoFrame",
		"prototype",
		"type"
	],
	[
		"RTCEncodedVideoFrame",
		"prototype",
		"getMetadata()"
	],
	[
		"RTCEncodedVideoFrame",
		"prototype",
		"data"
	],
	[
		"RTCEncodedVideoFrame",
		"prototype"
	],
	[
		"RTCError"
	],
	[
		"RTCError",
		"prototype",
		"sentAlert"
	],
	[
		"RTCError",
		"prototype",
		"sdpLineNumber"
	],
	[
		"RTCError",
		"prototype",
		"sctpCauseCode"
	],
	[
		"RTCError",
		"prototype",
		"receivedAlert"
	],
	[
		"RTCError",
		"prototype",
		"httpRequestStatusCode"
	],
	[
		"RTCError",
		"prototype",
		"errorDetail"
	],
	[
		"RTCError",
		"prototype"
	],
	[
		"RTCErrorEvent"
	],
	[
		"RTCErrorEvent",
		"prototype",
		"error"
	],
	[
		"RTCErrorEvent",
		"prototype"
	],
	[
		"RTCIceCandidate"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"usernameFragment"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"url"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"type"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"toJSON()"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"tcpType"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"sdpMid"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"sdpMLineIndex"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"relayProtocol"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"relatedPort"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"relatedAddress"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"protocol"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"priority"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"port"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"foundation"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"component"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"candidate"
	],
	[
		"RTCIceCandidate",
		"prototype",
		"address"
	],
	[
		"RTCIceCandidate",
		"prototype"
	],
	[
		"RTCIceCandidatePair"
	],
	[
		"RTCIceCandidatePair",
		"prototype",
		"remote"
	],
	[
		"RTCIceCandidatePair",
		"prototype",
		"local"
	],
	[
		"RTCIceCandidatePair",
		"prototype"
	],
	[
		"RTCIceCandidatePairChangedEvent"
	],
	[
		"RTCIceCandidatePairChangedEvent",
		"prototype",
		"pair"
	],
	[
		"RTCIceCandidatePairChangedEvent",
		"prototype"
	],
	[
		"RTCIceCandidatePairEvent"
	],
	[
		"RTCIceCandidatePairEvent",
		"prototype",
		"remote"
	],
	[
		"RTCIceCandidatePairEvent",
		"prototype",
		"local"
	],
	[
		"RTCIceCandidatePairEvent",
		"prototype"
	],
	[
		"RTCIceGatherer"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"state"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"onstatechange"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"onlocalcandidate"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"onerror"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"getLocalParameters()"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"getLocalCandidates()"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"gather()"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"createAssociatedGatherer()"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"component"
	],
	[
		"RTCIceGatherer",
		"prototype",
		"close()"
	],
	[
		"RTCIceGatherer",
		"prototype"
	],
	[
		"RTCIceGatherer",
		"getDefaultIceServers()"
	],
	[
		"RTCIceGathererEvent"
	],
	[
		"RTCIceGathererEvent",
		"prototype",
		"url"
	],
	[
		"RTCIceGathererEvent",
		"prototype",
		"candidate"
	],
	[
		"RTCIceGathererEvent",
		"prototype"
	],
	[
		"RTCIceGathererIceErrorEvent"
	],
	[
		"RTCIceGathererIceErrorEvent",
		"prototype",
		"url"
	],
	[
		"RTCIceGathererIceErrorEvent",
		"prototype",
		"statusText"
	],
	[
		"RTCIceGathererIceErrorEvent",
		"prototype",
		"hostCandidate"
	],
	[
		"RTCIceGathererIceErrorEvent",
		"prototype",
		"errorCode"
	],
	[
		"RTCIceGathererIceErrorEvent",
		"prototype"
	],
	[
		"RTCIceTransport"
	],
	[
		"RTCIceTransport",
		"prototype",
		"stop()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"stop()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"state"
	],
	[
		"RTCIceTransport",
		"prototype",
		"state"
	],
	[
		"RTCIceTransport",
		"prototype",
		"start()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"start()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"setRemoteCandidates()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"selectCandidatePair()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"role"
	],
	[
		"RTCIceTransport",
		"prototype",
		"removeCandidatePair()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onstatechange"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onstatechange"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onselectedcandidatepairchange"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onicecandidatepairremove"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onicecandidatepairnominate"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onicecandidatepairadd"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onicecandidate"
	],
	[
		"RTCIceTransport",
		"prototype",
		"ongatheringstatechange"
	],
	[
		"RTCIceTransport",
		"prototype",
		"onerror"
	],
	[
		"RTCIceTransport",
		"prototype",
		"oncandidatepairchange"
	],
	[
		"RTCIceTransport",
		"prototype",
		"iceGatherer"
	],
	[
		"RTCIceTransport",
		"prototype",
		"getSelectedCandidatePair()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"getRemoteParameters()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"getRemoteParameters()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"getRemoteCandidates()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"getLocalParameters()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"getLocalCandidates()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"gatheringState"
	],
	[
		"RTCIceTransport",
		"prototype",
		"gather()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"createAssociatedTransport()"
	],
	[
		"RTCIceTransport",
		"prototype",
		"component"
	],
	[
		"RTCIceTransport",
		"prototype",
		"component"
	],
	[
		"RTCIceTransport",
		"prototype",
		"addRemoteCandidate()"
	],
	[
		"RTCIceTransport",
		"prototype"
	],
	[
		"RTCIceTransportController"
	],
	[
		"RTCIceTransportController",
		"prototype",
		"getTransports()"
	],
	[
		"RTCIceTransportController",
		"prototype",
		"addTransport()"
	],
	[
		"RTCIceTransportController",
		"prototype"
	],
	[
		"RTCIdentity"
	],
	[
		"RTCIdentity",
		"prototype",
		"transport"
	],
	[
		"RTCIdentity",
		"prototype",
		"setIdentityProvider()"
	],
	[
		"RTCIdentity",
		"prototype",
		"peerIdentity"
	],
	[
		"RTCIdentity",
		"prototype",
		"idpLoginUrl"
	],
	[
		"RTCIdentity",
		"prototype",
		"idpErrorInfo"
	],
	[
		"RTCIdentity",
		"prototype",
		"getIdentityAssertion()"
	],
	[
		"RTCIdentity",
		"prototype"
	],
	[
		"RTCIdentityAssertion"
	],
	[
		"RTCIdentityAssertion",
		"prototype",
		"name"
	],
	[
		"RTCIdentityAssertion",
		"prototype",
		"idp"
	],
	[
		"RTCIdentityAssertion",
		"prototype"
	],
	[
		"RTCIdentityProviderGlobalScope"
	],
	[
		"RTCIdentityProviderGlobalScope",
		"prototype",
		"rtcIdentityProvider"
	],
	[
		"RTCIdentityProviderGlobalScope",
		"prototype"
	],
	[
		"RTCIdentityProviderRegistrar"
	],
	[
		"RTCIdentityProviderRegistrar",
		"prototype",
		"register()"
	],
	[
		"RTCIdentityProviderRegistrar",
		"prototype"
	],
	[
		"RTCPeerConnection"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"signalingState"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"setRemoteDescription()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"setLocalDescription()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"setIdentityProvider()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"setConfiguration()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"sctp"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"restartIce()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"removeTrack()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"remoteDescription"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"pendingRemoteDescription"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"pendingLocalDescription"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"peerIdentity"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"ontrack"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"onsignalingstatechange"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"onnegotiationneeded"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"onicegatheringstatechange"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"oniceconnectionstatechange"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"onicecandidateerror"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"onicecandidate"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"ondatachannel"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"onconnectionstatechange"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"localDescription"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"idpLoginUrl"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"idpErrorInfo"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"iceGatheringState"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"iceConnectionState"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"getTransceivers()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"getStats()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"getSenders()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"getReceivers()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"getIdentityAssertion()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"getConfiguration()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"currentRemoteDescription"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"currentLocalDescription"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"createOffer()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"createDataChannel()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"createAnswer()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"connectionState"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"close()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"canTrickleIceCandidates"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"addTransceiver()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"addTrack()"
	],
	[
		"RTCPeerConnection",
		"prototype",
		"addIceCandidate()"
	],
	[
		"RTCPeerConnection",
		"prototype"
	],
	[
		"RTCPeerConnection",
		"generateCertificate()"
	],
	[
		"RTCPeerConnectionIceErrorEvent"
	],
	[
		"RTCPeerConnectionIceErrorEvent",
		"prototype",
		"url"
	],
	[
		"RTCPeerConnectionIceErrorEvent",
		"prototype",
		"port"
	],
	[
		"RTCPeerConnectionIceErrorEvent",
		"prototype",
		"errorText"
	],
	[
		"RTCPeerConnectionIceErrorEvent",
		"prototype",
		"errorCode"
	],
	[
		"RTCPeerConnectionIceErrorEvent",
		"prototype",
		"address"
	],
	[
		"RTCPeerConnectionIceErrorEvent",
		"prototype"
	],
	[
		"RTCPeerConnectionIceEvent"
	],
	[
		"RTCPeerConnectionIceEvent",
		"prototype",
		"url"
	],
	[
		"RTCPeerConnectionIceEvent",
		"prototype",
		"candidate"
	],
	[
		"RTCPeerConnectionIceEvent",
		"prototype"
	],
	[
		"RTCQuicTransport"
	],
	[
		"RTCQuicTransport",
		"prototype",
		"transport"
	],
	[
		"RTCQuicTransport",
		"prototype",
		"start()"
	],
	[
		"RTCQuicTransport",
		"prototype",
		"getRemoteParameters()"
	],
	[
		"RTCQuicTransport",
		"prototype",
		"getRemoteCertificates()"
	],
	[
		"RTCQuicTransport",
		"prototype",
		"getLocalParameters()"
	],
	[
		"RTCQuicTransport",
		"prototype",
		"getCertificates()"
	],
	[
		"RTCQuicTransport",
		"prototype"
	],
	[
		"RTCRtpListener"
	],
	[
		"RTCRtpListener",
		"prototype",
		"transport"
	],
	[
		"RTCRtpListener",
		"prototype",
		"onunhandledrtp"
	],
	[
		"RTCRtpListener",
		"prototype"
	],
	[
		"RTCRtpReceiver"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"transport"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"transport"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"transform"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"track"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"track"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"stop()"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"setTransport()"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"rtcpTransport"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"receive()"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"jitterBufferTarget"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"getSynchronizationSources()"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"getStats()"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"getParameters()"
	],
	[
		"RTCRtpReceiver",
		"prototype",
		"getContributingSources()"
	],
	[
		"RTCRtpReceiver",
		"prototype"
	],
	[
		"RTCRtpReceiver",
		"getCapabilities()"
	],
	[
		"RTCRtpReceiver",
		"getCapabilities()"
	],
	[
		"RTCRtpReceiver",
		"disableHardwareDecoding()"
	],
	[
		"RTCRtpScriptTransform"
	],
	[
		"RTCRtpScriptTransform",
		"prototype"
	],
	[
		"RTCRtpScriptTransformer"
	],
	[
		"RTCRtpScriptTransformer",
		"prototype",
		"writable"
	],
	[
		"RTCRtpScriptTransformer",
		"prototype",
		"sendKeyFrameRequest()"
	],
	[
		"RTCRtpScriptTransformer",
		"prototype",
		"readable"
	],
	[
		"RTCRtpScriptTransformer",
		"prototype",
		"options"
	],
	[
		"RTCRtpScriptTransformer",
		"prototype",
		"onkeyframerequest"
	],
	[
		"RTCRtpScriptTransformer",
		"prototype",
		"generateKeyFrame()"
	],
	[
		"RTCRtpScriptTransformer",
		"prototype"
	],
	[
		"RTCRtpSender"
	],
	[
		"RTCRtpSender",
		"prototype",
		"transport"
	],
	[
		"RTCRtpSender",
		"prototype",
		"transport"
	],
	[
		"RTCRtpSender",
		"prototype",
		"transform"
	],
	[
		"RTCRtpSender",
		"prototype",
		"track"
	],
	[
		"RTCRtpSender",
		"prototype",
		"track"
	],
	[
		"RTCRtpSender",
		"prototype",
		"stop()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"setTransport()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"setTrack()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"setStreams()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"setParameters()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"send()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"rtcpTransport"
	],
	[
		"RTCRtpSender",
		"prototype",
		"replaceTrack()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"onssrcconflict"
	],
	[
		"RTCRtpSender",
		"prototype",
		"kind"
	],
	[
		"RTCRtpSender",
		"prototype",
		"getStats()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"getParameters()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"generateKeyFrame()"
	],
	[
		"RTCRtpSender",
		"prototype",
		"dtmf"
	],
	[
		"RTCRtpSender",
		"prototype"
	],
	[
		"RTCRtpSender",
		"getCapabilities()"
	],
	[
		"RTCRtpSender",
		"getCapabilities()"
	],
	[
		"RTCRtpSender",
		"disableHardwareEncoding()"
	],
	[
		"RTCRtpTransceiver"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"stop()"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"setHeaderExtensionsToNegotiate()"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"setCodecPreferences()"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"sender"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"rtpHeaderEncryptionNegotiated"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"receiver"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"mid"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"getNegotiatedHeaderExtensions()"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"getHeaderExtensionsToNegotiate()"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"direction"
	],
	[
		"RTCRtpTransceiver",
		"prototype",
		"currentDirection"
	],
	[
		"RTCRtpTransceiver",
		"prototype"
	],
	[
		"RTCRtpUnhandledEvent"
	],
	[
		"RTCRtpUnhandledEvent",
		"prototype",
		"ssrc"
	],
	[
		"RTCRtpUnhandledEvent",
		"prototype",
		"rid"
	],
	[
		"RTCRtpUnhandledEvent",
		"prototype",
		"payloadType"
	],
	[
		"RTCRtpUnhandledEvent",
		"prototype",
		"muxId"
	],
	[
		"RTCRtpUnhandledEvent",
		"prototype"
	],
	[
		"RTCSctpTransport"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"transport"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"transport"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"stop()"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"state"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"state"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"start()"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"port"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"onstatechange"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"onstatechange"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"ondatachannel"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"maxMessageSize"
	],
	[
		"RTCSctpTransport",
		"prototype",
		"maxChannels"
	],
	[
		"RTCSctpTransport",
		"prototype"
	],
	[
		"RTCSctpTransport",
		"getCapabilities()"
	],
	[
		"RTCSessionDescription"
	],
	[
		"RTCSessionDescription",
		"prototype",
		"type"
	],
	[
		"RTCSessionDescription",
		"prototype",
		"toJSON()"
	],
	[
		"RTCSessionDescription",
		"prototype",
		"sdp"
	],
	[
		"RTCSessionDescription",
		"prototype"
	],
	[
		"RTCSsrcConflictEvent"
	],
	[
		"RTCSsrcConflictEvent",
		"prototype",
		"ssrc"
	],
	[
		"RTCSsrcConflictEvent",
		"prototype"
	],
	[
		"RTCStatsProvider"
	],
	[
		"RTCStatsProvider",
		"prototype",
		"getStats()"
	],
	[
		"RTCStatsProvider",
		"prototype"
	],
	[
		"RTCStatsReport"
	],
	[
		"RTCStatsReport",
		"prototype"
	],
	[
		"RTCTrackEvent"
	],
	[
		"RTCTrackEvent",
		"prototype",
		"transceiver"
	],
	[
		"RTCTrackEvent",
		"prototype",
		"track"
	],
	[
		"RTCTrackEvent",
		"prototype",
		"streams"
	],
	[
		"RTCTrackEvent",
		"prototype",
		"receiver"
	],
	[
		"RTCTrackEvent",
		"prototype"
	],
	[
		"RTCTransformEvent"
	],
	[
		"RTCTransformEvent",
		"prototype",
		"transformer"
	],
	[
		"RTCTransformEvent",
		"prototype"
	],
	[
		"Scheduler"
	],
	[
		"Scheduler",
		"prototype",
		"yield()"
	],
	[
		"Scheduler",
		"prototype",
		"postTask()"
	],
	[
		"Scheduler",
		"prototype"
	],
	[
		"Scheduling"
	],
	[
		"Scheduling",
		"prototype",
		"isInputPending()"
	],
	[
		"Scheduling",
		"prototype"
	],
	[
		"Screen"
	],
	[
		"Screen",
		"prototype",
		"width"
	],
	[
		"Screen",
		"prototype",
		"pixelDepth"
	],
	[
		"Screen",
		"prototype",
		"orientation"
	],
	[
		"Screen",
		"prototype",
		"onchange"
	],
	[
		"Screen",
		"prototype",
		"isExtended"
	],
	[
		"Screen",
		"prototype",
		"height"
	],
	[
		"Screen",
		"prototype",
		"colorDepth"
	],
	[
		"Screen",
		"prototype",
		"availWidth"
	],
	[
		"Screen",
		"prototype",
		"availHeight"
	],
	[
		"Screen",
		"prototype"
	],
	[
		"ScreenCaptureMediaStreamTrack"
	],
	[
		"ScreenCaptureMediaStreamTrack",
		"prototype",
		"screenDetailed()"
	],
	[
		"ScreenCaptureMediaStreamTrack",
		"prototype"
	],
	[
		"ScreenDetailed"
	],
	[
		"ScreenDetailed",
		"prototype",
		"top"
	],
	[
		"ScreenDetailed",
		"prototype",
		"left"
	],
	[
		"ScreenDetailed",
		"prototype",
		"label"
	],
	[
		"ScreenDetailed",
		"prototype",
		"isPrimary"
	],
	[
		"ScreenDetailed",
		"prototype",
		"isInternal"
	],
	[
		"ScreenDetailed",
		"prototype",
		"devicePixelRatio"
	],
	[
		"ScreenDetailed",
		"prototype",
		"availTop"
	],
	[
		"ScreenDetailed",
		"prototype",
		"availLeft"
	],
	[
		"ScreenDetailed",
		"prototype"
	],
	[
		"ScreenDetails"
	],
	[
		"ScreenDetails",
		"prototype",
		"screens"
	],
	[
		"ScreenDetails",
		"prototype",
		"onscreenschange"
	],
	[
		"ScreenDetails",
		"prototype",
		"oncurrentscreenchange"
	],
	[
		"ScreenDetails",
		"prototype",
		"currentScreen"
	],
	[
		"ScreenDetails",
		"prototype"
	],
	[
		"ScreenOrientation"
	],
	[
		"ScreenOrientation",
		"prototype",
		"unlock()"
	],
	[
		"ScreenOrientation",
		"prototype",
		"type"
	],
	[
		"ScreenOrientation",
		"prototype",
		"onchange"
	],
	[
		"ScreenOrientation",
		"prototype",
		"lock()"
	],
	[
		"ScreenOrientation",
		"prototype",
		"angle"
	],
	[
		"ScreenOrientation",
		"prototype"
	],
	[
		"ScriptingPolicyReportBody"
	],
	[
		"ScriptingPolicyReportBody",
		"prototype",
		"violationURL"
	],
	[
		"ScriptingPolicyReportBody",
		"prototype",
		"violationType"
	],
	[
		"ScriptingPolicyReportBody",
		"prototype",
		"violationSample"
	],
	[
		"ScriptingPolicyReportBody",
		"prototype",
		"toJSON()"
	],
	[
		"ScriptingPolicyReportBody",
		"prototype",
		"lineno"
	],
	[
		"ScriptingPolicyReportBody",
		"prototype",
		"colno"
	],
	[
		"ScriptingPolicyReportBody",
		"prototype"
	],
	[
		"ScriptProcessorNode"
	],
	[
		"ScriptProcessorNode",
		"prototype",
		"onaudioprocess"
	],
	[
		"ScriptProcessorNode",
		"prototype",
		"bufferSize"
	],
	[
		"ScriptProcessorNode",
		"prototype"
	],
	[
		"ScrollTimeline"
	],
	[
		"ScrollTimeline",
		"prototype",
		"source"
	],
	[
		"ScrollTimeline",
		"prototype",
		"axis"
	],
	[
		"ScrollTimeline",
		"prototype"
	],
	[
		"SecurityPolicyViolationEvent"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"violatedDirective"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"statusCode"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"sourceFile"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"sample"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"referrer"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"originalPolicy"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"lineNumber"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"effectiveDirective"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"documentURI"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"disposition"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"columnNumber"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype",
		"blockedURI"
	],
	[
		"SecurityPolicyViolationEvent",
		"prototype"
	],
	[
		"Selection"
	],
	[
		"Selection",
		"prototype",
		"type"
	],
	[
		"Selection",
		"prototype",
		"setPosition()"
	],
	[
		"Selection",
		"prototype",
		"setBaseAndExtent()"
	],
	[
		"Selection",
		"prototype",
		"selectAllChildren()"
	],
	[
		"Selection",
		"prototype",
		"removeRange()"
	],
	[
		"Selection",
		"prototype",
		"removeAllRanges()"
	],
	[
		"Selection",
		"prototype",
		"rangeCount"
	],
	[
		"Selection",
		"prototype",
		"modify()"
	],
	[
		"Selection",
		"prototype",
		"isCollapsed"
	],
	[
		"Selection",
		"prototype",
		"getRangeAt()"
	],
	[
		"Selection",
		"prototype",
		"getComposedRanges()"
	],
	[
		"Selection",
		"prototype",
		"focusOffset"
	],
	[
		"Selection",
		"prototype",
		"focusNode"
	],
	[
		"Selection",
		"prototype",
		"extend()"
	],
	[
		"Selection",
		"prototype",
		"empty()"
	],
	[
		"Selection",
		"prototype",
		"direction"
	],
	[
		"Selection",
		"prototype",
		"deleteFromDocument()"
	],
	[
		"Selection",
		"prototype",
		"containsNode()"
	],
	[
		"Selection",
		"prototype",
		"collapseToStart()"
	],
	[
		"Selection",
		"prototype",
		"collapseToEnd()"
	],
	[
		"Selection",
		"prototype",
		"collapse()"
	],
	[
		"Selection",
		"prototype",
		"anchorOffset"
	],
	[
		"Selection",
		"prototype",
		"anchorNode"
	],
	[
		"Selection",
		"prototype",
		"addRange()"
	],
	[
		"Selection",
		"prototype"
	],
	[
		"Sensor"
	],
	[
		"Sensor",
		"prototype",
		"timestamp"
	],
	[
		"Sensor",
		"prototype",
		"stop()"
	],
	[
		"Sensor",
		"prototype",
		"start()"
	],
	[
		"Sensor",
		"prototype",
		"onreading"
	],
	[
		"Sensor",
		"prototype",
		"onerror"
	],
	[
		"Sensor",
		"prototype",
		"onactivate"
	],
	[
		"Sensor",
		"prototype",
		"hasReading"
	],
	[
		"Sensor",
		"prototype",
		"activated"
	],
	[
		"Sensor",
		"prototype"
	],
	[
		"SensorErrorEvent"
	],
	[
		"SensorErrorEvent",
		"prototype",
		"error"
	],
	[
		"SensorErrorEvent",
		"prototype"
	],
	[
		"SequenceEffect"
	],
	[
		"SequenceEffect",
		"prototype",
		"clone()"
	],
	[
		"SequenceEffect",
		"prototype"
	],
	[
		"Serial"
	],
	[
		"Serial",
		"prototype",
		"requestPort()"
	],
	[
		"Serial",
		"prototype",
		"ondisconnect"
	],
	[
		"Serial",
		"prototype",
		"onconnect"
	],
	[
		"Serial",
		"prototype",
		"getPorts()"
	],
	[
		"Serial",
		"prototype"
	],
	[
		"SerialPort"
	],
	[
		"SerialPort",
		"prototype",
		"writable"
	],
	[
		"SerialPort",
		"prototype",
		"setSignals()"
	],
	[
		"SerialPort",
		"prototype",
		"readable"
	],
	[
		"SerialPort",
		"prototype",
		"open()"
	],
	[
		"SerialPort",
		"prototype",
		"ondisconnect"
	],
	[
		"SerialPort",
		"prototype",
		"onconnect"
	],
	[
		"SerialPort",
		"prototype",
		"getSignals()"
	],
	[
		"SerialPort",
		"prototype",
		"getInfo()"
	],
	[
		"SerialPort",
		"prototype",
		"forget()"
	],
	[
		"SerialPort",
		"prototype",
		"connected"
	],
	[
		"SerialPort",
		"prototype",
		"close()"
	],
	[
		"SerialPort",
		"prototype"
	],
	[
		"ServiceWorker"
	],
	[
		"ServiceWorker",
		"prototype",
		"state"
	],
	[
		"ServiceWorker",
		"prototype",
		"scriptURL"
	],
	[
		"ServiceWorker",
		"prototype",
		"postMessage()"
	],
	[
		"ServiceWorker",
		"prototype",
		"onstatechange"
	],
	[
		"ServiceWorker",
		"prototype",
		"onerror"
	],
	[
		"ServiceWorker",
		"prototype"
	],
	[
		"ServiceWorkerContainer"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"startMessages()"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"register()"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"ready"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"onmessageerror"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"onmessage"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"oncontrollerchange"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"getRegistrations()"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"getRegistration()"
	],
	[
		"ServiceWorkerContainer",
		"prototype",
		"controller"
	],
	[
		"ServiceWorkerContainer",
		"prototype"
	],
	[
		"ServiceWorkerRegistration"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"waiting"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"updateViaCache"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"update()"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"unregister()"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"sync"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"showNotification()"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"scope"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"pushManager"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"periodicSync"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"paymentManager"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"onupdatefound"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"navigationPreload"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"installing"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"index"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"getNotifications()"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"cookies"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"backgroundFetch"
	],
	[
		"ServiceWorkerRegistration",
		"prototype",
		"active"
	],
	[
		"ServiceWorkerRegistration",
		"prototype"
	],
	[
		"SFrameTransform"
	],
	[
		"SFrameTransform",
		"prototype",
		"writable"
	],
	[
		"SFrameTransform",
		"prototype",
		"setEncryptionKey()"
	],
	[
		"SFrameTransform",
		"prototype",
		"readable"
	],
	[
		"SFrameTransform",
		"prototype",
		"onerror"
	],
	[
		"SFrameTransform",
		"prototype"
	],
	[
		"SFrameTransformErrorEvent"
	],
	[
		"SFrameTransformErrorEvent",
		"prototype",
		"keyID"
	],
	[
		"SFrameTransformErrorEvent",
		"prototype",
		"frame"
	],
	[
		"SFrameTransformErrorEvent",
		"prototype",
		"errorType"
	],
	[
		"SFrameTransformErrorEvent",
		"prototype"
	],
	[
		"ShadowAnimation"
	],
	[
		"ShadowAnimation",
		"prototype",
		"sourceAnimation"
	],
	[
		"ShadowAnimation",
		"prototype"
	],
	[
		"ShadowRoot"
	],
	[
		"ShadowRoot",
		"prototype",
		"styleSheets"
	],
	[
		"ShadowRoot",
		"prototype",
		"slotAssignment"
	],
	[
		"ShadowRoot",
		"prototype",
		"setHTMLUnsafe()"
	],
	[
		"ShadowRoot",
		"prototype",
		"serializable"
	],
	[
		"ShadowRoot",
		"prototype",
		"pointerLockElement"
	],
	[
		"ShadowRoot",
		"prototype",
		"pictureInPictureElement"
	],
	[
		"ShadowRoot",
		"prototype",
		"onslotchange"
	],
	[
		"ShadowRoot",
		"prototype",
		"mode"
	],
	[
		"ShadowRoot",
		"prototype",
		"innerHTML"
	],
	[
		"ShadowRoot",
		"prototype",
		"host"
	],
	[
		"ShadowRoot",
		"prototype",
		"getHTML()"
	],
	[
		"ShadowRoot",
		"prototype",
		"getAnimations()"
	],
	[
		"ShadowRoot",
		"prototype",
		"fullscreenElement"
	],
	[
		"ShadowRoot",
		"prototype",
		"delegatesFocus"
	],
	[
		"ShadowRoot",
		"prototype",
		"clonable"
	],
	[
		"ShadowRoot",
		"prototype",
		"adoptedStyleSheets"
	],
	[
		"ShadowRoot",
		"prototype",
		"activeElement"
	],
	[
		"ShadowRoot",
		"prototype"
	],
	[
		"SharedStorage"
	],
	[
		"SharedStorage",
		"prototype",
		"worklet"
	],
	[
		"SharedStorage",
		"prototype",
		"set()"
	],
	[
		"SharedStorage",
		"prototype",
		"selectURL()"
	],
	[
		"SharedStorage",
		"prototype",
		"run()"
	],
	[
		"SharedStorage",
		"prototype",
		"remainingBudget()"
	],
	[
		"SharedStorage",
		"prototype",
		"length()"
	],
	[
		"SharedStorage",
		"prototype",
		"get()"
	],
	[
		"SharedStorage",
		"prototype",
		"delete()"
	],
	[
		"SharedStorage",
		"prototype",
		"createWorklet()"
	],
	[
		"SharedStorage",
		"prototype",
		"clear()"
	],
	[
		"SharedStorage",
		"prototype",
		"append()"
	],
	[
		"SharedStorage",
		"prototype"
	],
	[
		"SharedStorageWorklet"
	],
	[
		"SharedStorageWorklet",
		"prototype",
		"selectURL()"
	],
	[
		"SharedStorageWorklet",
		"prototype",
		"run()"
	],
	[
		"SharedStorageWorklet",
		"prototype"
	],
	[
		"SharedStorageWorkletGlobalScope"
	],
	[
		"SharedStorageWorkletGlobalScope",
		"prototype",
		"sharedStorage"
	],
	[
		"SharedStorageWorkletGlobalScope",
		"prototype",
		"register()"
	],
	[
		"SharedStorageWorkletGlobalScope",
		"prototype"
	],
	[
		"SharedWorker"
	],
	[
		"SharedWorker",
		"prototype",
		"port"
	],
	[
		"SharedWorker",
		"prototype",
		"onerror"
	],
	[
		"SharedWorker",
		"prototype"
	],
	[
		"SmartCardConnection"
	],
	[
		"SmartCardConnection",
		"prototype",
		"transmit()"
	],
	[
		"SmartCardConnection",
		"prototype",
		"status()"
	],
	[
		"SmartCardConnection",
		"prototype",
		"startTransaction()"
	],
	[
		"SmartCardConnection",
		"prototype",
		"setAttribute()"
	],
	[
		"SmartCardConnection",
		"prototype",
		"getAttribute()"
	],
	[
		"SmartCardConnection",
		"prototype",
		"disconnect()"
	],
	[
		"SmartCardConnection",
		"prototype",
		"control()"
	],
	[
		"SmartCardConnection",
		"prototype"
	],
	[
		"SmartCardContext"
	],
	[
		"SmartCardContext",
		"prototype",
		"listReaders()"
	],
	[
		"SmartCardContext",
		"prototype",
		"getStatusChange()"
	],
	[
		"SmartCardContext",
		"prototype",
		"connect()"
	],
	[
		"SmartCardContext",
		"prototype"
	],
	[
		"SmartCardError"
	],
	[
		"SmartCardError",
		"prototype",
		"responseCode"
	],
	[
		"SmartCardError",
		"prototype"
	],
	[
		"SmartCardResourceManager"
	],
	[
		"SmartCardResourceManager",
		"prototype",
		"establishContext()"
	],
	[
		"SmartCardResourceManager",
		"prototype"
	],
	[
		"SnapEvent"
	],
	[
		"SnapEvent",
		"prototype",
		"snapTargetInline"
	],
	[
		"SnapEvent",
		"prototype",
		"snapTargetBlock"
	],
	[
		"SnapEvent",
		"prototype"
	],
	[
		"SourceBuffer"
	],
	[
		"SourceBuffer",
		"prototype",
		"videoTracks"
	],
	[
		"SourceBuffer",
		"prototype",
		"updating"
	],
	[
		"SourceBuffer",
		"prototype",
		"timestampOffset"
	],
	[
		"SourceBuffer",
		"prototype",
		"textTracks"
	],
	[
		"SourceBuffer",
		"prototype",
		"remove()"
	],
	[
		"SourceBuffer",
		"prototype",
		"onupdatestart"
	],
	[
		"SourceBuffer",
		"prototype",
		"onupdateend"
	],
	[
		"SourceBuffer",
		"prototype",
		"onupdate"
	],
	[
		"SourceBuffer",
		"prototype",
		"onerror"
	],
	[
		"SourceBuffer",
		"prototype",
		"onabort"
	],
	[
		"SourceBuffer",
		"prototype",
		"mode"
	],
	[
		"SourceBuffer",
		"prototype",
		"changeType()"
	],
	[
		"SourceBuffer",
		"prototype",
		"buffered"
	],
	[
		"SourceBuffer",
		"prototype",
		"audioTracks"
	],
	[
		"SourceBuffer",
		"prototype",
		"appendWindowStart"
	],
	[
		"SourceBuffer",
		"prototype",
		"appendWindowEnd"
	],
	[
		"SourceBuffer",
		"prototype",
		"appendBuffer()"
	],
	[
		"SourceBuffer",
		"prototype",
		"abort()"
	],
	[
		"SourceBuffer",
		"prototype"
	],
	[
		"SourceBufferList"
	],
	[
		"SourceBufferList",
		"prototype",
		"onremovesourcebuffer"
	],
	[
		"SourceBufferList",
		"prototype",
		"onaddsourcebuffer"
	],
	[
		"SourceBufferList",
		"prototype",
		"length"
	],
	[
		"SourceBufferList",
		"prototype"
	],
	[
		"SpeechGrammar"
	],
	[
		"SpeechGrammar",
		"prototype",
		"weight"
	],
	[
		"SpeechGrammar",
		"prototype",
		"src"
	],
	[
		"SpeechGrammar",
		"prototype"
	],
	[
		"SpeechGrammarList"
	],
	[
		"SpeechGrammarList",
		"prototype",
		"length"
	],
	[
		"SpeechGrammarList",
		"prototype",
		"item()"
	],
	[
		"SpeechGrammarList",
		"prototype",
		"addFromURI()"
	],
	[
		"SpeechGrammarList",
		"prototype",
		"addFromString()"
	],
	[
		"SpeechGrammarList",
		"prototype"
	],
	[
		"SpeechRecognition"
	],
	[
		"SpeechRecognition",
		"prototype",
		"stop()"
	],
	[
		"SpeechRecognition",
		"prototype",
		"start()"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onstart"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onspeechstart"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onspeechend"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onsoundstart"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onsoundend"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onresult"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onnomatch"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onerror"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onend"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onaudiostart"
	],
	[
		"SpeechRecognition",
		"prototype",
		"onaudioend"
	],
	[
		"SpeechRecognition",
		"prototype",
		"maxAlternatives"
	],
	[
		"SpeechRecognition",
		"prototype",
		"lang"
	],
	[
		"SpeechRecognition",
		"prototype",
		"interimResults"
	],
	[
		"SpeechRecognition",
		"prototype",
		"grammars"
	],
	[
		"SpeechRecognition",
		"prototype",
		"continuous"
	],
	[
		"SpeechRecognition",
		"prototype",
		"abort()"
	],
	[
		"SpeechRecognition",
		"prototype"
	],
	[
		"SpeechRecognitionAlternative"
	],
	[
		"SpeechRecognitionAlternative",
		"prototype",
		"transcript"
	],
	[
		"SpeechRecognitionAlternative",
		"prototype",
		"confidence"
	],
	[
		"SpeechRecognitionAlternative",
		"prototype"
	],
	[
		"SpeechRecognitionErrorEvent"
	],
	[
		"SpeechRecognitionErrorEvent",
		"prototype",
		"message"
	],
	[
		"SpeechRecognitionErrorEvent",
		"prototype",
		"error"
	],
	[
		"SpeechRecognitionErrorEvent",
		"prototype"
	],
	[
		"SpeechRecognitionEvent"
	],
	[
		"SpeechRecognitionEvent",
		"prototype",
		"results"
	],
	[
		"SpeechRecognitionEvent",
		"prototype",
		"resultIndex"
	],
	[
		"SpeechRecognitionEvent",
		"prototype"
	],
	[
		"SpeechRecognitionResult"
	],
	[
		"SpeechRecognitionResult",
		"prototype",
		"length"
	],
	[
		"SpeechRecognitionResult",
		"prototype",
		"item()"
	],
	[
		"SpeechRecognitionResult",
		"prototype",
		"isFinal"
	],
	[
		"SpeechRecognitionResult",
		"prototype"
	],
	[
		"SpeechRecognitionResultList"
	],
	[
		"SpeechRecognitionResultList",
		"prototype",
		"length"
	],
	[
		"SpeechRecognitionResultList",
		"prototype",
		"item()"
	],
	[
		"SpeechRecognitionResultList",
		"prototype"
	],
	[
		"SpeechSynthesis"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"speaking"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"speak()"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"resume()"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"pending"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"paused"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"pause()"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"onvoiceschanged"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"getVoices()"
	],
	[
		"SpeechSynthesis",
		"prototype",
		"cancel()"
	],
	[
		"SpeechSynthesis",
		"prototype"
	],
	[
		"SpeechSynthesisErrorEvent"
	],
	[
		"SpeechSynthesisErrorEvent",
		"prototype",
		"error"
	],
	[
		"SpeechSynthesisErrorEvent",
		"prototype"
	],
	[
		"SpeechSynthesisEvent"
	],
	[
		"SpeechSynthesisEvent",
		"prototype",
		"utterance"
	],
	[
		"SpeechSynthesisEvent",
		"prototype",
		"name"
	],
	[
		"SpeechSynthesisEvent",
		"prototype",
		"elapsedTime"
	],
	[
		"SpeechSynthesisEvent",
		"prototype",
		"charLength"
	],
	[
		"SpeechSynthesisEvent",
		"prototype",
		"charIndex"
	],
	[
		"SpeechSynthesisEvent",
		"prototype"
	],
	[
		"SpeechSynthesisUtterance"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"volume"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"voice"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"text"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"rate"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"pitch"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"onstart"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"onresume"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"onpause"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"onmark"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"onerror"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"onend"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"onboundary"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype",
		"lang"
	],
	[
		"SpeechSynthesisUtterance",
		"prototype"
	],
	[
		"SpeechSynthesisVoice"
	],
	[
		"SpeechSynthesisVoice",
		"prototype",
		"voiceURI"
	],
	[
		"SpeechSynthesisVoice",
		"prototype",
		"name"
	],
	[
		"SpeechSynthesisVoice",
		"prototype",
		"localService"
	],
	[
		"SpeechSynthesisVoice",
		"prototype",
		"lang"
	],
	[
		"SpeechSynthesisVoice",
		"prototype",
		"default"
	],
	[
		"SpeechSynthesisVoice",
		"prototype"
	],
	[
		"StaticRange"
	],
	[
		"StaticRange",
		"prototype"
	],
	[
		"StereoPannerNode"
	],
	[
		"StereoPannerNode",
		"prototype",
		"pan"
	],
	[
		"StereoPannerNode",
		"prototype"
	],
	[
		"Storage"
	],
	[
		"Storage",
		"prototype",
		"setItem()"
	],
	[
		"Storage",
		"prototype",
		"removeItem()"
	],
	[
		"Storage",
		"prototype",
		"length"
	],
	[
		"Storage",
		"prototype",
		"key()"
	],
	[
		"Storage",
		"prototype",
		"getItem()"
	],
	[
		"Storage",
		"prototype",
		"clear()"
	],
	[
		"Storage",
		"prototype"
	],
	[
		"StorageAccessHandle"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"sessionStorage"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"revokeObjectURL()"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"locks"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"localStorage"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"indexedDB"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"getDirectory()"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"estimate()"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"createObjectURL()"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"caches"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"SharedWorker()"
	],
	[
		"StorageAccessHandle",
		"prototype",
		"BroadcastChannel()"
	],
	[
		"StorageAccessHandle",
		"prototype"
	],
	[
		"StorageBucket"
	],
	[
		"StorageBucket",
		"prototype",
		"setExpires()"
	],
	[
		"StorageBucket",
		"prototype",
		"persisted()"
	],
	[
		"StorageBucket",
		"prototype",
		"persist()"
	],
	[
		"StorageBucket",
		"prototype",
		"name"
	],
	[
		"StorageBucket",
		"prototype",
		"indexedDB"
	],
	[
		"StorageBucket",
		"prototype",
		"getDirectory()"
	],
	[
		"StorageBucket",
		"prototype",
		"expires()"
	],
	[
		"StorageBucket",
		"prototype",
		"estimate()"
	],
	[
		"StorageBucket",
		"prototype",
		"caches"
	],
	[
		"StorageBucket",
		"prototype"
	],
	[
		"StorageBucketManager"
	],
	[
		"StorageBucketManager",
		"prototype",
		"open()"
	],
	[
		"StorageBucketManager",
		"prototype",
		"keys()"
	],
	[
		"StorageBucketManager",
		"prototype",
		"delete()"
	],
	[
		"StorageBucketManager",
		"prototype"
	],
	[
		"StorageEvent"
	],
	[
		"StorageEvent",
		"prototype",
		"url"
	],
	[
		"StorageEvent",
		"prototype",
		"storageArea"
	],
	[
		"StorageEvent",
		"prototype",
		"oldValue"
	],
	[
		"StorageEvent",
		"prototype",
		"newValue"
	],
	[
		"StorageEvent",
		"prototype",
		"key"
	],
	[
		"StorageEvent",
		"prototype",
		"initStorageEvent()"
	],
	[
		"StorageEvent",
		"prototype"
	],
	[
		"StorageManager"
	],
	[
		"StorageManager",
		"prototype",
		"persisted()"
	],
	[
		"StorageManager",
		"prototype",
		"persist()"
	],
	[
		"StorageManager",
		"prototype",
		"getDirectory()"
	],
	[
		"StorageManager",
		"prototype",
		"estimate()"
	],
	[
		"StorageManager",
		"prototype"
	],
	[
		"StylePropertyMap"
	],
	[
		"StylePropertyMap",
		"prototype",
		"set()"
	],
	[
		"StylePropertyMap",
		"prototype",
		"delete()"
	],
	[
		"StylePropertyMap",
		"prototype",
		"clear()"
	],
	[
		"StylePropertyMap",
		"prototype",
		"append()"
	],
	[
		"StylePropertyMap",
		"prototype"
	],
	[
		"StylePropertyMapReadOnly"
	],
	[
		"StylePropertyMapReadOnly",
		"prototype",
		"size"
	],
	[
		"StylePropertyMapReadOnly",
		"prototype",
		"has()"
	],
	[
		"StylePropertyMapReadOnly",
		"prototype",
		"getAll()"
	],
	[
		"StylePropertyMapReadOnly",
		"prototype",
		"get()"
	],
	[
		"StylePropertyMapReadOnly",
		"prototype"
	],
	[
		"StyleSheet"
	],
	[
		"StyleSheet",
		"prototype",
		"type"
	],
	[
		"StyleSheet",
		"prototype",
		"title"
	],
	[
		"StyleSheet",
		"prototype",
		"parentStyleSheet"
	],
	[
		"StyleSheet",
		"prototype",
		"ownerNode"
	],
	[
		"StyleSheet",
		"prototype",
		"media"
	],
	[
		"StyleSheet",
		"prototype",
		"href"
	],
	[
		"StyleSheet",
		"prototype",
		"disabled"
	],
	[
		"StyleSheet",
		"prototype"
	],
	[
		"StyleSheetList"
	],
	[
		"StyleSheetList",
		"prototype",
		"length"
	],
	[
		"StyleSheetList",
		"prototype",
		"item()"
	],
	[
		"StyleSheetList",
		"prototype"
	],
	[
		"SubmitEvent"
	],
	[
		"SubmitEvent",
		"prototype",
		"submitter"
	],
	[
		"SubmitEvent",
		"prototype"
	],
	[
		"Subscriber"
	],
	[
		"Subscriber",
		"prototype",
		"signal"
	],
	[
		"Subscriber",
		"prototype",
		"next()"
	],
	[
		"Subscriber",
		"prototype",
		"error()"
	],
	[
		"Subscriber",
		"prototype",
		"complete()"
	],
	[
		"Subscriber",
		"prototype",
		"addTeardown()"
	],
	[
		"Subscriber",
		"prototype",
		"active"
	],
	[
		"Subscriber",
		"prototype"
	],
	[
		"SubtleCrypto"
	],
	[
		"SubtleCrypto",
		"prototype",
		"wrapKey()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"verify()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"unwrapKey()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"sign()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"importKey()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"generateKey()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"exportKey()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"encrypt()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"digest()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"deriveKey()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"deriveBits()"
	],
	[
		"SubtleCrypto",
		"prototype",
		"decrypt()"
	],
	[
		"SubtleCrypto",
		"prototype"
	],
	[
		"SVGAElement"
	],
	[
		"SVGAElement",
		"prototype",
		"username"
	],
	[
		"SVGAElement",
		"prototype",
		"type"
	],
	[
		"SVGAElement",
		"prototype",
		"text"
	],
	[
		"SVGAElement",
		"prototype",
		"target"
	],
	[
		"SVGAElement",
		"prototype",
		"search"
	],
	[
		"SVGAElement",
		"prototype",
		"relList"
	],
	[
		"SVGAElement",
		"prototype",
		"rel"
	],
	[
		"SVGAElement",
		"prototype",
		"referrerPolicy"
	],
	[
		"SVGAElement",
		"prototype",
		"protocol"
	],
	[
		"SVGAElement",
		"prototype",
		"port"
	],
	[
		"SVGAElement",
		"prototype",
		"ping"
	],
	[
		"SVGAElement",
		"prototype",
		"pathname"
	],
	[
		"SVGAElement",
		"prototype",
		"password"
	],
	[
		"SVGAElement",
		"prototype",
		"origin"
	],
	[
		"SVGAElement",
		"prototype",
		"hreflang"
	],
	[
		"SVGAElement",
		"prototype",
		"href"
	],
	[
		"SVGAElement",
		"prototype",
		"href"
	],
	[
		"SVGAElement",
		"prototype",
		"hostname"
	],
	[
		"SVGAElement",
		"prototype",
		"host"
	],
	[
		"SVGAElement",
		"prototype",
		"hash"
	],
	[
		"SVGAElement",
		"prototype",
		"download"
	],
	[
		"SVGAElement",
		"prototype"
	],
	[
		"SVGAngle"
	],
	[
		"SVGAngle",
		"prototype",
		"valueInSpecifiedUnits"
	],
	[
		"SVGAngle",
		"prototype",
		"valueAsString"
	],
	[
		"SVGAngle",
		"prototype",
		"value"
	],
	[
		"SVGAngle",
		"prototype",
		"unitType"
	],
	[
		"SVGAngle",
		"prototype",
		"newValueSpecifiedUnits()"
	],
	[
		"SVGAngle",
		"prototype",
		"convertToSpecifiedUnits()"
	],
	[
		"SVGAngle",
		"prototype",
		"SVG_ANGLETYPE_UNSPECIFIED"
	],
	[
		"SVGAngle",
		"prototype",
		"SVG_ANGLETYPE_UNKNOWN"
	],
	[
		"SVGAngle",
		"prototype",
		"SVG_ANGLETYPE_RAD"
	],
	[
		"SVGAngle",
		"prototype",
		"SVG_ANGLETYPE_GRAD"
	],
	[
		"SVGAngle",
		"prototype",
		"SVG_ANGLETYPE_DEG"
	],
	[
		"SVGAngle",
		"prototype"
	],
	[
		"SVGAngle",
		"SVG_ANGLETYPE_UNSPECIFIED"
	],
	[
		"SVGAngle",
		"SVG_ANGLETYPE_UNKNOWN"
	],
	[
		"SVGAngle",
		"SVG_ANGLETYPE_RAD"
	],
	[
		"SVGAngle",
		"SVG_ANGLETYPE_GRAD"
	],
	[
		"SVGAngle",
		"SVG_ANGLETYPE_DEG"
	],
	[
		"SVGAnimatedAngle"
	],
	[
		"SVGAnimatedAngle",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedAngle",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedAngle",
		"prototype"
	],
	[
		"SVGAnimatedBoolean"
	],
	[
		"SVGAnimatedBoolean",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedBoolean",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedBoolean",
		"prototype"
	],
	[
		"SVGAnimatedEnumeration"
	],
	[
		"SVGAnimatedEnumeration",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedEnumeration",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedEnumeration",
		"prototype"
	],
	[
		"SVGAnimatedInteger"
	],
	[
		"SVGAnimatedInteger",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedInteger",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedInteger",
		"prototype"
	],
	[
		"SVGAnimatedLength"
	],
	[
		"SVGAnimatedLength",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedLength",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedLength",
		"prototype"
	],
	[
		"SVGAnimatedLengthList"
	],
	[
		"SVGAnimatedLengthList",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedLengthList",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedLengthList",
		"prototype"
	],
	[
		"SVGAnimatedNumber"
	],
	[
		"SVGAnimatedNumber",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedNumber",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedNumber",
		"prototype"
	],
	[
		"SVGAnimatedNumberList"
	],
	[
		"SVGAnimatedNumberList",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedNumberList",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedNumberList",
		"prototype"
	],
	[
		"SVGAnimatedPreserveAspectRatio"
	],
	[
		"SVGAnimatedPreserveAspectRatio",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedPreserveAspectRatio",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedPreserveAspectRatio",
		"prototype"
	],
	[
		"SVGAnimatedRect"
	],
	[
		"SVGAnimatedRect",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedRect",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedRect",
		"prototype"
	],
	[
		"SVGAnimatedString"
	],
	[
		"SVGAnimatedString",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedString",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedString",
		"prototype"
	],
	[
		"SVGAnimatedTransformList"
	],
	[
		"SVGAnimatedTransformList",
		"prototype",
		"baseVal"
	],
	[
		"SVGAnimatedTransformList",
		"prototype",
		"animVal"
	],
	[
		"SVGAnimatedTransformList",
		"prototype"
	],
	[
		"SVGAnimateElement"
	],
	[
		"SVGAnimateElement",
		"prototype"
	],
	[
		"SVGAnimateMotionElement"
	],
	[
		"SVGAnimateMotionElement",
		"prototype"
	],
	[
		"SVGAnimateTransformElement"
	],
	[
		"SVGAnimateTransformElement",
		"prototype"
	],
	[
		"SVGAnimationElement"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"targetElement"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"systemLanguage"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"requiredExtensions"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"onrepeat"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"onend"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"onbegin"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"getStartTime()"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"getSimpleDuration()"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"getCurrentTime()"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"endElementAt()"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"endElement()"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"beginElementAt()"
	],
	[
		"SVGAnimationElement",
		"prototype",
		"beginElement()"
	],
	[
		"SVGAnimationElement",
		"prototype"
	],
	[
		"SVGCircleElement"
	],
	[
		"SVGCircleElement",
		"prototype",
		"r"
	],
	[
		"SVGCircleElement",
		"prototype",
		"cy"
	],
	[
		"SVGCircleElement",
		"prototype",
		"cx"
	],
	[
		"SVGCircleElement",
		"prototype"
	],
	[
		"SVGClipPathElement"
	],
	[
		"SVGClipPathElement",
		"prototype",
		"transform"
	],
	[
		"SVGClipPathElement",
		"prototype",
		"clipPathUnits"
	],
	[
		"SVGClipPathElement",
		"prototype"
	],
	[
		"SVGComponentTransferFunctionElement"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"type"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"tableValues"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"slope"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"offset"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"intercept"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"exponent"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"amplitude"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype",
		"SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
	],
	[
		"SVGComponentTransferFunctionElement",
		"prototype"
	],
	[
		"SVGComponentTransferFunctionElement",
		"SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
	],
	[
		"SVGComponentTransferFunctionElement",
		"SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
	],
	[
		"SVGComponentTransferFunctionElement",
		"SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
	],
	[
		"SVGComponentTransferFunctionElement",
		"SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
	],
	[
		"SVGComponentTransferFunctionElement",
		"SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
	],
	[
		"SVGComponentTransferFunctionElement",
		"SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
	],
	[
		"SVGDefsElement"
	],
	[
		"SVGDefsElement",
		"prototype"
	],
	[
		"SVGDescElement"
	],
	[
		"SVGDescElement",
		"prototype"
	],
	[
		"SVGDiscardElement"
	],
	[
		"SVGDiscardElement",
		"prototype"
	],
	[
		"SVGElement"
	],
	[
		"SVGElement",
		"prototype",
		"viewportElement"
	],
	[
		"SVGElement",
		"prototype",
		"tabIndex"
	],
	[
		"SVGElement",
		"prototype",
		"style"
	],
	[
		"SVGElement",
		"prototype",
		"ownerSVGElement"
	],
	[
		"SVGElement",
		"prototype",
		"onwheel"
	],
	[
		"SVGElement",
		"prototype",
		"onwebkittransitionend"
	],
	[
		"SVGElement",
		"prototype",
		"onwebkitanimationstart"
	],
	[
		"SVGElement",
		"prototype",
		"onwebkitanimationiteration"
	],
	[
		"SVGElement",
		"prototype",
		"onwebkitanimationend"
	],
	[
		"SVGElement",
		"prototype",
		"onwaiting"
	],
	[
		"SVGElement",
		"prototype",
		"onvolumechange"
	],
	[
		"SVGElement",
		"prototype",
		"ontransitionstart"
	],
	[
		"SVGElement",
		"prototype",
		"ontransitionrun"
	],
	[
		"SVGElement",
		"prototype",
		"ontransitionend"
	],
	[
		"SVGElement",
		"prototype",
		"ontransitioncancel"
	],
	[
		"SVGElement",
		"prototype",
		"ontouchstart"
	],
	[
		"SVGElement",
		"prototype",
		"ontouchmove"
	],
	[
		"SVGElement",
		"prototype",
		"ontouchend"
	],
	[
		"SVGElement",
		"prototype",
		"ontouchcancel"
	],
	[
		"SVGElement",
		"prototype",
		"ontoggle"
	],
	[
		"SVGElement",
		"prototype",
		"ontimeupdate"
	],
	[
		"SVGElement",
		"prototype",
		"onsuspend"
	],
	[
		"SVGElement",
		"prototype",
		"onsubmit"
	],
	[
		"SVGElement",
		"prototype",
		"onstalled"
	],
	[
		"SVGElement",
		"prototype",
		"onsnapchanging"
	],
	[
		"SVGElement",
		"prototype",
		"onsnapchanged"
	],
	[
		"SVGElement",
		"prototype",
		"onslotchange"
	],
	[
		"SVGElement",
		"prototype",
		"onselectstart"
	],
	[
		"SVGElement",
		"prototype",
		"onselectionchange"
	],
	[
		"SVGElement",
		"prototype",
		"onselect"
	],
	[
		"SVGElement",
		"prototype",
		"onseeking"
	],
	[
		"SVGElement",
		"prototype",
		"onseeked"
	],
	[
		"SVGElement",
		"prototype",
		"onsecuritypolicyviolation"
	],
	[
		"SVGElement",
		"prototype",
		"onscrollend"
	],
	[
		"SVGElement",
		"prototype",
		"onscroll"
	],
	[
		"SVGElement",
		"prototype",
		"onresize"
	],
	[
		"SVGElement",
		"prototype",
		"onreset"
	],
	[
		"SVGElement",
		"prototype",
		"onratechange"
	],
	[
		"SVGElement",
		"prototype",
		"onprogress"
	],
	[
		"SVGElement",
		"prototype",
		"onpointerup"
	],
	[
		"SVGElement",
		"prototype",
		"onpointerrawupdate"
	],
	[
		"SVGElement",
		"prototype",
		"onpointerover"
	],
	[
		"SVGElement",
		"prototype",
		"onpointerout"
	],
	[
		"SVGElement",
		"prototype",
		"onpointermove"
	],
	[
		"SVGElement",
		"prototype",
		"onpointerleave"
	],
	[
		"SVGElement",
		"prototype",
		"onpointerenter"
	],
	[
		"SVGElement",
		"prototype",
		"onpointerdown"
	],
	[
		"SVGElement",
		"prototype",
		"onpointercancel"
	],
	[
		"SVGElement",
		"prototype",
		"onplaying"
	],
	[
		"SVGElement",
		"prototype",
		"onplay"
	],
	[
		"SVGElement",
		"prototype",
		"onpause"
	],
	[
		"SVGElement",
		"prototype",
		"onpaste"
	],
	[
		"SVGElement",
		"prototype",
		"onmouseup"
	],
	[
		"SVGElement",
		"prototype",
		"onmouseover"
	],
	[
		"SVGElement",
		"prototype",
		"onmouseout"
	],
	[
		"SVGElement",
		"prototype",
		"onmousemove"
	],
	[
		"SVGElement",
		"prototype",
		"onmouseleave"
	],
	[
		"SVGElement",
		"prototype",
		"onmouseenter"
	],
	[
		"SVGElement",
		"prototype",
		"onmousedown"
	],
	[
		"SVGElement",
		"prototype",
		"onlostpointercapture"
	],
	[
		"SVGElement",
		"prototype",
		"onloadstart"
	],
	[
		"SVGElement",
		"prototype",
		"onloadedmetadata"
	],
	[
		"SVGElement",
		"prototype",
		"onloadeddata"
	],
	[
		"SVGElement",
		"prototype",
		"onload"
	],
	[
		"SVGElement",
		"prototype",
		"onkeyup"
	],
	[
		"SVGElement",
		"prototype",
		"onkeypress"
	],
	[
		"SVGElement",
		"prototype",
		"onkeydown"
	],
	[
		"SVGElement",
		"prototype",
		"oninvalid"
	],
	[
		"SVGElement",
		"prototype",
		"oninput"
	],
	[
		"SVGElement",
		"prototype",
		"ongotpointercapture"
	],
	[
		"SVGElement",
		"prototype",
		"onformdata"
	],
	[
		"SVGElement",
		"prototype",
		"onfocus"
	],
	[
		"SVGElement",
		"prototype",
		"onerror"
	],
	[
		"SVGElement",
		"prototype",
		"onended"
	],
	[
		"SVGElement",
		"prototype",
		"onemptied"
	],
	[
		"SVGElement",
		"prototype",
		"ondurationchange"
	],
	[
		"SVGElement",
		"prototype",
		"ondrop"
	],
	[
		"SVGElement",
		"prototype",
		"ondragstart"
	],
	[
		"SVGElement",
		"prototype",
		"ondragover"
	],
	[
		"SVGElement",
		"prototype",
		"ondragleave"
	],
	[
		"SVGElement",
		"prototype",
		"ondragenter"
	],
	[
		"SVGElement",
		"prototype",
		"ondragend"
	],
	[
		"SVGElement",
		"prototype",
		"ondrag"
	],
	[
		"SVGElement",
		"prototype",
		"ondblclick"
	],
	[
		"SVGElement",
		"prototype",
		"oncut"
	],
	[
		"SVGElement",
		"prototype",
		"oncuechange"
	],
	[
		"SVGElement",
		"prototype",
		"oncopy"
	],
	[
		"SVGElement",
		"prototype",
		"oncontextrestored"
	],
	[
		"SVGElement",
		"prototype",
		"oncontextmenu"
	],
	[
		"SVGElement",
		"prototype",
		"oncontextlost"
	],
	[
		"SVGElement",
		"prototype",
		"onclose"
	],
	[
		"SVGElement",
		"prototype",
		"onclick"
	],
	[
		"SVGElement",
		"prototype",
		"onchange"
	],
	[
		"SVGElement",
		"prototype",
		"oncanplaythrough"
	],
	[
		"SVGElement",
		"prototype",
		"oncanplay"
	],
	[
		"SVGElement",
		"prototype",
		"oncancel"
	],
	[
		"SVGElement",
		"prototype",
		"onblur"
	],
	[
		"SVGElement",
		"prototype",
		"onbeforexrselect"
	],
	[
		"SVGElement",
		"prototype",
		"onbeforetoggle"
	],
	[
		"SVGElement",
		"prototype",
		"onbeforematch"
	],
	[
		"SVGElement",
		"prototype",
		"onbeforeinput"
	],
	[
		"SVGElement",
		"prototype",
		"onauxclick"
	],
	[
		"SVGElement",
		"prototype",
		"onanimationstart"
	],
	[
		"SVGElement",
		"prototype",
		"onanimationiteration"
	],
	[
		"SVGElement",
		"prototype",
		"onanimationend"
	],
	[
		"SVGElement",
		"prototype",
		"onanimationcancel"
	],
	[
		"SVGElement",
		"prototype",
		"onabort"
	],
	[
		"SVGElement",
		"prototype",
		"nonce"
	],
	[
		"SVGElement",
		"prototype",
		"focus()"
	],
	[
		"SVGElement",
		"prototype",
		"dataset"
	],
	[
		"SVGElement",
		"prototype",
		"correspondingUseElement"
	],
	[
		"SVGElement",
		"prototype",
		"correspondingElement"
	],
	[
		"SVGElement",
		"prototype",
		"className"
	],
	[
		"SVGElement",
		"prototype",
		"blur()"
	],
	[
		"SVGElement",
		"prototype",
		"autofocus"
	],
	[
		"SVGElement",
		"prototype",
		"attributeStyleMap"
	],
	[
		"SVGElement",
		"prototype"
	],
	[
		"SVGEllipseElement"
	],
	[
		"SVGEllipseElement",
		"prototype",
		"ry"
	],
	[
		"SVGEllipseElement",
		"prototype",
		"rx"
	],
	[
		"SVGEllipseElement",
		"prototype",
		"cy"
	],
	[
		"SVGEllipseElement",
		"prototype",
		"cx"
	],
	[
		"SVGEllipseElement",
		"prototype"
	],
	[
		"SVGFEBlendElement"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"y"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"x"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"width"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"result"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"mode"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"in2"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"height"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_UNKNOWN"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_SOFT_LIGHT"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_SCREEN"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_SATURATION"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_OVERLAY"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_NORMAL"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_MULTIPLY"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_LUMINOSITY"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_LIGHTEN"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_HUE"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_HARD_LIGHT"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_EXCLUSION"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_DIFFERENCE"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_DARKEN"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_COLOR_DODGE"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_COLOR_BURN"
	],
	[
		"SVGFEBlendElement",
		"prototype",
		"SVG_FEBLEND_MODE_COLOR"
	],
	[
		"SVGFEBlendElement",
		"prototype"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_UNKNOWN"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_SOFT_LIGHT"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_SCREEN"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_SATURATION"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_OVERLAY"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_NORMAL"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_MULTIPLY"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_LUMINOSITY"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_LIGHTEN"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_HUE"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_HARD_LIGHT"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_EXCLUSION"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_DIFFERENCE"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_DARKEN"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_COLOR_DODGE"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_COLOR_BURN"
	],
	[
		"SVGFEBlendElement",
		"SVG_FEBLEND_MODE_COLOR"
	],
	[
		"SVGFEColorMatrixElement"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"y"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"x"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"width"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"values"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"type"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"result"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"height"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"SVG_FECOLORMATRIX_TYPE_UNKNOWN"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"SVG_FECOLORMATRIX_TYPE_SATURATE"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"SVG_FECOLORMATRIX_TYPE_MATRIX"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype",
		"SVG_FECOLORMATRIX_TYPE_HUEROTATE"
	],
	[
		"SVGFEColorMatrixElement",
		"prototype"
	],
	[
		"SVGFEColorMatrixElement",
		"SVG_FECOLORMATRIX_TYPE_UNKNOWN"
	],
	[
		"SVGFEColorMatrixElement",
		"SVG_FECOLORMATRIX_TYPE_SATURATE"
	],
	[
		"SVGFEColorMatrixElement",
		"SVG_FECOLORMATRIX_TYPE_MATRIX"
	],
	[
		"SVGFEColorMatrixElement",
		"SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA"
	],
	[
		"SVGFEColorMatrixElement",
		"SVG_FECOLORMATRIX_TYPE_HUEROTATE"
	],
	[
		"SVGFEComponentTransferElement"
	],
	[
		"SVGFEComponentTransferElement",
		"prototype",
		"y"
	],
	[
		"SVGFEComponentTransferElement",
		"prototype",
		"x"
	],
	[
		"SVGFEComponentTransferElement",
		"prototype",
		"width"
	],
	[
		"SVGFEComponentTransferElement",
		"prototype",
		"result"
	],
	[
		"SVGFEComponentTransferElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEComponentTransferElement",
		"prototype",
		"height"
	],
	[
		"SVGFEComponentTransferElement",
		"prototype"
	],
	[
		"SVGFECompositeElement"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"y"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"x"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"width"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"result"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"operator"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"k4"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"k3"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"k2"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"k1"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"in2"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"in1"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"height"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"SVG_FECOMPOSITE_OPERATOR_XOR"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"SVG_FECOMPOSITE_OPERATOR_UNKNOWN"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"SVG_FECOMPOSITE_OPERATOR_OVER"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"SVG_FECOMPOSITE_OPERATOR_OUT"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"SVG_FECOMPOSITE_OPERATOR_IN"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"SVG_FECOMPOSITE_OPERATOR_ATOP"
	],
	[
		"SVGFECompositeElement",
		"prototype",
		"SVG_FECOMPOSITE_OPERATOR_ARITHMETIC"
	],
	[
		"SVGFECompositeElement",
		"prototype"
	],
	[
		"SVGFECompositeElement",
		"SVG_FECOMPOSITE_OPERATOR_XOR"
	],
	[
		"SVGFECompositeElement",
		"SVG_FECOMPOSITE_OPERATOR_UNKNOWN"
	],
	[
		"SVGFECompositeElement",
		"SVG_FECOMPOSITE_OPERATOR_OVER"
	],
	[
		"SVGFECompositeElement",
		"SVG_FECOMPOSITE_OPERATOR_OUT"
	],
	[
		"SVGFECompositeElement",
		"SVG_FECOMPOSITE_OPERATOR_IN"
	],
	[
		"SVGFECompositeElement",
		"SVG_FECOMPOSITE_OPERATOR_ATOP"
	],
	[
		"SVGFECompositeElement",
		"SVG_FECOMPOSITE_OPERATOR_ARITHMETIC"
	],
	[
		"SVGFEConvolveMatrixElement"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"y"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"x"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"width"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"targetY"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"targetX"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"result"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"preserveAlpha"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"orderY"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"orderX"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"kernelUnitLengthY"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"kernelUnitLengthX"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"kernelMatrix"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"height"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"edgeMode"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"divisor"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"bias"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"SVG_EDGEMODE_WRAP"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"SVG_EDGEMODE_UNKNOWN"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"SVG_EDGEMODE_NONE"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype",
		"SVG_EDGEMODE_DUPLICATE"
	],
	[
		"SVGFEConvolveMatrixElement",
		"prototype"
	],
	[
		"SVGFEConvolveMatrixElement",
		"SVG_EDGEMODE_WRAP"
	],
	[
		"SVGFEConvolveMatrixElement",
		"SVG_EDGEMODE_UNKNOWN"
	],
	[
		"SVGFEConvolveMatrixElement",
		"SVG_EDGEMODE_NONE"
	],
	[
		"SVGFEConvolveMatrixElement",
		"SVG_EDGEMODE_DUPLICATE"
	],
	[
		"SVGFEDiffuseLightingElement"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"y"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"x"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"width"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"surfaceScale"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"result"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"kernelUnitLengthY"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"kernelUnitLengthX"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"height"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype",
		"diffuseConstant"
	],
	[
		"SVGFEDiffuseLightingElement",
		"prototype"
	],
	[
		"SVGFEDisplacementMapElement"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"yChannelSelector"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"y"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"xChannelSelector"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"x"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"width"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"scale"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"result"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"in2"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"height"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"SVG_CHANNEL_UNKNOWN"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"SVG_CHANNEL_R"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"SVG_CHANNEL_G"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"SVG_CHANNEL_B"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype",
		"SVG_CHANNEL_A"
	],
	[
		"SVGFEDisplacementMapElement",
		"prototype"
	],
	[
		"SVGFEDisplacementMapElement",
		"SVG_CHANNEL_UNKNOWN"
	],
	[
		"SVGFEDisplacementMapElement",
		"SVG_CHANNEL_R"
	],
	[
		"SVGFEDisplacementMapElement",
		"SVG_CHANNEL_G"
	],
	[
		"SVGFEDisplacementMapElement",
		"SVG_CHANNEL_B"
	],
	[
		"SVGFEDisplacementMapElement",
		"SVG_CHANNEL_A"
	],
	[
		"SVGFEDistantLightElement"
	],
	[
		"SVGFEDistantLightElement",
		"prototype",
		"elevation"
	],
	[
		"SVGFEDistantLightElement",
		"prototype",
		"azimuth"
	],
	[
		"SVGFEDistantLightElement",
		"prototype"
	],
	[
		"SVGFEDropShadowElement"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"y"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"x"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"width"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"stdDeviationY"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"stdDeviationX"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"setStdDeviation()"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"result"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"height"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"dy"
	],
	[
		"SVGFEDropShadowElement",
		"prototype",
		"dx"
	],
	[
		"SVGFEDropShadowElement",
		"prototype"
	],
	[
		"SVGFEFloodElement"
	],
	[
		"SVGFEFloodElement",
		"prototype",
		"y"
	],
	[
		"SVGFEFloodElement",
		"prototype",
		"x"
	],
	[
		"SVGFEFloodElement",
		"prototype",
		"width"
	],
	[
		"SVGFEFloodElement",
		"prototype",
		"result"
	],
	[
		"SVGFEFloodElement",
		"prototype",
		"height"
	],
	[
		"SVGFEFloodElement",
		"prototype"
	],
	[
		"SVGFEFuncAElement"
	],
	[
		"SVGFEFuncAElement",
		"prototype"
	],
	[
		"SVGFEFuncBElement"
	],
	[
		"SVGFEFuncBElement",
		"prototype"
	],
	[
		"SVGFEFuncGElement"
	],
	[
		"SVGFEFuncGElement",
		"prototype"
	],
	[
		"SVGFEFuncRElement"
	],
	[
		"SVGFEFuncRElement",
		"prototype"
	],
	[
		"SVGFEGaussianBlurElement"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"y"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"x"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"width"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"stdDeviationY"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"stdDeviationX"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"setStdDeviation()"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"result"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"height"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"edgeMode"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"SVG_EDGEMODE_WRAP"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"SVG_EDGEMODE_UNKNOWN"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"SVG_EDGEMODE_NONE"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype",
		"SVG_EDGEMODE_DUPLICATE"
	],
	[
		"SVGFEGaussianBlurElement",
		"prototype"
	],
	[
		"SVGFEGaussianBlurElement",
		"SVG_EDGEMODE_WRAP"
	],
	[
		"SVGFEGaussianBlurElement",
		"SVG_EDGEMODE_UNKNOWN"
	],
	[
		"SVGFEGaussianBlurElement",
		"SVG_EDGEMODE_NONE"
	],
	[
		"SVGFEGaussianBlurElement",
		"SVG_EDGEMODE_DUPLICATE"
	],
	[
		"SVGFEImageElement"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"y"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"x"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"width"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"result"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"preserveAspectRatio"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"href"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"height"
	],
	[
		"SVGFEImageElement",
		"prototype",
		"crossOrigin"
	],
	[
		"SVGFEImageElement",
		"prototype"
	],
	[
		"SVGFEMergeElement"
	],
	[
		"SVGFEMergeElement",
		"prototype",
		"y"
	],
	[
		"SVGFEMergeElement",
		"prototype",
		"x"
	],
	[
		"SVGFEMergeElement",
		"prototype",
		"width"
	],
	[
		"SVGFEMergeElement",
		"prototype",
		"result"
	],
	[
		"SVGFEMergeElement",
		"prototype",
		"height"
	],
	[
		"SVGFEMergeElement",
		"prototype"
	],
	[
		"SVGFEMergeNodeElement"
	],
	[
		"SVGFEMergeNodeElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEMergeNodeElement",
		"prototype"
	],
	[
		"SVGFEMorphologyElement"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"y"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"x"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"width"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"result"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"radiusY"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"radiusX"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"operator"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"height"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"SVG_MORPHOLOGY_OPERATOR_UNKNOWN"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"SVG_MORPHOLOGY_OPERATOR_ERODE"
	],
	[
		"SVGFEMorphologyElement",
		"prototype",
		"SVG_MORPHOLOGY_OPERATOR_DILATE"
	],
	[
		"SVGFEMorphologyElement",
		"prototype"
	],
	[
		"SVGFEMorphologyElement",
		"SVG_MORPHOLOGY_OPERATOR_UNKNOWN"
	],
	[
		"SVGFEMorphologyElement",
		"SVG_MORPHOLOGY_OPERATOR_ERODE"
	],
	[
		"SVGFEMorphologyElement",
		"SVG_MORPHOLOGY_OPERATOR_DILATE"
	],
	[
		"SVGFEOffsetElement"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"y"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"x"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"width"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"result"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"in1"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"height"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"dy"
	],
	[
		"SVGFEOffsetElement",
		"prototype",
		"dx"
	],
	[
		"SVGFEOffsetElement",
		"prototype"
	],
	[
		"SVGFEPointLightElement"
	],
	[
		"SVGFEPointLightElement",
		"prototype",
		"z"
	],
	[
		"SVGFEPointLightElement",
		"prototype",
		"y"
	],
	[
		"SVGFEPointLightElement",
		"prototype",
		"x"
	],
	[
		"SVGFEPointLightElement",
		"prototype"
	],
	[
		"SVGFESpecularLightingElement"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"y"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"x"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"width"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"surfaceScale"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"specularExponent"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"specularConstant"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"result"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"kernelUnitLengthY"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"kernelUnitLengthX"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"in1"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype",
		"height"
	],
	[
		"SVGFESpecularLightingElement",
		"prototype"
	],
	[
		"SVGFESpotLightElement"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"z"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"y"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"x"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"specularExponent"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"pointsAtZ"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"pointsAtY"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"pointsAtX"
	],
	[
		"SVGFESpotLightElement",
		"prototype",
		"limitingConeAngle"
	],
	[
		"SVGFESpotLightElement",
		"prototype"
	],
	[
		"SVGFETileElement"
	],
	[
		"SVGFETileElement",
		"prototype",
		"y"
	],
	[
		"SVGFETileElement",
		"prototype",
		"x"
	],
	[
		"SVGFETileElement",
		"prototype",
		"width"
	],
	[
		"SVGFETileElement",
		"prototype",
		"result"
	],
	[
		"SVGFETileElement",
		"prototype",
		"in1"
	],
	[
		"SVGFETileElement",
		"prototype",
		"height"
	],
	[
		"SVGFETileElement",
		"prototype"
	],
	[
		"SVGFETurbulenceElement"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"y"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"x"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"width"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"type"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"stitchTiles"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"seed"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"result"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"numOctaves"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"height"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"baseFrequencyY"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"baseFrequencyX"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"SVG_TURBULENCE_TYPE_UNKNOWN"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"SVG_TURBULENCE_TYPE_TURBULENCE"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"SVG_TURBULENCE_TYPE_FRACTALNOISE"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"SVG_STITCHTYPE_UNKNOWN"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"SVG_STITCHTYPE_STITCH"
	],
	[
		"SVGFETurbulenceElement",
		"prototype",
		"SVG_STITCHTYPE_NOSTITCH"
	],
	[
		"SVGFETurbulenceElement",
		"prototype"
	],
	[
		"SVGFETurbulenceElement",
		"SVG_TURBULENCE_TYPE_UNKNOWN"
	],
	[
		"SVGFETurbulenceElement",
		"SVG_TURBULENCE_TYPE_TURBULENCE"
	],
	[
		"SVGFETurbulenceElement",
		"SVG_TURBULENCE_TYPE_FRACTALNOISE"
	],
	[
		"SVGFETurbulenceElement",
		"SVG_STITCHTYPE_UNKNOWN"
	],
	[
		"SVGFETurbulenceElement",
		"SVG_STITCHTYPE_STITCH"
	],
	[
		"SVGFETurbulenceElement",
		"SVG_STITCHTYPE_NOSTITCH"
	],
	[
		"SVGFilterElement"
	],
	[
		"SVGFilterElement",
		"prototype",
		"y"
	],
	[
		"SVGFilterElement",
		"prototype",
		"x"
	],
	[
		"SVGFilterElement",
		"prototype",
		"width"
	],
	[
		"SVGFilterElement",
		"prototype",
		"primitiveUnits"
	],
	[
		"SVGFilterElement",
		"prototype",
		"href"
	],
	[
		"SVGFilterElement",
		"prototype",
		"height"
	],
	[
		"SVGFilterElement",
		"prototype",
		"filterUnits"
	],
	[
		"SVGFilterElement",
		"prototype"
	],
	[
		"SVGForeignObjectElement"
	],
	[
		"SVGForeignObjectElement",
		"prototype",
		"y"
	],
	[
		"SVGForeignObjectElement",
		"prototype",
		"x"
	],
	[
		"SVGForeignObjectElement",
		"prototype",
		"width"
	],
	[
		"SVGForeignObjectElement",
		"prototype",
		"height"
	],
	[
		"SVGForeignObjectElement",
		"prototype"
	],
	[
		"SVGGElement"
	],
	[
		"SVGGElement",
		"prototype"
	],
	[
		"SVGGeometryElement"
	],
	[
		"SVGGeometryElement",
		"prototype",
		"pathLength"
	],
	[
		"SVGGeometryElement",
		"prototype",
		"isPointInStroke()"
	],
	[
		"SVGGeometryElement",
		"prototype",
		"isPointInFill()"
	],
	[
		"SVGGeometryElement",
		"prototype",
		"getTotalLength()"
	],
	[
		"SVGGeometryElement",
		"prototype",
		"getPointAtLength()"
	],
	[
		"SVGGeometryElement",
		"prototype"
	],
	[
		"SVGGradientElement"
	],
	[
		"SVGGradientElement",
		"prototype",
		"spreadMethod"
	],
	[
		"SVGGradientElement",
		"prototype",
		"href"
	],
	[
		"SVGGradientElement",
		"prototype",
		"gradientUnits"
	],
	[
		"SVGGradientElement",
		"prototype",
		"gradientTransform"
	],
	[
		"SVGGradientElement",
		"prototype",
		"SVG_SPREADMETHOD_UNKNOWN"
	],
	[
		"SVGGradientElement",
		"prototype",
		"SVG_SPREADMETHOD_REPEAT"
	],
	[
		"SVGGradientElement",
		"prototype",
		"SVG_SPREADMETHOD_REFLECT"
	],
	[
		"SVGGradientElement",
		"prototype",
		"SVG_SPREADMETHOD_PAD"
	],
	[
		"SVGGradientElement",
		"prototype"
	],
	[
		"SVGGradientElement",
		"SVG_SPREADMETHOD_UNKNOWN"
	],
	[
		"SVGGradientElement",
		"SVG_SPREADMETHOD_REPEAT"
	],
	[
		"SVGGradientElement",
		"SVG_SPREADMETHOD_REFLECT"
	],
	[
		"SVGGradientElement",
		"SVG_SPREADMETHOD_PAD"
	],
	[
		"SVGGraphicsElement"
	],
	[
		"SVGGraphicsElement",
		"prototype",
		"transform"
	],
	[
		"SVGGraphicsElement",
		"prototype",
		"systemLanguage"
	],
	[
		"SVGGraphicsElement",
		"prototype",
		"requiredExtensions"
	],
	[
		"SVGGraphicsElement",
		"prototype",
		"getScreenCTM()"
	],
	[
		"SVGGraphicsElement",
		"prototype",
		"getCTM()"
	],
	[
		"SVGGraphicsElement",
		"prototype",
		"getBBox()"
	],
	[
		"SVGGraphicsElement",
		"prototype"
	],
	[
		"SVGImageElement"
	],
	[
		"SVGImageElement",
		"prototype",
		"y"
	],
	[
		"SVGImageElement",
		"prototype",
		"x"
	],
	[
		"SVGImageElement",
		"prototype",
		"width"
	],
	[
		"SVGImageElement",
		"prototype",
		"preserveAspectRatio"
	],
	[
		"SVGImageElement",
		"prototype",
		"href"
	],
	[
		"SVGImageElement",
		"prototype",
		"height"
	],
	[
		"SVGImageElement",
		"prototype",
		"crossOrigin"
	],
	[
		"SVGImageElement",
		"prototype"
	],
	[
		"SVGLength"
	],
	[
		"SVGLength",
		"prototype",
		"valueInSpecifiedUnits"
	],
	[
		"SVGLength",
		"prototype",
		"valueAsString"
	],
	[
		"SVGLength",
		"prototype",
		"value"
	],
	[
		"SVGLength",
		"prototype",
		"unitType"
	],
	[
		"SVGLength",
		"prototype",
		"newValueSpecifiedUnits()"
	],
	[
		"SVGLength",
		"prototype",
		"convertToSpecifiedUnits()"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_UNKNOWN"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_PX"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_PT"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_PERCENTAGE"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_PC"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_NUMBER"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_MM"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_IN"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_EXS"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_EMS"
	],
	[
		"SVGLength",
		"prototype",
		"SVG_LENGTHTYPE_CM"
	],
	[
		"SVGLength",
		"prototype"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_UNKNOWN"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_PX"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_PT"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_PERCENTAGE"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_PC"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_NUMBER"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_MM"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_IN"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_EXS"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_EMS"
	],
	[
		"SVGLength",
		"SVG_LENGTHTYPE_CM"
	],
	[
		"SVGLengthList"
	],
	[
		"SVGLengthList",
		"prototype",
		"replaceItem()"
	],
	[
		"SVGLengthList",
		"prototype",
		"removeItem()"
	],
	[
		"SVGLengthList",
		"prototype",
		"numberOfItems"
	],
	[
		"SVGLengthList",
		"prototype",
		"length"
	],
	[
		"SVGLengthList",
		"prototype",
		"insertItemBefore()"
	],
	[
		"SVGLengthList",
		"prototype",
		"initialize()"
	],
	[
		"SVGLengthList",
		"prototype",
		"getItem()"
	],
	[
		"SVGLengthList",
		"prototype",
		"clear()"
	],
	[
		"SVGLengthList",
		"prototype",
		"appendItem()"
	],
	[
		"SVGLengthList",
		"prototype"
	],
	[
		"SVGLinearGradientElement"
	],
	[
		"SVGLinearGradientElement",
		"prototype",
		"y2"
	],
	[
		"SVGLinearGradientElement",
		"prototype",
		"y1"
	],
	[
		"SVGLinearGradientElement",
		"prototype",
		"x2"
	],
	[
		"SVGLinearGradientElement",
		"prototype",
		"x1"
	],
	[
		"SVGLinearGradientElement",
		"prototype"
	],
	[
		"SVGLineElement"
	],
	[
		"SVGLineElement",
		"prototype",
		"y2"
	],
	[
		"SVGLineElement",
		"prototype",
		"y1"
	],
	[
		"SVGLineElement",
		"prototype",
		"x2"
	],
	[
		"SVGLineElement",
		"prototype",
		"x1"
	],
	[
		"SVGLineElement",
		"prototype"
	],
	[
		"SVGMarkerElement"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"viewBox"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"setOrientToAuto()"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"setOrientToAngle()"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"refY"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"refX"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"preserveAspectRatio"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"orientType"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"orientAngle"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"orient"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"markerWidth"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"markerUnits"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"markerHeight"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"SVG_MARKER_ORIENT_UNKNOWN"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"SVG_MARKER_ORIENT_AUTO"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"SVG_MARKER_ORIENT_ANGLE"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"SVG_MARKERUNITS_USERSPACEONUSE"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"SVG_MARKERUNITS_UNKNOWN"
	],
	[
		"SVGMarkerElement",
		"prototype",
		"SVG_MARKERUNITS_STROKEWIDTH"
	],
	[
		"SVGMarkerElement",
		"prototype"
	],
	[
		"SVGMarkerElement",
		"SVG_MARKER_ORIENT_UNKNOWN"
	],
	[
		"SVGMarkerElement",
		"SVG_MARKER_ORIENT_AUTO"
	],
	[
		"SVGMarkerElement",
		"SVG_MARKER_ORIENT_ANGLE"
	],
	[
		"SVGMarkerElement",
		"SVG_MARKERUNITS_USERSPACEONUSE"
	],
	[
		"SVGMarkerElement",
		"SVG_MARKERUNITS_UNKNOWN"
	],
	[
		"SVGMarkerElement",
		"SVG_MARKERUNITS_STROKEWIDTH"
	],
	[
		"SVGMaskElement"
	],
	[
		"SVGMaskElement",
		"prototype",
		"y"
	],
	[
		"SVGMaskElement",
		"prototype",
		"x"
	],
	[
		"SVGMaskElement",
		"prototype",
		"width"
	],
	[
		"SVGMaskElement",
		"prototype",
		"maskUnits"
	],
	[
		"SVGMaskElement",
		"prototype",
		"maskContentUnits"
	],
	[
		"SVGMaskElement",
		"prototype",
		"height"
	],
	[
		"SVGMaskElement",
		"prototype"
	],
	[
		"SVGMetadataElement"
	],
	[
		"SVGMetadataElement",
		"prototype"
	],
	[
		"SVGMPathElement"
	],
	[
		"SVGMPathElement",
		"prototype",
		"href"
	],
	[
		"SVGMPathElement",
		"prototype"
	],
	[
		"SVGNumber"
	],
	[
		"SVGNumber",
		"prototype",
		"value"
	],
	[
		"SVGNumber",
		"prototype"
	],
	[
		"SVGNumberList"
	],
	[
		"SVGNumberList",
		"prototype",
		"replaceItem()"
	],
	[
		"SVGNumberList",
		"prototype",
		"removeItem()"
	],
	[
		"SVGNumberList",
		"prototype",
		"numberOfItems"
	],
	[
		"SVGNumberList",
		"prototype",
		"length"
	],
	[
		"SVGNumberList",
		"prototype",
		"insertItemBefore()"
	],
	[
		"SVGNumberList",
		"prototype",
		"initialize()"
	],
	[
		"SVGNumberList",
		"prototype",
		"getItem()"
	],
	[
		"SVGNumberList",
		"prototype",
		"clear()"
	],
	[
		"SVGNumberList",
		"prototype",
		"appendItem()"
	],
	[
		"SVGNumberList",
		"prototype"
	],
	[
		"SVGPathElement"
	],
	[
		"SVGPathElement",
		"prototype"
	],
	[
		"SVGPatternElement"
	],
	[
		"SVGPatternElement",
		"prototype",
		"y"
	],
	[
		"SVGPatternElement",
		"prototype",
		"x"
	],
	[
		"SVGPatternElement",
		"prototype",
		"width"
	],
	[
		"SVGPatternElement",
		"prototype",
		"viewBox"
	],
	[
		"SVGPatternElement",
		"prototype",
		"preserveAspectRatio"
	],
	[
		"SVGPatternElement",
		"prototype",
		"patternUnits"
	],
	[
		"SVGPatternElement",
		"prototype",
		"patternTransform"
	],
	[
		"SVGPatternElement",
		"prototype",
		"patternContentUnits"
	],
	[
		"SVGPatternElement",
		"prototype",
		"href"
	],
	[
		"SVGPatternElement",
		"prototype",
		"height"
	],
	[
		"SVGPatternElement",
		"prototype"
	],
	[
		"SVGPointList"
	],
	[
		"SVGPointList",
		"prototype",
		"replaceItem()"
	],
	[
		"SVGPointList",
		"prototype",
		"removeItem()"
	],
	[
		"SVGPointList",
		"prototype",
		"numberOfItems"
	],
	[
		"SVGPointList",
		"prototype",
		"length"
	],
	[
		"SVGPointList",
		"prototype",
		"insertItemBefore()"
	],
	[
		"SVGPointList",
		"prototype",
		"initialize()"
	],
	[
		"SVGPointList",
		"prototype",
		"getItem()"
	],
	[
		"SVGPointList",
		"prototype",
		"clear()"
	],
	[
		"SVGPointList",
		"prototype",
		"appendItem()"
	],
	[
		"SVGPointList",
		"prototype"
	],
	[
		"SVGPolygonElement"
	],
	[
		"SVGPolygonElement",
		"prototype",
		"points"
	],
	[
		"SVGPolygonElement",
		"prototype",
		"animatedPoints"
	],
	[
		"SVGPolygonElement",
		"prototype"
	],
	[
		"SVGPolylineElement"
	],
	[
		"SVGPolylineElement",
		"prototype",
		"points"
	],
	[
		"SVGPolylineElement",
		"prototype",
		"animatedPoints"
	],
	[
		"SVGPolylineElement",
		"prototype"
	],
	[
		"SVGPreserveAspectRatio"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"meetOrSlice"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"align"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMINYMIN"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMINYMID"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMINYMAX"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMIDYMIN"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMIDYMID"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMIDYMAX"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMAXYMIN"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMAXYMID"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_XMAXYMAX"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_UNKNOWN"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_PRESERVEASPECTRATIO_NONE"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_MEETORSLICE_UNKNOWN"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_MEETORSLICE_SLICE"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype",
		"SVG_MEETORSLICE_MEET"
	],
	[
		"SVGPreserveAspectRatio",
		"prototype"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMINYMIN"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMINYMID"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMINYMAX"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMIDYMIN"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMIDYMID"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMIDYMAX"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMAXYMIN"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMAXYMID"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_XMAXYMAX"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_UNKNOWN"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_PRESERVEASPECTRATIO_NONE"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_MEETORSLICE_UNKNOWN"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_MEETORSLICE_SLICE"
	],
	[
		"SVGPreserveAspectRatio",
		"SVG_MEETORSLICE_MEET"
	],
	[
		"SVGRadialGradientElement"
	],
	[
		"SVGRadialGradientElement",
		"prototype",
		"r"
	],
	[
		"SVGRadialGradientElement",
		"prototype",
		"fy"
	],
	[
		"SVGRadialGradientElement",
		"prototype",
		"fx"
	],
	[
		"SVGRadialGradientElement",
		"prototype",
		"fr"
	],
	[
		"SVGRadialGradientElement",
		"prototype",
		"cy"
	],
	[
		"SVGRadialGradientElement",
		"prototype",
		"cx"
	],
	[
		"SVGRadialGradientElement",
		"prototype"
	],
	[
		"SVGRectElement"
	],
	[
		"SVGRectElement",
		"prototype",
		"y"
	],
	[
		"SVGRectElement",
		"prototype",
		"x"
	],
	[
		"SVGRectElement",
		"prototype",
		"width"
	],
	[
		"SVGRectElement",
		"prototype",
		"ry"
	],
	[
		"SVGRectElement",
		"prototype",
		"rx"
	],
	[
		"SVGRectElement",
		"prototype",
		"height"
	],
	[
		"SVGRectElement",
		"prototype"
	],
	[
		"SVGScriptElement"
	],
	[
		"SVGScriptElement",
		"prototype",
		"type"
	],
	[
		"SVGScriptElement",
		"prototype",
		"href"
	],
	[
		"SVGScriptElement",
		"prototype",
		"crossOrigin"
	],
	[
		"SVGScriptElement",
		"prototype"
	],
	[
		"SVGSetElement"
	],
	[
		"SVGSetElement",
		"prototype"
	],
	[
		"SVGStopElement"
	],
	[
		"SVGStopElement",
		"prototype",
		"offset"
	],
	[
		"SVGStopElement",
		"prototype"
	],
	[
		"SVGStringList"
	],
	[
		"SVGStringList",
		"prototype",
		"replaceItem()"
	],
	[
		"SVGStringList",
		"prototype",
		"removeItem()"
	],
	[
		"SVGStringList",
		"prototype",
		"numberOfItems"
	],
	[
		"SVGStringList",
		"prototype",
		"length"
	],
	[
		"SVGStringList",
		"prototype",
		"insertItemBefore()"
	],
	[
		"SVGStringList",
		"prototype",
		"initialize()"
	],
	[
		"SVGStringList",
		"prototype",
		"getItem()"
	],
	[
		"SVGStringList",
		"prototype",
		"clear()"
	],
	[
		"SVGStringList",
		"prototype",
		"appendItem()"
	],
	[
		"SVGStringList",
		"prototype"
	],
	[
		"SVGStyleElement"
	],
	[
		"SVGStyleElement",
		"prototype",
		"type"
	],
	[
		"SVGStyleElement",
		"prototype",
		"title"
	],
	[
		"SVGStyleElement",
		"prototype",
		"sheet"
	],
	[
		"SVGStyleElement",
		"prototype",
		"media"
	],
	[
		"SVGStyleElement",
		"prototype"
	],
	[
		"SVGSVGElement"
	],
	[
		"SVGSVGElement",
		"prototype",
		"y"
	],
	[
		"SVGSVGElement",
		"prototype",
		"x"
	],
	[
		"SVGSVGElement",
		"prototype",
		"width"
	],
	[
		"SVGSVGElement",
		"prototype",
		"viewBox"
	],
	[
		"SVGSVGElement",
		"prototype",
		"unsuspendRedrawAll()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"unsuspendRedraw()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"unpauseAnimations()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"suspendRedraw()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"setCurrentTime()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"preserveAspectRatio"
	],
	[
		"SVGSVGElement",
		"prototype",
		"pauseAnimations()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onunload"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onunhandledrejection"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onstorage"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onrejectionhandled"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onportalactivate"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onpopstate"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onpageswap"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onpageshow"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onpagereveal"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onpagehide"
	],
	[
		"SVGSVGElement",
		"prototype",
		"ononline"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onoffline"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onmessageerror"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onmessage"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onlanguagechange"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onhashchange"
	],
	[
		"SVGSVGElement",
		"prototype",
		"ongamepaddisconnected"
	],
	[
		"SVGSVGElement",
		"prototype",
		"ongamepadconnected"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onbeforeunload"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onbeforeprint"
	],
	[
		"SVGSVGElement",
		"prototype",
		"onafterprint"
	],
	[
		"SVGSVGElement",
		"prototype",
		"height"
	],
	[
		"SVGSVGElement",
		"prototype",
		"getIntersectionList()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"getEnclosureList()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"getElementById()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"getCurrentTime()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"forceRedraw()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"deselectAll()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"currentTranslate"
	],
	[
		"SVGSVGElement",
		"prototype",
		"currentScale"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGTransformFromMatrix()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGTransform()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGRect()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGPoint()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGNumber()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGMatrix()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGLength()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"createSVGAngle()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"checkIntersection()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"checkEnclosure()"
	],
	[
		"SVGSVGElement",
		"prototype",
		"animationsPaused()"
	],
	[
		"SVGSVGElement",
		"prototype"
	],
	[
		"SVGSwitchElement"
	],
	[
		"SVGSwitchElement",
		"prototype"
	],
	[
		"SVGSymbolElement"
	],
	[
		"SVGSymbolElement",
		"prototype",
		"viewBox"
	],
	[
		"SVGSymbolElement",
		"prototype",
		"preserveAspectRatio"
	],
	[
		"SVGSymbolElement",
		"prototype"
	],
	[
		"SVGTextContentElement"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"textLength"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"selectSubString()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"lengthAdjust"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getSubStringLength()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getStartPositionOfChar()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getRotationOfChar()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getNumberOfChars()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getExtentOfChar()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getEndPositionOfChar()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getComputedTextLength()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"getCharNumAtPosition()"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"LENGTHADJUST_UNKNOWN"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"LENGTHADJUST_SPACINGANDGLYPHS"
	],
	[
		"SVGTextContentElement",
		"prototype",
		"LENGTHADJUST_SPACING"
	],
	[
		"SVGTextContentElement",
		"prototype"
	],
	[
		"SVGTextContentElement",
		"LENGTHADJUST_UNKNOWN"
	],
	[
		"SVGTextContentElement",
		"LENGTHADJUST_SPACINGANDGLYPHS"
	],
	[
		"SVGTextContentElement",
		"LENGTHADJUST_SPACING"
	],
	[
		"SVGTextElement"
	],
	[
		"SVGTextElement",
		"prototype"
	],
	[
		"SVGTextPathElement"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"startOffset"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"spacing"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"method"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"href"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"TEXTPATH_SPACINGTYPE_UNKNOWN"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"TEXTPATH_SPACINGTYPE_EXACT"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"TEXTPATH_SPACINGTYPE_AUTO"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"TEXTPATH_METHODTYPE_UNKNOWN"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"TEXTPATH_METHODTYPE_STRETCH"
	],
	[
		"SVGTextPathElement",
		"prototype",
		"TEXTPATH_METHODTYPE_ALIGN"
	],
	[
		"SVGTextPathElement",
		"prototype"
	],
	[
		"SVGTextPathElement",
		"TEXTPATH_SPACINGTYPE_UNKNOWN"
	],
	[
		"SVGTextPathElement",
		"TEXTPATH_SPACINGTYPE_EXACT"
	],
	[
		"SVGTextPathElement",
		"TEXTPATH_SPACINGTYPE_AUTO"
	],
	[
		"SVGTextPathElement",
		"TEXTPATH_METHODTYPE_UNKNOWN"
	],
	[
		"SVGTextPathElement",
		"TEXTPATH_METHODTYPE_STRETCH"
	],
	[
		"SVGTextPathElement",
		"TEXTPATH_METHODTYPE_ALIGN"
	],
	[
		"SVGTextPositioningElement"
	],
	[
		"SVGTextPositioningElement",
		"prototype",
		"y"
	],
	[
		"SVGTextPositioningElement",
		"prototype",
		"x"
	],
	[
		"SVGTextPositioningElement",
		"prototype",
		"rotate"
	],
	[
		"SVGTextPositioningElement",
		"prototype",
		"dy"
	],
	[
		"SVGTextPositioningElement",
		"prototype",
		"dx"
	],
	[
		"SVGTextPositioningElement",
		"prototype"
	],
	[
		"SVGTitleElement"
	],
	[
		"SVGTitleElement",
		"prototype"
	],
	[
		"SVGTransform"
	],
	[
		"SVGTransform",
		"prototype",
		"type"
	],
	[
		"SVGTransform",
		"prototype",
		"setTranslate()"
	],
	[
		"SVGTransform",
		"prototype",
		"setSkewY()"
	],
	[
		"SVGTransform",
		"prototype",
		"setSkewX()"
	],
	[
		"SVGTransform",
		"prototype",
		"setScale()"
	],
	[
		"SVGTransform",
		"prototype",
		"setRotate()"
	],
	[
		"SVGTransform",
		"prototype",
		"setMatrix()"
	],
	[
		"SVGTransform",
		"prototype",
		"matrix"
	],
	[
		"SVGTransform",
		"prototype",
		"angle"
	],
	[
		"SVGTransform",
		"prototype",
		"SVG_TRANSFORM_UNKNOWN"
	],
	[
		"SVGTransform",
		"prototype",
		"SVG_TRANSFORM_TRANSLATE"
	],
	[
		"SVGTransform",
		"prototype",
		"SVG_TRANSFORM_SKEWY"
	],
	[
		"SVGTransform",
		"prototype",
		"SVG_TRANSFORM_SKEWX"
	],
	[
		"SVGTransform",
		"prototype",
		"SVG_TRANSFORM_SCALE"
	],
	[
		"SVGTransform",
		"prototype",
		"SVG_TRANSFORM_ROTATE"
	],
	[
		"SVGTransform",
		"prototype",
		"SVG_TRANSFORM_MATRIX"
	],
	[
		"SVGTransform",
		"prototype"
	],
	[
		"SVGTransform",
		"SVG_TRANSFORM_UNKNOWN"
	],
	[
		"SVGTransform",
		"SVG_TRANSFORM_TRANSLATE"
	],
	[
		"SVGTransform",
		"SVG_TRANSFORM_SKEWY"
	],
	[
		"SVGTransform",
		"SVG_TRANSFORM_SKEWX"
	],
	[
		"SVGTransform",
		"SVG_TRANSFORM_SCALE"
	],
	[
		"SVGTransform",
		"SVG_TRANSFORM_ROTATE"
	],
	[
		"SVGTransform",
		"SVG_TRANSFORM_MATRIX"
	],
	[
		"SVGTransformList"
	],
	[
		"SVGTransformList",
		"prototype",
		"replaceItem()"
	],
	[
		"SVGTransformList",
		"prototype",
		"removeItem()"
	],
	[
		"SVGTransformList",
		"prototype",
		"numberOfItems"
	],
	[
		"SVGTransformList",
		"prototype",
		"length"
	],
	[
		"SVGTransformList",
		"prototype",
		"insertItemBefore()"
	],
	[
		"SVGTransformList",
		"prototype",
		"initialize()"
	],
	[
		"SVGTransformList",
		"prototype",
		"getItem()"
	],
	[
		"SVGTransformList",
		"prototype",
		"createSVGTransformFromMatrix()"
	],
	[
		"SVGTransformList",
		"prototype",
		"consolidate()"
	],
	[
		"SVGTransformList",
		"prototype",
		"clear()"
	],
	[
		"SVGTransformList",
		"prototype",
		"appendItem()"
	],
	[
		"SVGTransformList",
		"prototype"
	],
	[
		"SVGTSpanElement"
	],
	[
		"SVGTSpanElement",
		"prototype"
	],
	[
		"SVGUnitTypes"
	],
	[
		"SVGUnitTypes",
		"prototype",
		"SVG_UNIT_TYPE_USERSPACEONUSE"
	],
	[
		"SVGUnitTypes",
		"prototype",
		"SVG_UNIT_TYPE_UNKNOWN"
	],
	[
		"SVGUnitTypes",
		"prototype",
		"SVG_UNIT_TYPE_OBJECTBOUNDINGBOX"
	],
	[
		"SVGUnitTypes",
		"prototype"
	],
	[
		"SVGUnitTypes",
		"SVG_UNIT_TYPE_USERSPACEONUSE"
	],
	[
		"SVGUnitTypes",
		"SVG_UNIT_TYPE_UNKNOWN"
	],
	[
		"SVGUnitTypes",
		"SVG_UNIT_TYPE_OBJECTBOUNDINGBOX"
	],
	[
		"SVGUseElement"
	],
	[
		"SVGUseElement",
		"prototype",
		"y"
	],
	[
		"SVGUseElement",
		"prototype",
		"x"
	],
	[
		"SVGUseElement",
		"prototype",
		"width"
	],
	[
		"SVGUseElement",
		"prototype",
		"instanceRoot"
	],
	[
		"SVGUseElement",
		"prototype",
		"href"
	],
	[
		"SVGUseElement",
		"prototype",
		"height"
	],
	[
		"SVGUseElement",
		"prototype",
		"animatedInstanceRoot"
	],
	[
		"SVGUseElement",
		"prototype"
	],
	[
		"SVGUseElementShadowRoot"
	],
	[
		"SVGUseElementShadowRoot",
		"prototype"
	],
	[
		"SVGViewElement"
	],
	[
		"SVGViewElement",
		"prototype",
		"viewBox"
	],
	[
		"SVGViewElement",
		"prototype",
		"preserveAspectRatio"
	],
	[
		"SVGViewElement",
		"prototype"
	],
	[
		"SyncEvent"
	],
	[
		"SyncEvent",
		"prototype",
		"tag"
	],
	[
		"SyncEvent",
		"prototype",
		"lastChance"
	],
	[
		"SyncEvent",
		"prototype"
	],
	[
		"SyncManager"
	],
	[
		"SyncManager",
		"prototype",
		"register()"
	],
	[
		"SyncManager",
		"prototype",
		"getTags()"
	],
	[
		"SyncManager",
		"prototype"
	],
	[
		"Table"
	],
	[
		"Table",
		"prototype",
		"set()"
	],
	[
		"Table",
		"prototype",
		"length"
	],
	[
		"Table",
		"prototype",
		"grow()"
	],
	[
		"Table",
		"prototype",
		"get()"
	],
	[
		"Table",
		"prototype"
	],
	[
		"TaskAttributionTiming"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"toJSON()"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"startTime"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"name"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"entryType"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"duration"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"containerType"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"containerSrc"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"containerName"
	],
	[
		"TaskAttributionTiming",
		"prototype",
		"containerId"
	],
	[
		"TaskAttributionTiming",
		"prototype"
	],
	[
		"TaskController"
	],
	[
		"TaskController",
		"prototype",
		"setPriority()"
	],
	[
		"TaskController",
		"prototype"
	],
	[
		"TaskPriorityChangeEvent"
	],
	[
		"TaskPriorityChangeEvent",
		"prototype",
		"previousPriority"
	],
	[
		"TaskPriorityChangeEvent",
		"prototype"
	],
	[
		"TaskSignal"
	],
	[
		"TaskSignal",
		"prototype",
		"priority"
	],
	[
		"TaskSignal",
		"prototype",
		"onprioritychange"
	],
	[
		"TaskSignal",
		"prototype"
	],
	[
		"TaskSignal",
		"any()"
	],
	[
		"TestUtils"
	],
	[
		"TestUtils",
		"gc()"
	],
	[
		"Text"
	],
	[
		"Text",
		"prototype",
		"wholeText"
	],
	[
		"Text",
		"prototype",
		"splitText()"
	],
	[
		"Text",
		"prototype",
		"getBoxQuads()"
	],
	[
		"Text",
		"prototype",
		"convertRectFromNode()"
	],
	[
		"Text",
		"prototype",
		"convertQuadFromNode()"
	],
	[
		"Text",
		"prototype",
		"convertPointFromNode()"
	],
	[
		"Text",
		"prototype",
		"assignedSlot"
	],
	[
		"Text",
		"prototype"
	],
	[
		"TextDecoder"
	],
	[
		"TextDecoder",
		"prototype",
		"ignoreBOM"
	],
	[
		"TextDecoder",
		"prototype",
		"fatal"
	],
	[
		"TextDecoder",
		"prototype",
		"encoding"
	],
	[
		"TextDecoder",
		"prototype",
		"decode()"
	],
	[
		"TextDecoder",
		"prototype"
	],
	[
		"TextDecoderStream"
	],
	[
		"TextDecoderStream",
		"prototype",
		"writable"
	],
	[
		"TextDecoderStream",
		"prototype",
		"readable"
	],
	[
		"TextDecoderStream",
		"prototype",
		"ignoreBOM"
	],
	[
		"TextDecoderStream",
		"prototype",
		"fatal"
	],
	[
		"TextDecoderStream",
		"prototype",
		"encoding"
	],
	[
		"TextDecoderStream",
		"prototype"
	],
	[
		"TextDetector"
	],
	[
		"TextDetector",
		"prototype",
		"detect()"
	],
	[
		"TextDetector",
		"prototype"
	],
	[
		"TextEncoder"
	],
	[
		"TextEncoder",
		"prototype",
		"encoding"
	],
	[
		"TextEncoder",
		"prototype",
		"encodeInto()"
	],
	[
		"TextEncoder",
		"prototype",
		"encode()"
	],
	[
		"TextEncoder",
		"prototype"
	],
	[
		"TextEncoderStream"
	],
	[
		"TextEncoderStream",
		"prototype",
		"writable"
	],
	[
		"TextEncoderStream",
		"prototype",
		"readable"
	],
	[
		"TextEncoderStream",
		"prototype",
		"encoding"
	],
	[
		"TextEncoderStream",
		"prototype"
	],
	[
		"TextEvent"
	],
	[
		"TextEvent",
		"prototype",
		"initTextEvent()"
	],
	[
		"TextEvent",
		"prototype",
		"data"
	],
	[
		"TextEvent",
		"prototype"
	],
	[
		"TextFormat"
	],
	[
		"TextFormat",
		"prototype",
		"underlineThickness"
	],
	[
		"TextFormat",
		"prototype",
		"underlineStyle"
	],
	[
		"TextFormat",
		"prototype",
		"rangeStart"
	],
	[
		"TextFormat",
		"prototype",
		"rangeEnd"
	],
	[
		"TextFormat",
		"prototype"
	],
	[
		"TextFormatUpdateEvent"
	],
	[
		"TextFormatUpdateEvent",
		"prototype",
		"getTextFormats()"
	],
	[
		"TextFormatUpdateEvent",
		"prototype"
	],
	[
		"TextMetrics"
	],
	[
		"TextMetrics",
		"prototype",
		"width"
	],
	[
		"TextMetrics",
		"prototype",
		"ideographicBaseline"
	],
	[
		"TextMetrics",
		"prototype",
		"hangingBaseline"
	],
	[
		"TextMetrics",
		"prototype",
		"fontBoundingBoxDescent"
	],
	[
		"TextMetrics",
		"prototype",
		"fontBoundingBoxAscent"
	],
	[
		"TextMetrics",
		"prototype",
		"emHeightDescent"
	],
	[
		"TextMetrics",
		"prototype",
		"emHeightAscent"
	],
	[
		"TextMetrics",
		"prototype",
		"alphabeticBaseline"
	],
	[
		"TextMetrics",
		"prototype",
		"actualBoundingBoxRight"
	],
	[
		"TextMetrics",
		"prototype",
		"actualBoundingBoxLeft"
	],
	[
		"TextMetrics",
		"prototype",
		"actualBoundingBoxDescent"
	],
	[
		"TextMetrics",
		"prototype",
		"actualBoundingBoxAscent"
	],
	[
		"TextMetrics",
		"prototype"
	],
	[
		"TextTrack"
	],
	[
		"TextTrack",
		"prototype",
		"sourceBuffer"
	],
	[
		"TextTrack",
		"prototype",
		"removeCue()"
	],
	[
		"TextTrack",
		"prototype",
		"oncuechange"
	],
	[
		"TextTrack",
		"prototype",
		"mode"
	],
	[
		"TextTrack",
		"prototype",
		"language"
	],
	[
		"TextTrack",
		"prototype",
		"label"
	],
	[
		"TextTrack",
		"prototype",
		"kind"
	],
	[
		"TextTrack",
		"prototype",
		"inBandMetadataTrackDispatchType"
	],
	[
		"TextTrack",
		"prototype",
		"id"
	],
	[
		"TextTrack",
		"prototype",
		"cues"
	],
	[
		"TextTrack",
		"prototype",
		"addCue()"
	],
	[
		"TextTrack",
		"prototype",
		"activeCues"
	],
	[
		"TextTrack",
		"prototype"
	],
	[
		"TextTrackCue"
	],
	[
		"TextTrackCue",
		"prototype",
		"track"
	],
	[
		"TextTrackCue",
		"prototype",
		"startTime"
	],
	[
		"TextTrackCue",
		"prototype",
		"pauseOnExit"
	],
	[
		"TextTrackCue",
		"prototype",
		"onexit"
	],
	[
		"TextTrackCue",
		"prototype",
		"onenter"
	],
	[
		"TextTrackCue",
		"prototype",
		"id"
	],
	[
		"TextTrackCue",
		"prototype",
		"endTime"
	],
	[
		"TextTrackCue",
		"prototype"
	],
	[
		"TextTrackCueList"
	],
	[
		"TextTrackCueList",
		"prototype",
		"length"
	],
	[
		"TextTrackCueList",
		"prototype",
		"getCueById()"
	],
	[
		"TextTrackCueList",
		"prototype"
	],
	[
		"TextTrackList"
	],
	[
		"TextTrackList",
		"prototype",
		"onremovetrack"
	],
	[
		"TextTrackList",
		"prototype",
		"onchange"
	],
	[
		"TextTrackList",
		"prototype",
		"onaddtrack"
	],
	[
		"TextTrackList",
		"prototype",
		"length"
	],
	[
		"TextTrackList",
		"prototype",
		"getTrackById()"
	],
	[
		"TextTrackList",
		"prototype"
	],
	[
		"TextUpdateEvent"
	],
	[
		"TextUpdateEvent",
		"prototype",
		"updateRangeStart"
	],
	[
		"TextUpdateEvent",
		"prototype",
		"updateRangeEnd"
	],
	[
		"TextUpdateEvent",
		"prototype",
		"text"
	],
	[
		"TextUpdateEvent",
		"prototype",
		"selectionStart"
	],
	[
		"TextUpdateEvent",
		"prototype",
		"selectionEnd"
	],
	[
		"TextUpdateEvent",
		"prototype"
	],
	[
		"TimeEvent"
	],
	[
		"TimeEvent",
		"prototype",
		"view"
	],
	[
		"TimeEvent",
		"prototype",
		"initTimeEvent()"
	],
	[
		"TimeEvent",
		"prototype",
		"detail"
	],
	[
		"TimeEvent",
		"prototype"
	],
	[
		"TimeRanges"
	],
	[
		"TimeRanges",
		"prototype",
		"start()"
	],
	[
		"TimeRanges",
		"prototype",
		"length"
	],
	[
		"TimeRanges",
		"prototype",
		"end()"
	],
	[
		"TimeRanges",
		"prototype"
	],
	[
		"ToggleEvent"
	],
	[
		"ToggleEvent",
		"prototype",
		"oldState"
	],
	[
		"ToggleEvent",
		"prototype",
		"newState"
	],
	[
		"ToggleEvent",
		"prototype"
	],
	[
		"Touch"
	],
	[
		"Touch",
		"prototype",
		"touchType"
	],
	[
		"Touch",
		"prototype",
		"target"
	],
	[
		"Touch",
		"prototype",
		"screenY"
	],
	[
		"Touch",
		"prototype",
		"screenX"
	],
	[
		"Touch",
		"prototype",
		"rotationAngle"
	],
	[
		"Touch",
		"prototype",
		"radiusY"
	],
	[
		"Touch",
		"prototype",
		"radiusX"
	],
	[
		"Touch",
		"prototype",
		"pageY"
	],
	[
		"Touch",
		"prototype",
		"pageX"
	],
	[
		"Touch",
		"prototype",
		"identifier"
	],
	[
		"Touch",
		"prototype",
		"force"
	],
	[
		"Touch",
		"prototype",
		"clientY"
	],
	[
		"Touch",
		"prototype",
		"clientX"
	],
	[
		"Touch",
		"prototype",
		"azimuthAngle"
	],
	[
		"Touch",
		"prototype",
		"altitudeAngle"
	],
	[
		"Touch",
		"prototype"
	],
	[
		"TouchEvent"
	],
	[
		"TouchEvent",
		"prototype",
		"touches"
	],
	[
		"TouchEvent",
		"prototype",
		"targetTouches"
	],
	[
		"TouchEvent",
		"prototype",
		"shiftKey"
	],
	[
		"TouchEvent",
		"prototype",
		"metaKey"
	],
	[
		"TouchEvent",
		"prototype",
		"getModifierState()"
	],
	[
		"TouchEvent",
		"prototype",
		"ctrlKey"
	],
	[
		"TouchEvent",
		"prototype",
		"changedTouches"
	],
	[
		"TouchEvent",
		"prototype",
		"altKey"
	],
	[
		"TouchEvent",
		"prototype"
	],
	[
		"TouchList"
	],
	[
		"TouchList",
		"prototype",
		"length"
	],
	[
		"TouchList",
		"prototype",
		"item()"
	],
	[
		"TouchList",
		"prototype"
	],
	[
		"TrackEvent"
	],
	[
		"TrackEvent",
		"prototype",
		"track"
	],
	[
		"TrackEvent",
		"prototype"
	],
	[
		"TransformStream"
	],
	[
		"TransformStream",
		"prototype",
		"writable"
	],
	[
		"TransformStream",
		"prototype",
		"readable"
	],
	[
		"TransformStream",
		"prototype"
	],
	[
		"TransformStreamDefaultController"
	],
	[
		"TransformStreamDefaultController",
		"prototype",
		"terminate()"
	],
	[
		"TransformStreamDefaultController",
		"prototype",
		"error()"
	],
	[
		"TransformStreamDefaultController",
		"prototype",
		"enqueue()"
	],
	[
		"TransformStreamDefaultController",
		"prototype",
		"desiredSize"
	],
	[
		"TransformStreamDefaultController",
		"prototype"
	],
	[
		"TransitionEvent"
	],
	[
		"TransitionEvent",
		"prototype",
		"pseudoElement"
	],
	[
		"TransitionEvent",
		"prototype",
		"propertyName"
	],
	[
		"TransitionEvent",
		"prototype",
		"elapsedTime"
	],
	[
		"TransitionEvent",
		"prototype"
	],
	[
		"TreeWalker"
	],
	[
		"TreeWalker",
		"prototype",
		"whatToShow"
	],
	[
		"TreeWalker",
		"prototype",
		"root"
	],
	[
		"TreeWalker",
		"prototype",
		"previousSibling()"
	],
	[
		"TreeWalker",
		"prototype",
		"previousNode()"
	],
	[
		"TreeWalker",
		"prototype",
		"parentNode()"
	],
	[
		"TreeWalker",
		"prototype",
		"nextSibling()"
	],
	[
		"TreeWalker",
		"prototype",
		"nextNode()"
	],
	[
		"TreeWalker",
		"prototype",
		"lastChild()"
	],
	[
		"TreeWalker",
		"prototype",
		"firstChild()"
	],
	[
		"TreeWalker",
		"prototype",
		"filter"
	],
	[
		"TreeWalker",
		"prototype",
		"currentNode"
	],
	[
		"TreeWalker",
		"prototype"
	],
	[
		"TrustedHTML"
	],
	[
		"TrustedHTML",
		"prototype",
		"toJSON()"
	],
	[
		"TrustedHTML",
		"prototype"
	],
	[
		"TrustedScript"
	],
	[
		"TrustedScript",
		"prototype",
		"toJSON()"
	],
	[
		"TrustedScript",
		"prototype"
	],
	[
		"TrustedScriptURL"
	],
	[
		"TrustedScriptURL",
		"prototype",
		"toJSON()"
	],
	[
		"TrustedScriptURL",
		"prototype"
	],
	[
		"TrustedTypePolicy"
	],
	[
		"TrustedTypePolicy",
		"prototype",
		"name"
	],
	[
		"TrustedTypePolicy",
		"prototype",
		"createScriptURL()"
	],
	[
		"TrustedTypePolicy",
		"prototype",
		"createScript()"
	],
	[
		"TrustedTypePolicy",
		"prototype",
		"createHTML()"
	],
	[
		"TrustedTypePolicy",
		"prototype"
	],
	[
		"TrustedTypePolicyFactory"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"isScriptURL()"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"isScript()"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"isHTML()"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"getPropertyType()"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"getAttributeType()"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"emptyScript"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"emptyHTML"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"defaultPolicy"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype",
		"createPolicy()"
	],
	[
		"TrustedTypePolicyFactory",
		"prototype"
	],
	[
		"UIEvent"
	],
	[
		"UIEvent",
		"prototype",
		"which"
	],
	[
		"UIEvent",
		"prototype",
		"view"
	],
	[
		"UIEvent",
		"prototype",
		"sourceCapabilities"
	],
	[
		"UIEvent",
		"prototype",
		"initUIEvent()"
	],
	[
		"UIEvent",
		"prototype",
		"detail"
	],
	[
		"UIEvent",
		"prototype"
	],
	[
		"UncalibratedMagnetometer"
	],
	[
		"UncalibratedMagnetometer",
		"prototype",
		"zBias"
	],
	[
		"UncalibratedMagnetometer",
		"prototype",
		"z"
	],
	[
		"UncalibratedMagnetometer",
		"prototype",
		"yBias"
	],
	[
		"UncalibratedMagnetometer",
		"prototype",
		"y"
	],
	[
		"UncalibratedMagnetometer",
		"prototype",
		"xBias"
	],
	[
		"UncalibratedMagnetometer",
		"prototype",
		"x"
	],
	[
		"UncalibratedMagnetometer",
		"prototype"
	],
	[
		"URL"
	],
	[
		"URL",
		"prototype",
		"username"
	],
	[
		"URL",
		"prototype",
		"toJSON()"
	],
	[
		"URL",
		"prototype",
		"searchParams"
	],
	[
		"URL",
		"prototype",
		"search"
	],
	[
		"URL",
		"prototype",
		"protocol"
	],
	[
		"URL",
		"prototype",
		"port"
	],
	[
		"URL",
		"prototype",
		"pathname"
	],
	[
		"URL",
		"prototype",
		"password"
	],
	[
		"URL",
		"prototype",
		"origin"
	],
	[
		"URL",
		"prototype",
		"href"
	],
	[
		"URL",
		"prototype",
		"hostname"
	],
	[
		"URL",
		"prototype",
		"host"
	],
	[
		"URL",
		"prototype",
		"hash"
	],
	[
		"URL",
		"prototype"
	],
	[
		"URL",
		"revokeObjectURL()"
	],
	[
		"URL",
		"parse()"
	],
	[
		"URL",
		"createObjectURL()"
	],
	[
		"URL",
		"canParse()"
	],
	[
		"URLPattern"
	],
	[
		"URLPattern",
		"prototype",
		"username"
	],
	[
		"URLPattern",
		"prototype",
		"test()"
	],
	[
		"URLPattern",
		"prototype",
		"search"
	],
	[
		"URLPattern",
		"prototype",
		"protocol"
	],
	[
		"URLPattern",
		"prototype",
		"port"
	],
	[
		"URLPattern",
		"prototype",
		"pathname"
	],
	[
		"URLPattern",
		"prototype",
		"password"
	],
	[
		"URLPattern",
		"prototype",
		"hostname"
	],
	[
		"URLPattern",
		"prototype",
		"hash"
	],
	[
		"URLPattern",
		"prototype",
		"hasRegExpGroups"
	],
	[
		"URLPattern",
		"prototype",
		"exec()"
	],
	[
		"URLPattern",
		"prototype"
	],
	[
		"URLSearchParams"
	],
	[
		"URLSearchParams",
		"prototype",
		"sort()"
	],
	[
		"URLSearchParams",
		"prototype",
		"size"
	],
	[
		"URLSearchParams",
		"prototype",
		"set()"
	],
	[
		"URLSearchParams",
		"prototype",
		"has()"
	],
	[
		"URLSearchParams",
		"prototype",
		"getAll()"
	],
	[
		"URLSearchParams",
		"prototype",
		"get()"
	],
	[
		"URLSearchParams",
		"prototype",
		"delete()"
	],
	[
		"URLSearchParams",
		"prototype",
		"append()"
	],
	[
		"URLSearchParams",
		"prototype"
	],
	[
		"USB"
	],
	[
		"USB",
		"prototype",
		"requestDevice()"
	],
	[
		"USB",
		"prototype",
		"ondisconnect"
	],
	[
		"USB",
		"prototype",
		"onconnect"
	],
	[
		"USB",
		"prototype",
		"getDevices()"
	],
	[
		"USB",
		"prototype"
	],
	[
		"USBAlternateInterface"
	],
	[
		"USBAlternateInterface",
		"prototype",
		"interfaceSubclass"
	],
	[
		"USBAlternateInterface",
		"prototype",
		"interfaceProtocol"
	],
	[
		"USBAlternateInterface",
		"prototype",
		"interfaceName"
	],
	[
		"USBAlternateInterface",
		"prototype",
		"interfaceClass"
	],
	[
		"USBAlternateInterface",
		"prototype",
		"endpoints"
	],
	[
		"USBAlternateInterface",
		"prototype",
		"alternateSetting"
	],
	[
		"USBAlternateInterface",
		"prototype"
	],
	[
		"USBConfiguration"
	],
	[
		"USBConfiguration",
		"prototype",
		"interfaces"
	],
	[
		"USBConfiguration",
		"prototype",
		"configurationValue"
	],
	[
		"USBConfiguration",
		"prototype",
		"configurationName"
	],
	[
		"USBConfiguration",
		"prototype"
	],
	[
		"USBConnectionEvent"
	],
	[
		"USBConnectionEvent",
		"prototype",
		"device"
	],
	[
		"USBConnectionEvent",
		"prototype"
	],
	[
		"USBDevice"
	],
	[
		"USBDevice",
		"prototype",
		"vendorId"
	],
	[
		"USBDevice",
		"prototype",
		"usbVersionSubminor"
	],
	[
		"USBDevice",
		"prototype",
		"usbVersionMinor"
	],
	[
		"USBDevice",
		"prototype",
		"usbVersionMajor"
	],
	[
		"USBDevice",
		"prototype",
		"transferOut()"
	],
	[
		"USBDevice",
		"prototype",
		"transferIn()"
	],
	[
		"USBDevice",
		"prototype",
		"serialNumber"
	],
	[
		"USBDevice",
		"prototype",
		"selectConfiguration()"
	],
	[
		"USBDevice",
		"prototype",
		"selectAlternateInterface()"
	],
	[
		"USBDevice",
		"prototype",
		"reset()"
	],
	[
		"USBDevice",
		"prototype",
		"releaseInterface()"
	],
	[
		"USBDevice",
		"prototype",
		"productName"
	],
	[
		"USBDevice",
		"prototype",
		"productId"
	],
	[
		"USBDevice",
		"prototype",
		"opened"
	],
	[
		"USBDevice",
		"prototype",
		"open()"
	],
	[
		"USBDevice",
		"prototype",
		"manufacturerName"
	],
	[
		"USBDevice",
		"prototype",
		"isochronousTransferOut()"
	],
	[
		"USBDevice",
		"prototype",
		"isochronousTransferIn()"
	],
	[
		"USBDevice",
		"prototype",
		"forget()"
	],
	[
		"USBDevice",
		"prototype",
		"deviceVersionSubminor"
	],
	[
		"USBDevice",
		"prototype",
		"deviceVersionMinor"
	],
	[
		"USBDevice",
		"prototype",
		"deviceVersionMajor"
	],
	[
		"USBDevice",
		"prototype",
		"deviceSubclass"
	],
	[
		"USBDevice",
		"prototype",
		"deviceProtocol"
	],
	[
		"USBDevice",
		"prototype",
		"deviceClass"
	],
	[
		"USBDevice",
		"prototype",
		"controlTransferOut()"
	],
	[
		"USBDevice",
		"prototype",
		"controlTransferIn()"
	],
	[
		"USBDevice",
		"prototype",
		"configurations"
	],
	[
		"USBDevice",
		"prototype",
		"configuration"
	],
	[
		"USBDevice",
		"prototype",
		"close()"
	],
	[
		"USBDevice",
		"prototype",
		"clearHalt()"
	],
	[
		"USBDevice",
		"prototype",
		"claimInterface()"
	],
	[
		"USBDevice",
		"prototype"
	],
	[
		"USBEndpoint"
	],
	[
		"USBEndpoint",
		"prototype",
		"type"
	],
	[
		"USBEndpoint",
		"prototype",
		"packetSize"
	],
	[
		"USBEndpoint",
		"prototype",
		"endpointNumber"
	],
	[
		"USBEndpoint",
		"prototype",
		"direction"
	],
	[
		"USBEndpoint",
		"prototype"
	],
	[
		"USBInterface"
	],
	[
		"USBInterface",
		"prototype",
		"interfaceNumber"
	],
	[
		"USBInterface",
		"prototype",
		"claimed"
	],
	[
		"USBInterface",
		"prototype",
		"alternates"
	],
	[
		"USBInterface",
		"prototype",
		"alternate"
	],
	[
		"USBInterface",
		"prototype"
	],
	[
		"USBInTransferResult"
	],
	[
		"USBInTransferResult",
		"prototype",
		"status"
	],
	[
		"USBInTransferResult",
		"prototype",
		"data"
	],
	[
		"USBInTransferResult",
		"prototype"
	],
	[
		"USBIsochronousInTransferPacket"
	],
	[
		"USBIsochronousInTransferPacket",
		"prototype",
		"status"
	],
	[
		"USBIsochronousInTransferPacket",
		"prototype",
		"data"
	],
	[
		"USBIsochronousInTransferPacket",
		"prototype"
	],
	[
		"USBIsochronousInTransferResult"
	],
	[
		"USBIsochronousInTransferResult",
		"prototype",
		"packets"
	],
	[
		"USBIsochronousInTransferResult",
		"prototype",
		"data"
	],
	[
		"USBIsochronousInTransferResult",
		"prototype"
	],
	[
		"USBIsochronousOutTransferPacket"
	],
	[
		"USBIsochronousOutTransferPacket",
		"prototype",
		"status"
	],
	[
		"USBIsochronousOutTransferPacket",
		"prototype",
		"bytesWritten"
	],
	[
		"USBIsochronousOutTransferPacket",
		"prototype"
	],
	[
		"USBIsochronousOutTransferResult"
	],
	[
		"USBIsochronousOutTransferResult",
		"prototype",
		"packets"
	],
	[
		"USBIsochronousOutTransferResult",
		"prototype"
	],
	[
		"USBOutTransferResult"
	],
	[
		"USBOutTransferResult",
		"prototype",
		"status"
	],
	[
		"USBOutTransferResult",
		"prototype",
		"bytesWritten"
	],
	[
		"USBOutTransferResult",
		"prototype"
	],
	[
		"USBPermissionResult"
	],
	[
		"USBPermissionResult",
		"prototype",
		"devices"
	],
	[
		"USBPermissionResult",
		"prototype"
	],
	[
		"UserActivation"
	],
	[
		"UserActivation",
		"prototype",
		"isActive"
	],
	[
		"UserActivation",
		"prototype",
		"hasBeenActive"
	],
	[
		"UserActivation",
		"prototype"
	],
	[
		"ValidityState"
	],
	[
		"ValidityState",
		"prototype",
		"valueMissing"
	],
	[
		"ValidityState",
		"prototype",
		"valid"
	],
	[
		"ValidityState",
		"prototype",
		"typeMismatch"
	],
	[
		"ValidityState",
		"prototype",
		"tooShort"
	],
	[
		"ValidityState",
		"prototype",
		"tooLong"
	],
	[
		"ValidityState",
		"prototype",
		"stepMismatch"
	],
	[
		"ValidityState",
		"prototype",
		"rangeUnderflow"
	],
	[
		"ValidityState",
		"prototype",
		"rangeOverflow"
	],
	[
		"ValidityState",
		"prototype",
		"patternMismatch"
	],
	[
		"ValidityState",
		"prototype",
		"customError"
	],
	[
		"ValidityState",
		"prototype",
		"badInput"
	],
	[
		"ValidityState",
		"prototype"
	],
	[
		"ValueEvent"
	],
	[
		"ValueEvent",
		"prototype",
		"value"
	],
	[
		"ValueEvent",
		"prototype"
	],
	[
		"VideoColorSpace"
	],
	[
		"VideoColorSpace",
		"prototype",
		"transfer"
	],
	[
		"VideoColorSpace",
		"prototype",
		"toJSON()"
	],
	[
		"VideoColorSpace",
		"prototype",
		"primaries"
	],
	[
		"VideoColorSpace",
		"prototype",
		"matrix"
	],
	[
		"VideoColorSpace",
		"prototype",
		"fullRange"
	],
	[
		"VideoColorSpace",
		"prototype"
	],
	[
		"VideoDecoder"
	],
	[
		"VideoDecoder",
		"prototype",
		"state"
	],
	[
		"VideoDecoder",
		"prototype",
		"reset()"
	],
	[
		"VideoDecoder",
		"prototype",
		"ondequeue"
	],
	[
		"VideoDecoder",
		"prototype",
		"flush()"
	],
	[
		"VideoDecoder",
		"prototype",
		"decodeQueueSize"
	],
	[
		"VideoDecoder",
		"prototype",
		"decode()"
	],
	[
		"VideoDecoder",
		"prototype",
		"configure()"
	],
	[
		"VideoDecoder",
		"prototype",
		"close()"
	],
	[
		"VideoDecoder",
		"prototype"
	],
	[
		"VideoDecoder",
		"isConfigSupported()"
	],
	[
		"VideoEncoder"
	],
	[
		"VideoEncoder",
		"prototype",
		"state"
	],
	[
		"VideoEncoder",
		"prototype",
		"reset()"
	],
	[
		"VideoEncoder",
		"prototype",
		"ondequeue"
	],
	[
		"VideoEncoder",
		"prototype",
		"flush()"
	],
	[
		"VideoEncoder",
		"prototype",
		"encodeQueueSize"
	],
	[
		"VideoEncoder",
		"prototype",
		"encode()"
	],
	[
		"VideoEncoder",
		"prototype",
		"configure()"
	],
	[
		"VideoEncoder",
		"prototype",
		"close()"
	],
	[
		"VideoEncoder",
		"prototype"
	],
	[
		"VideoEncoder",
		"isConfigSupported()"
	],
	[
		"VideoFrame"
	],
	[
		"VideoFrame",
		"prototype",
		"visibleRect"
	],
	[
		"VideoFrame",
		"prototype",
		"timestamp"
	],
	[
		"VideoFrame",
		"prototype",
		"metadata()"
	],
	[
		"VideoFrame",
		"prototype",
		"format"
	],
	[
		"VideoFrame",
		"prototype",
		"duration"
	],
	[
		"VideoFrame",
		"prototype",
		"displayWidth"
	],
	[
		"VideoFrame",
		"prototype",
		"displayHeight"
	],
	[
		"VideoFrame",
		"prototype",
		"copyTo()"
	],
	[
		"VideoFrame",
		"prototype",
		"colorSpace"
	],
	[
		"VideoFrame",
		"prototype",
		"codedWidth"
	],
	[
		"VideoFrame",
		"prototype",
		"codedRect"
	],
	[
		"VideoFrame",
		"prototype",
		"codedHeight"
	],
	[
		"VideoFrame",
		"prototype",
		"close()"
	],
	[
		"VideoFrame",
		"prototype",
		"clone()"
	],
	[
		"VideoFrame",
		"prototype",
		"allocationSize()"
	],
	[
		"VideoFrame",
		"prototype"
	],
	[
		"VideoPlaybackQuality"
	],
	[
		"VideoPlaybackQuality",
		"prototype",
		"totalVideoFrames"
	],
	[
		"VideoPlaybackQuality",
		"prototype",
		"droppedVideoFrames"
	],
	[
		"VideoPlaybackQuality",
		"prototype",
		"creationTime"
	],
	[
		"VideoPlaybackQuality",
		"prototype",
		"corruptedVideoFrames"
	],
	[
		"VideoPlaybackQuality",
		"prototype"
	],
	[
		"VideoTrack"
	],
	[
		"VideoTrack",
		"prototype",
		"sourceBuffer"
	],
	[
		"VideoTrack",
		"prototype",
		"selected"
	],
	[
		"VideoTrack",
		"prototype",
		"language"
	],
	[
		"VideoTrack",
		"prototype",
		"label"
	],
	[
		"VideoTrack",
		"prototype",
		"kind"
	],
	[
		"VideoTrack",
		"prototype",
		"id"
	],
	[
		"VideoTrack",
		"prototype"
	],
	[
		"VideoTrackGenerator"
	],
	[
		"VideoTrackGenerator",
		"prototype",
		"writable"
	],
	[
		"VideoTrackGenerator",
		"prototype",
		"track"
	],
	[
		"VideoTrackGenerator",
		"prototype",
		"muted"
	],
	[
		"VideoTrackGenerator",
		"prototype"
	],
	[
		"VideoTrackList"
	],
	[
		"VideoTrackList",
		"prototype",
		"selectedIndex"
	],
	[
		"VideoTrackList",
		"prototype",
		"onremovetrack"
	],
	[
		"VideoTrackList",
		"prototype",
		"onchange"
	],
	[
		"VideoTrackList",
		"prototype",
		"onaddtrack"
	],
	[
		"VideoTrackList",
		"prototype",
		"length"
	],
	[
		"VideoTrackList",
		"prototype",
		"getTrackById()"
	],
	[
		"VideoTrackList",
		"prototype"
	],
	[
		"Viewport"
	],
	[
		"Viewport",
		"prototype",
		"segments"
	],
	[
		"Viewport",
		"prototype"
	],
	[
		"ViewTimeline"
	],
	[
		"ViewTimeline",
		"prototype",
		"subject"
	],
	[
		"ViewTimeline",
		"prototype",
		"startOffset"
	],
	[
		"ViewTimeline",
		"prototype",
		"endOffset"
	],
	[
		"ViewTimeline",
		"prototype"
	],
	[
		"ViewTransition"
	],
	[
		"ViewTransition",
		"prototype",
		"updateCallbackDone"
	],
	[
		"ViewTransition",
		"prototype",
		"types"
	],
	[
		"ViewTransition",
		"prototype",
		"skipTransition()"
	],
	[
		"ViewTransition",
		"prototype",
		"ready"
	],
	[
		"ViewTransition",
		"prototype",
		"finished"
	],
	[
		"ViewTransition",
		"prototype"
	],
	[
		"ViewTransitionTypeSet"
	],
	[
		"ViewTransitionTypeSet",
		"prototype"
	],
	[
		"VirtualKeyboard"
	],
	[
		"VirtualKeyboard",
		"prototype",
		"show()"
	],
	[
		"VirtualKeyboard",
		"prototype",
		"overlaysContent"
	],
	[
		"VirtualKeyboard",
		"prototype",
		"ongeometrychange"
	],
	[
		"VirtualKeyboard",
		"prototype",
		"hide()"
	],
	[
		"VirtualKeyboard",
		"prototype",
		"boundingRect"
	],
	[
		"VirtualKeyboard",
		"prototype"
	],
	[
		"VisibilityStateEntry"
	],
	[
		"VisibilityStateEntry",
		"prototype",
		"startTime"
	],
	[
		"VisibilityStateEntry",
		"prototype",
		"name"
	],
	[
		"VisibilityStateEntry",
		"prototype",
		"entryType"
	],
	[
		"VisibilityStateEntry",
		"prototype",
		"duration"
	],
	[
		"VisibilityStateEntry",
		"prototype"
	],
	[
		"VisualViewport"
	],
	[
		"VisualViewport",
		"prototype",
		"width"
	],
	[
		"VisualViewport",
		"prototype",
		"scale"
	],
	[
		"VisualViewport",
		"prototype",
		"pageTop"
	],
	[
		"VisualViewport",
		"prototype",
		"pageLeft"
	],
	[
		"VisualViewport",
		"prototype",
		"onscrollend"
	],
	[
		"VisualViewport",
		"prototype",
		"onscroll"
	],
	[
		"VisualViewport",
		"prototype",
		"onresize"
	],
	[
		"VisualViewport",
		"prototype",
		"offsetTop"
	],
	[
		"VisualViewport",
		"prototype",
		"offsetLeft"
	],
	[
		"VisualViewport",
		"prototype",
		"height"
	],
	[
		"VisualViewport",
		"prototype"
	],
	[
		"VTTCue"
	],
	[
		"VTTCue",
		"prototype",
		"vertical"
	],
	[
		"VTTCue",
		"prototype",
		"text"
	],
	[
		"VTTCue",
		"prototype",
		"snapToLines"
	],
	[
		"VTTCue",
		"prototype",
		"size"
	],
	[
		"VTTCue",
		"prototype",
		"region"
	],
	[
		"VTTCue",
		"prototype",
		"positionAlign"
	],
	[
		"VTTCue",
		"prototype",
		"position"
	],
	[
		"VTTCue",
		"prototype",
		"lineAlign"
	],
	[
		"VTTCue",
		"prototype",
		"line"
	],
	[
		"VTTCue",
		"prototype",
		"getCueAsHTML()"
	],
	[
		"VTTCue",
		"prototype",
		"align"
	],
	[
		"VTTCue",
		"prototype"
	],
	[
		"VTTRegion"
	],
	[
		"VTTRegion",
		"prototype",
		"width"
	],
	[
		"VTTRegion",
		"prototype",
		"viewportAnchorY"
	],
	[
		"VTTRegion",
		"prototype",
		"viewportAnchorX"
	],
	[
		"VTTRegion",
		"prototype",
		"scroll"
	],
	[
		"VTTRegion",
		"prototype",
		"regionAnchorY"
	],
	[
		"VTTRegion",
		"prototype",
		"regionAnchorX"
	],
	[
		"VTTRegion",
		"prototype",
		"lines"
	],
	[
		"VTTRegion",
		"prototype",
		"id"
	],
	[
		"VTTRegion",
		"prototype"
	],
	[
		"WakeLock"
	],
	[
		"WakeLock",
		"prototype",
		"request()"
	],
	[
		"WakeLock",
		"prototype"
	],
	[
		"WakeLockSentinel"
	],
	[
		"WakeLockSentinel",
		"prototype",
		"type"
	],
	[
		"WakeLockSentinel",
		"prototype",
		"released"
	],
	[
		"WakeLockSentinel",
		"prototype",
		"release()"
	],
	[
		"WakeLockSentinel",
		"prototype",
		"onrelease"
	],
	[
		"WakeLockSentinel",
		"prototype"
	],
	[
		"WaveShaperNode"
	],
	[
		"WaveShaperNode",
		"prototype",
		"oversample"
	],
	[
		"WaveShaperNode",
		"prototype",
		"curve"
	],
	[
		"WaveShaperNode",
		"prototype"
	],
	[
		"WebAssembly"
	],
	[
		"WebAssembly",
		"validate()"
	],
	[
		"WebAssembly",
		"instantiateStreaming()"
	],
	[
		"WebAssembly",
		"instantiate()"
	],
	[
		"WebAssembly",
		"compileStreaming()"
	],
	[
		"WebAssembly",
		"compile()"
	],
	[
		"WebGL2RenderingContext"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"waitSync()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"viewport()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttribPointer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttribIPointer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttribI4uiv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttribI4ui()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttribI4iv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttribI4i()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttribDivisor()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib4fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib4f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib3fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib3f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib2fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib2f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib1fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"vertexAttrib1f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"validateProgram()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"useProgram()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"unpackColorSpace"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix4x3fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix4x2fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix4fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix3x4fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix3x2fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix3fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix2x4fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix2x3fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformMatrix2fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniformBlockBinding()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform4uiv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform4ui()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform4iv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform4i()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform4fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform4f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform3uiv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform3ui()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform3iv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform3i()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform3fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform3f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform2uiv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform2ui()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform2iv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform2i()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform2fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform2f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform1uiv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform1ui()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform1iv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform1i()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform1fv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"uniform1f()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"transformFeedbackVaryings()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texSubImage3D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texSubImage2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texStorage3D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texStorage2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texParameteri()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texParameterf()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texImage3D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"texImage2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"stencilOpSeparate()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"stencilOp()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"stencilMaskSeparate()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"stencilMask()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"stencilFuncSeparate()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"stencilFunc()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"shaderSource()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"scissor()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"samplerParameteri()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"samplerParameterf()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"sampleCoverage()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"resumeTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"renderbufferStorageMultisample()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"renderbufferStorage()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"readPixels()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"readBuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"polygonOffset()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"pixelStorei()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"pauseTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"makeXRCompatible()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"linkProgram()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"lineWidth()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isVertexArray()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isTexture()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isSync()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isShader()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isSampler()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isRenderbuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isQuery()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isProgram()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isFramebuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isEnabled()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isContextLost()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"isBuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"invalidateSubFramebuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"invalidateFramebuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"hint()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getVertexAttribOffset()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getVertexAttrib()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getUniformLocation()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getUniformIndices()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getUniformBlockIndex()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getUniform()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getTransformFeedbackVarying()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getTexParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getSyncParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getSupportedExtensions()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getShaderSource()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getShaderPrecisionFormat()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getShaderParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getShaderInfoLog()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getSamplerParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getRenderbufferParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getQueryParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getQuery()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getProgramParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getProgramInfoLog()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getInternalformatParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getIndexedParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getFramebufferAttachmentParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getFragDataLocation()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getExtension()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getError()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getContextAttributes()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getBufferSubData()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getBufferParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getAttribLocation()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getAttachedShaders()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getActiveUniforms()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getActiveUniformBlockParameter()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getActiveUniformBlockName()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getActiveUniform()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"getActiveAttrib()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"generateMipmap()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"frontFace()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"framebufferTextureLayer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"framebufferTexture2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"framebufferRenderbuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"flush()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"finish()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"fenceSync()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"endTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"endQuery()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"enableVertexAttribArray()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"enable()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawingBufferWidth"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawingBufferStorage()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawingBufferHeight"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawingBufferFormat"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawingBufferColorSpace"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawRangeElements()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawElementsInstanced()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawElements()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawBuffers()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawArraysInstanced()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"drawArrays()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"disableVertexAttribArray()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"disable()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"detachShader()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"depthRange()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"depthMask()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"depthFunc()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteVertexArray()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteTexture()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteSync()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteShader()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteSampler()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteRenderbuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteQuery()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteProgram()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteFramebuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"deleteBuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"cullFace()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createVertexArray()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createTexture()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createShader()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createSampler()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createRenderbuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createQuery()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createProgram()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createFramebuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"createBuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"copyTexSubImage3D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"copyTexSubImage2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"copyTexImage2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"copyBufferSubData()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"compressedTexSubImage3D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"compressedTexSubImage2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"compressedTexImage3D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"compressedTexImage2D()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"compileShader()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"colorMask()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clientWaitSync()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clearStencil()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clearDepth()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clearColor()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clearBufferuiv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clearBufferiv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clearBufferfv()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clearBufferfi()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"clear()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"checkFramebufferStatus()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"canvas"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bufferSubData()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bufferData()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"blitFramebuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"blendFuncSeparate()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"blendFunc()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"blendEquationSeparate()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"blendEquation()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"blendColor()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindVertexArray()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindTexture()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindSampler()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindRenderbuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindFramebuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindBufferRange()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindBufferBase()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindBuffer()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"bindAttribLocation()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"beginTransformFeedback()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"beginQuery()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"attachShader()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"activeTexture()"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ZERO"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"WAIT_FAILED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VIEWPORT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_STRIDE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_POINTER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_NORMALIZED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_ENABLED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_DIVISOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERTEX_ARRAY_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VERSION"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VENDOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"VALIDATE_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_SHORT_5_6_5"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_SHORT_5_5_5_1"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_SHORT_4_4_4_4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_SHORT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_NORMALIZED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_SAMPLER_CUBE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_SAMPLER_3D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_SAMPLER_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_SAMPLER_2D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_5_9_9_9_REV"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_2_10_10_10_REV"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_24_8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT_10F_11F_11F_REV"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_INT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNED_BYTE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNSIGNALED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_SKIP_ROWS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_SKIP_PIXELS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_SKIP_IMAGES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_ROW_LENGTH"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_PREMULTIPLY_ALPHA_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_IMAGE_HEIGHT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_FLIP_Y_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_COLORSPACE_CONVERSION_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNPACK_ALIGNMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_OFFSET"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_MATRIX_STRIDE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_IS_ROW_MAJOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BUFFER_START"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BUFFER_OFFSET_ALIGNMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BLOCK_INDEX"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BLOCK_DATA_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BLOCK_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_BLOCK_ACTIVE_UNIFORMS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"UNIFORM_ARRAY_STRIDE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRIANGLE_STRIP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRIANGLE_FAN"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRIANGLES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_VARYINGS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_PAUSED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_BUFFER_START"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_BUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_BUFFER_MODE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK_ACTIVE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TRANSFORM_FEEDBACK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TIMEOUT_IGNORED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TIMEOUT_EXPIRED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_WRAP_T"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_WRAP_S"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_WRAP_R"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_MIN_LOD"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_MIN_FILTER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_MAX_LOD"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_MAX_LEVEL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_MAG_FILTER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_IMMUTABLE_LEVELS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_IMMUTABLE_FORMAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_POSITIVE_Z"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_POSITIVE_Y"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_POSITIVE_X"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_NEGATIVE_Z"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_NEGATIVE_Y"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_NEGATIVE_X"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_COMPARE_MODE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_COMPARE_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_BINDING_CUBE_MAP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_BINDING_3D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_BINDING_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_BINDING_2D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_BASE_LEVEL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_3D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE_2D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE9"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE7"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE6"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE5"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE31"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE30"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE29"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE28"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE27"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE26"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE25"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE24"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE23"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE22"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE21"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE20"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE19"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE18"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE17"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE16"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE15"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE14"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE13"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE12"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE11"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE10"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE1"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE0"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"TEXTURE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SYNC_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SYNC_GPU_COMMANDS_COMPLETE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SYNC_FLUSH_COMMANDS_BIT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SYNC_FLAGS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SYNC_FENCE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SYNC_CONDITION"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SUBPIXEL_BITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STREAM_READ"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STREAM_DRAW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STREAM_COPY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_VALUE_MASK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_TEST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_REF"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_PASS_DEPTH_PASS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_PASS_DEPTH_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_INDEX8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_CLEAR_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BUFFER_BIT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BACK_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BACK_VALUE_MASK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BACK_REF"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BACK_PASS_DEPTH_PASS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BACK_PASS_DEPTH_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BACK_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_BACK_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STENCIL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STATIC_READ"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STATIC_DRAW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"STATIC_COPY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SRGB8_ALPHA8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SRGB8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SRGB"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SRC_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SRC_ALPHA_SATURATE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SRC_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SIGNED_NORMALIZED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SIGNALED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SHORT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SHADING_LANGUAGE_VERSION"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SHADER_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SEPARATE_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SCISSOR_TEST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SCISSOR_BOX"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLE_COVERAGE_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLE_COVERAGE_INVERT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLE_COVERAGE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLE_BUFFERS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLE_ALPHA_TO_COVERAGE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_CUBE_SHADOW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_CUBE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_3D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_2D_SHADOW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_2D_ARRAY_SHADOW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"SAMPLER_2D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA8UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA8I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA32UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA32I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA32F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA16UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA16I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA16F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGBA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB9_E5"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB8UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB8I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB5_A1"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB565"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB32UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB32I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB32F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB16UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB16I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB16F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB10_A2UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB10_A2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RGB"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG8UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG8I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG32UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG32I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG32F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG16UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG16I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG16F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RG"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"REPLACE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"REPEAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_WIDTH"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_STENCIL_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_SAMPLES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_RED_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_INTERNAL_FORMAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_HEIGHT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_GREEN_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_DEPTH_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_BLUE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER_ALPHA_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RENDERBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RED_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RED_BITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"READ_FRAMEBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"READ_FRAMEBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"READ_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"RASTERIZER_DISCARD"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R8UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R8I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R32UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R32I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R32F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R16UI"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R16I"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R16F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"R11F_G11F_B10F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"QUERY_RESULT_AVAILABLE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"QUERY_RESULT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"POLYGON_OFFSET_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"POLYGON_OFFSET_FILL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"POLYGON_OFFSET_FACTOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"POINTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PIXEL_UNPACK_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PIXEL_UNPACK_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PIXEL_PACK_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PIXEL_PACK_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PACK_SKIP_ROWS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PACK_SKIP_PIXELS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PACK_ROW_LENGTH"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"PACK_ALIGNMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"OUT_OF_MEMORY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ONE_MINUS_SRC_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ONE_MINUS_SRC_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ONE_MINUS_DST_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ONE_MINUS_DST_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ONE_MINUS_CONSTANT_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ONE_MINUS_CONSTANT_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ONE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"OBJECT_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NO_ERROR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NOTEQUAL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NONE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NICEST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NEVER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NEAREST_MIPMAP_NEAREST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NEAREST_MIPMAP_LINEAR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"NEAREST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MIRRORED_REPEAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MIN_PROGRAM_TEXEL_OFFSET"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MIN"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MEDIUM_INT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MEDIUM_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VIEWPORT_DIMS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VERTEX_UNIFORM_VECTORS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VERTEX_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VERTEX_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VERTEX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VERTEX_OUTPUT_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VERTEX_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VARYING_VECTORS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_VARYING_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_UNIFORM_BUFFER_BINDINGS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_UNIFORM_BLOCK_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_TEXTURE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_TEXTURE_LOD_BIAS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_SERVER_WAIT_TIMEOUT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_SAMPLES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_RENDERBUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_PROGRAM_TEXEL_OFFSET"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_FRAGMENT_UNIFORM_VECTORS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_FRAGMENT_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_FRAGMENT_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_FRAGMENT_INPUT_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_ELEMENT_INDEX"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_ELEMENTS_VERTICES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_ELEMENTS_INDICES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_DRAW_BUFFERS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_CUBE_MAP_TEXTURE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_COMBINED_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_COMBINED_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_COLOR_ATTACHMENTS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_CLIENT_WAIT_TIMEOUT_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_ARRAY_TEXTURE_LAYERS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX_3D_TEXTURE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"MAX"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LUMINANCE_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LUMINANCE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LOW_INT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LOW_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINK_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINE_WIDTH"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINE_STRIP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINE_LOOP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINES"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINEAR_MIPMAP_NEAREST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINEAR_MIPMAP_LINEAR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LINEAR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LESS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"LEQUAL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"KEEP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INVERT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INVALID_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INVALID_OPERATION"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INVALID_INDEX"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INVALID_FRAMEBUFFER_OPERATION"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INVALID_ENUM"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_SAMPLER_CUBE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_SAMPLER_3D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_SAMPLER_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_SAMPLER_2D"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT_2_10_10_10_REV"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INTERLEAVED_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INCR_WRAP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"INCR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"IMPLEMENTATION_COLOR_READ_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"IMPLEMENTATION_COLOR_READ_FORMAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"HIGH_INT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"HIGH_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"HALF_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"GREEN_BITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"GREATER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"GEQUAL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"GENERATE_MIPMAP_HINT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FUNC_SUBTRACT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FUNC_REVERSE_SUBTRACT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FUNC_ADD"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRONT_FACE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRONT_AND_BACK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRONT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_UNSUPPORTED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_DIMENSIONS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_DEFAULT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_COMPLETE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_RED_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAMEBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAGMENT_SHADER_DERIVATIVE_HINT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FRAGMENT_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT4x3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT4x2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT3x4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT3x2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT2x4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT2x3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_MAT2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT_32_UNSIGNED_INT_24_8_REV"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"FASTEST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"EQUAL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ELEMENT_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ELEMENT_ARRAY_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DYNAMIC_READ"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DYNAMIC_DRAW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DYNAMIC_COPY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DST_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DST_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_FRAMEBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_FRAMEBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER9"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER7"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER6"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER5"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER15"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER14"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER13"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER12"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER11"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER10"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER1"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DRAW_BUFFER0"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DONT_CARE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DITHER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_TEST"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_STENCIL_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_STENCIL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_RANGE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_COMPONENT32F"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_COMPONENT24"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_COMPONENT16"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_COMPONENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_CLEAR_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_BUFFER_BIT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_BITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH32F_STENCIL8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH24_STENCIL8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DEPTH"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DELETE_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DECR_WRAP"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"DECR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CURRENT_VERTEX_ATTRIB"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CURRENT_QUERY"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CURRENT_PROGRAM"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CULL_FACE_MODE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CULL_FACE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COPY_WRITE_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COPY_WRITE_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COPY_READ_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COPY_READ_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CONTEXT_LOST_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CONSTANT_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CONSTANT_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CONDITION_SATISFIED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COMPRESSED_TEXTURE_FORMATS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COMPILE_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COMPARE_REF_TO_TEXTURE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_CLEAR_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_BUFFER_BIT"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT9"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT8"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT7"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT6"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT5"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT15"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT14"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT13"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT12"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT11"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT10"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT1"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR_ATTACHMENT0"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CLAMP_TO_EDGE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"CCW"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BYTE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BUFFER_USAGE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BROWSER_DEFAULT_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BOOL_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BOOL_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BOOL_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BOOL"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLUE_BITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_SRC_RGB"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_SRC_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_EQUATION_RGB"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_EQUATION_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_EQUATION"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_DST_RGB"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_DST_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BLEND"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"BACK"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ATTACHED_SHADERS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ARRAY_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ARRAY_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ANY_SAMPLES_PASSED_CONSERVATIVE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ANY_SAMPLES_PASSED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ALWAYS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ALREADY_SIGNALED"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ALPHA_BITS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ALIASED_POINT_SIZE_RANGE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ALIASED_LINE_WIDTH_RANGE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ACTIVE_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ACTIVE_UNIFORMS"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ACTIVE_TEXTURE"
	],
	[
		"WebGL2RenderingContext",
		"prototype",
		"ACTIVE_ATTRIBUTES"
	],
	[
		"WebGL2RenderingContext",
		"prototype"
	],
	[
		"WebGL2RenderingContext",
		"ZERO"
	],
	[
		"WebGL2RenderingContext",
		"WAIT_FAILED"
	],
	[
		"WebGL2RenderingContext",
		"VIEWPORT"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_STRIDE"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_POINTER"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_NORMALIZED"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_ENABLED"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_DIVISOR"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"VERTEX_ARRAY_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"VERSION"
	],
	[
		"WebGL2RenderingContext",
		"VENDOR"
	],
	[
		"WebGL2RenderingContext",
		"VALIDATE_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_SHORT_5_6_5"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_SHORT_5_5_5_1"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_SHORT_4_4_4_4"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_SHORT"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_NORMALIZED"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_SAMPLER_CUBE"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_SAMPLER_3D"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_SAMPLER_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_SAMPLER_2D"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_5_9_9_9_REV"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_2_10_10_10_REV"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_24_8"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT_10F_11F_11F_REV"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_INT"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNED_BYTE"
	],
	[
		"WebGL2RenderingContext",
		"UNSIGNALED"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_SKIP_ROWS"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_SKIP_PIXELS"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_SKIP_IMAGES"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_ROW_LENGTH"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_PREMULTIPLY_ALPHA_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_IMAGE_HEIGHT"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_FLIP_Y_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_COLORSPACE_CONVERSION_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"UNPACK_ALIGNMENT"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_OFFSET"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_MATRIX_STRIDE"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_IS_ROW_MAJOR"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BUFFER_START"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BUFFER_OFFSET_ALIGNMENT"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BLOCK_INDEX"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BLOCK_DATA_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BLOCK_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_BLOCK_ACTIVE_UNIFORMS"
	],
	[
		"WebGL2RenderingContext",
		"UNIFORM_ARRAY_STRIDE"
	],
	[
		"WebGL2RenderingContext",
		"TRIANGLE_STRIP"
	],
	[
		"WebGL2RenderingContext",
		"TRIANGLE_FAN"
	],
	[
		"WebGL2RenderingContext",
		"TRIANGLES"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_VARYINGS"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_PAUSED"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_BUFFER_START"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_BUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_BUFFER_MODE"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK_ACTIVE"
	],
	[
		"WebGL2RenderingContext",
		"TRANSFORM_FEEDBACK"
	],
	[
		"WebGL2RenderingContext",
		"TIMEOUT_IGNORED"
	],
	[
		"WebGL2RenderingContext",
		"TIMEOUT_EXPIRED"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_WRAP_T"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_WRAP_S"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_WRAP_R"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_MIN_LOD"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_MIN_FILTER"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_MAX_LOD"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_MAX_LEVEL"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_MAG_FILTER"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_IMMUTABLE_LEVELS"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_IMMUTABLE_FORMAT"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_CUBE_MAP_POSITIVE_Z"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_CUBE_MAP_POSITIVE_Y"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_CUBE_MAP_POSITIVE_X"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_CUBE_MAP_NEGATIVE_Z"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_CUBE_MAP_NEGATIVE_Y"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_CUBE_MAP_NEGATIVE_X"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_CUBE_MAP"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_COMPARE_MODE"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_COMPARE_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_BINDING_CUBE_MAP"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_BINDING_3D"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_BINDING_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_BINDING_2D"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_BASE_LEVEL"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_3D"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE_2D"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE9"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE8"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE7"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE6"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE5"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE4"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE31"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE30"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE3"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE29"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE28"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE27"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE26"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE25"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE24"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE23"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE22"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE21"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE20"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE2"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE19"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE18"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE17"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE16"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE15"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE14"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE13"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE12"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE11"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE10"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE1"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE0"
	],
	[
		"WebGL2RenderingContext",
		"TEXTURE"
	],
	[
		"WebGL2RenderingContext",
		"SYNC_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"SYNC_GPU_COMMANDS_COMPLETE"
	],
	[
		"WebGL2RenderingContext",
		"SYNC_FLUSH_COMMANDS_BIT"
	],
	[
		"WebGL2RenderingContext",
		"SYNC_FLAGS"
	],
	[
		"WebGL2RenderingContext",
		"SYNC_FENCE"
	],
	[
		"WebGL2RenderingContext",
		"SYNC_CONDITION"
	],
	[
		"WebGL2RenderingContext",
		"SUBPIXEL_BITS"
	],
	[
		"WebGL2RenderingContext",
		"STREAM_READ"
	],
	[
		"WebGL2RenderingContext",
		"STREAM_DRAW"
	],
	[
		"WebGL2RenderingContext",
		"STREAM_COPY"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_VALUE_MASK"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_TEST"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_REF"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_PASS_DEPTH_PASS"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_PASS_DEPTH_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_INDEX8"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_CLEAR_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BUFFER_BIT"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BITS"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BACK_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BACK_VALUE_MASK"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BACK_REF"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BACK_PASS_DEPTH_PASS"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BACK_PASS_DEPTH_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BACK_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_BACK_FAIL"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"STENCIL"
	],
	[
		"WebGL2RenderingContext",
		"STATIC_READ"
	],
	[
		"WebGL2RenderingContext",
		"STATIC_DRAW"
	],
	[
		"WebGL2RenderingContext",
		"STATIC_COPY"
	],
	[
		"WebGL2RenderingContext",
		"SRGB8_ALPHA8"
	],
	[
		"WebGL2RenderingContext",
		"SRGB8"
	],
	[
		"WebGL2RenderingContext",
		"SRGB"
	],
	[
		"WebGL2RenderingContext",
		"SRC_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"SRC_ALPHA_SATURATE"
	],
	[
		"WebGL2RenderingContext",
		"SRC_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"SIGNED_NORMALIZED"
	],
	[
		"WebGL2RenderingContext",
		"SIGNALED"
	],
	[
		"WebGL2RenderingContext",
		"SHORT"
	],
	[
		"WebGL2RenderingContext",
		"SHADING_LANGUAGE_VERSION"
	],
	[
		"WebGL2RenderingContext",
		"SHADER_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"SEPARATE_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"SCISSOR_TEST"
	],
	[
		"WebGL2RenderingContext",
		"SCISSOR_BOX"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLE_COVERAGE_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLE_COVERAGE_INVERT"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLE_COVERAGE"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLE_BUFFERS"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLE_ALPHA_TO_COVERAGE"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLES"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_CUBE_SHADOW"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_CUBE"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_3D"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_2D_SHADOW"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_2D_ARRAY_SHADOW"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"SAMPLER_2D"
	],
	[
		"WebGL2RenderingContext",
		"RG_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"RGB_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"RGBA_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"RGBA8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"RGBA8UI"
	],
	[
		"WebGL2RenderingContext",
		"RGBA8I"
	],
	[
		"WebGL2RenderingContext",
		"RGBA8"
	],
	[
		"WebGL2RenderingContext",
		"RGBA4"
	],
	[
		"WebGL2RenderingContext",
		"RGBA32UI"
	],
	[
		"WebGL2RenderingContext",
		"RGBA32I"
	],
	[
		"WebGL2RenderingContext",
		"RGBA32F"
	],
	[
		"WebGL2RenderingContext",
		"RGBA16UI"
	],
	[
		"WebGL2RenderingContext",
		"RGBA16I"
	],
	[
		"WebGL2RenderingContext",
		"RGBA16F"
	],
	[
		"WebGL2RenderingContext",
		"RGBA"
	],
	[
		"WebGL2RenderingContext",
		"RGB9_E5"
	],
	[
		"WebGL2RenderingContext",
		"RGB8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"RGB8UI"
	],
	[
		"WebGL2RenderingContext",
		"RGB8I"
	],
	[
		"WebGL2RenderingContext",
		"RGB8"
	],
	[
		"WebGL2RenderingContext",
		"RGB5_A1"
	],
	[
		"WebGL2RenderingContext",
		"RGB565"
	],
	[
		"WebGL2RenderingContext",
		"RGB32UI"
	],
	[
		"WebGL2RenderingContext",
		"RGB32I"
	],
	[
		"WebGL2RenderingContext",
		"RGB32F"
	],
	[
		"WebGL2RenderingContext",
		"RGB16UI"
	],
	[
		"WebGL2RenderingContext",
		"RGB16I"
	],
	[
		"WebGL2RenderingContext",
		"RGB16F"
	],
	[
		"WebGL2RenderingContext",
		"RGB10_A2UI"
	],
	[
		"WebGL2RenderingContext",
		"RGB10_A2"
	],
	[
		"WebGL2RenderingContext",
		"RGB"
	],
	[
		"WebGL2RenderingContext",
		"RG8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"RG8UI"
	],
	[
		"WebGL2RenderingContext",
		"RG8I"
	],
	[
		"WebGL2RenderingContext",
		"RG8"
	],
	[
		"WebGL2RenderingContext",
		"RG32UI"
	],
	[
		"WebGL2RenderingContext",
		"RG32I"
	],
	[
		"WebGL2RenderingContext",
		"RG32F"
	],
	[
		"WebGL2RenderingContext",
		"RG16UI"
	],
	[
		"WebGL2RenderingContext",
		"RG16I"
	],
	[
		"WebGL2RenderingContext",
		"RG16F"
	],
	[
		"WebGL2RenderingContext",
		"RG"
	],
	[
		"WebGL2RenderingContext",
		"REPLACE"
	],
	[
		"WebGL2RenderingContext",
		"REPEAT"
	],
	[
		"WebGL2RenderingContext",
		"RENDERER"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_WIDTH"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_STENCIL_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_SAMPLES"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_RED_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_INTERNAL_FORMAT"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_HEIGHT"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_GREEN_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_DEPTH_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_BLUE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER_ALPHA_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"RENDERBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"RED_INTEGER"
	],
	[
		"WebGL2RenderingContext",
		"RED_BITS"
	],
	[
		"WebGL2RenderingContext",
		"RED"
	],
	[
		"WebGL2RenderingContext",
		"READ_FRAMEBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"READ_FRAMEBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"READ_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"RASTERIZER_DISCARD"
	],
	[
		"WebGL2RenderingContext",
		"R8_SNORM"
	],
	[
		"WebGL2RenderingContext",
		"R8UI"
	],
	[
		"WebGL2RenderingContext",
		"R8I"
	],
	[
		"WebGL2RenderingContext",
		"R8"
	],
	[
		"WebGL2RenderingContext",
		"R32UI"
	],
	[
		"WebGL2RenderingContext",
		"R32I"
	],
	[
		"WebGL2RenderingContext",
		"R32F"
	],
	[
		"WebGL2RenderingContext",
		"R16UI"
	],
	[
		"WebGL2RenderingContext",
		"R16I"
	],
	[
		"WebGL2RenderingContext",
		"R16F"
	],
	[
		"WebGL2RenderingContext",
		"R11F_G11F_B10F"
	],
	[
		"WebGL2RenderingContext",
		"QUERY_RESULT_AVAILABLE"
	],
	[
		"WebGL2RenderingContext",
		"QUERY_RESULT"
	],
	[
		"WebGL2RenderingContext",
		"POLYGON_OFFSET_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"POLYGON_OFFSET_FILL"
	],
	[
		"WebGL2RenderingContext",
		"POLYGON_OFFSET_FACTOR"
	],
	[
		"WebGL2RenderingContext",
		"POINTS"
	],
	[
		"WebGL2RenderingContext",
		"PIXEL_UNPACK_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"PIXEL_UNPACK_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"PIXEL_PACK_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"PIXEL_PACK_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"PACK_SKIP_ROWS"
	],
	[
		"WebGL2RenderingContext",
		"PACK_SKIP_PIXELS"
	],
	[
		"WebGL2RenderingContext",
		"PACK_ROW_LENGTH"
	],
	[
		"WebGL2RenderingContext",
		"PACK_ALIGNMENT"
	],
	[
		"WebGL2RenderingContext",
		"OUT_OF_MEMORY"
	],
	[
		"WebGL2RenderingContext",
		"ONE_MINUS_SRC_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"ONE_MINUS_SRC_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"ONE_MINUS_DST_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"ONE_MINUS_DST_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"ONE_MINUS_CONSTANT_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"ONE_MINUS_CONSTANT_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"ONE"
	],
	[
		"WebGL2RenderingContext",
		"OBJECT_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"NO_ERROR"
	],
	[
		"WebGL2RenderingContext",
		"NOTEQUAL"
	],
	[
		"WebGL2RenderingContext",
		"NONE"
	],
	[
		"WebGL2RenderingContext",
		"NICEST"
	],
	[
		"WebGL2RenderingContext",
		"NEVER"
	],
	[
		"WebGL2RenderingContext",
		"NEAREST_MIPMAP_NEAREST"
	],
	[
		"WebGL2RenderingContext",
		"NEAREST_MIPMAP_LINEAR"
	],
	[
		"WebGL2RenderingContext",
		"NEAREST"
	],
	[
		"WebGL2RenderingContext",
		"MIRRORED_REPEAT"
	],
	[
		"WebGL2RenderingContext",
		"MIN_PROGRAM_TEXEL_OFFSET"
	],
	[
		"WebGL2RenderingContext",
		"MIN"
	],
	[
		"WebGL2RenderingContext",
		"MEDIUM_INT"
	],
	[
		"WebGL2RenderingContext",
		"MEDIUM_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VIEWPORT_DIMS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VERTEX_UNIFORM_VECTORS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VERTEX_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VERTEX_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VERTEX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VERTEX_OUTPUT_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VERTEX_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VARYING_VECTORS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_VARYING_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_UNIFORM_BUFFER_BINDINGS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_UNIFORM_BLOCK_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_TEXTURE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"MAX_TEXTURE_LOD_BIAS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_SERVER_WAIT_TIMEOUT"
	],
	[
		"WebGL2RenderingContext",
		"MAX_SAMPLES"
	],
	[
		"WebGL2RenderingContext",
		"MAX_RENDERBUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"MAX_PROGRAM_TEXEL_OFFSET"
	],
	[
		"WebGL2RenderingContext",
		"MAX_FRAGMENT_UNIFORM_VECTORS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_FRAGMENT_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_FRAGMENT_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_FRAGMENT_INPUT_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_ELEMENT_INDEX"
	],
	[
		"WebGL2RenderingContext",
		"MAX_ELEMENTS_VERTICES"
	],
	[
		"WebGL2RenderingContext",
		"MAX_ELEMENTS_INDICES"
	],
	[
		"WebGL2RenderingContext",
		"MAX_DRAW_BUFFERS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_CUBE_MAP_TEXTURE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_COMBINED_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_COMBINED_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_COLOR_ATTACHMENTS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_CLIENT_WAIT_TIMEOUT_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"MAX_ARRAY_TEXTURE_LAYERS"
	],
	[
		"WebGL2RenderingContext",
		"MAX_3D_TEXTURE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"MAX"
	],
	[
		"WebGL2RenderingContext",
		"LUMINANCE_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"LUMINANCE"
	],
	[
		"WebGL2RenderingContext",
		"LOW_INT"
	],
	[
		"WebGL2RenderingContext",
		"LOW_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"LINK_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"LINE_WIDTH"
	],
	[
		"WebGL2RenderingContext",
		"LINE_STRIP"
	],
	[
		"WebGL2RenderingContext",
		"LINE_LOOP"
	],
	[
		"WebGL2RenderingContext",
		"LINES"
	],
	[
		"WebGL2RenderingContext",
		"LINEAR_MIPMAP_NEAREST"
	],
	[
		"WebGL2RenderingContext",
		"LINEAR_MIPMAP_LINEAR"
	],
	[
		"WebGL2RenderingContext",
		"LINEAR"
	],
	[
		"WebGL2RenderingContext",
		"LESS"
	],
	[
		"WebGL2RenderingContext",
		"LEQUAL"
	],
	[
		"WebGL2RenderingContext",
		"KEEP"
	],
	[
		"WebGL2RenderingContext",
		"INVERT"
	],
	[
		"WebGL2RenderingContext",
		"INVALID_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"INVALID_OPERATION"
	],
	[
		"WebGL2RenderingContext",
		"INVALID_INDEX"
	],
	[
		"WebGL2RenderingContext",
		"INVALID_FRAMEBUFFER_OPERATION"
	],
	[
		"WebGL2RenderingContext",
		"INVALID_ENUM"
	],
	[
		"WebGL2RenderingContext",
		"INT_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"INT_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"INT_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"INT_SAMPLER_CUBE"
	],
	[
		"WebGL2RenderingContext",
		"INT_SAMPLER_3D"
	],
	[
		"WebGL2RenderingContext",
		"INT_SAMPLER_2D_ARRAY"
	],
	[
		"WebGL2RenderingContext",
		"INT_SAMPLER_2D"
	],
	[
		"WebGL2RenderingContext",
		"INT_2_10_10_10_REV"
	],
	[
		"WebGL2RenderingContext",
		"INTERLEAVED_ATTRIBS"
	],
	[
		"WebGL2RenderingContext",
		"INT"
	],
	[
		"WebGL2RenderingContext",
		"INCR_WRAP"
	],
	[
		"WebGL2RenderingContext",
		"INCR"
	],
	[
		"WebGL2RenderingContext",
		"IMPLEMENTATION_COLOR_READ_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"IMPLEMENTATION_COLOR_READ_FORMAT"
	],
	[
		"WebGL2RenderingContext",
		"HIGH_INT"
	],
	[
		"WebGL2RenderingContext",
		"HIGH_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"HALF_FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"GREEN_BITS"
	],
	[
		"WebGL2RenderingContext",
		"GREATER"
	],
	[
		"WebGL2RenderingContext",
		"GEQUAL"
	],
	[
		"WebGL2RenderingContext",
		"GENERATE_MIPMAP_HINT"
	],
	[
		"WebGL2RenderingContext",
		"FUNC_SUBTRACT"
	],
	[
		"WebGL2RenderingContext",
		"FUNC_REVERSE_SUBTRACT"
	],
	[
		"WebGL2RenderingContext",
		"FUNC_ADD"
	],
	[
		"WebGL2RenderingContext",
		"FRONT_FACE"
	],
	[
		"WebGL2RenderingContext",
		"FRONT_AND_BACK"
	],
	[
		"WebGL2RenderingContext",
		"FRONT"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_UNSUPPORTED"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_INCOMPLETE_DIMENSIONS"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_INCOMPLETE_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_DEFAULT"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_COMPLETE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_RED_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"FRAMEBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"FRAGMENT_SHADER_DERIVATIVE_HINT"
	],
	[
		"WebGL2RenderingContext",
		"FRAGMENT_SHADER"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT4x3"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT4x2"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT4"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT3x4"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT3x2"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT3"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT2x4"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT2x3"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_MAT2"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT_32_UNSIGNED_INT_24_8_REV"
	],
	[
		"WebGL2RenderingContext",
		"FLOAT"
	],
	[
		"WebGL2RenderingContext",
		"FASTEST"
	],
	[
		"WebGL2RenderingContext",
		"EQUAL"
	],
	[
		"WebGL2RenderingContext",
		"ELEMENT_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"ELEMENT_ARRAY_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"DYNAMIC_READ"
	],
	[
		"WebGL2RenderingContext",
		"DYNAMIC_DRAW"
	],
	[
		"WebGL2RenderingContext",
		"DYNAMIC_COPY"
	],
	[
		"WebGL2RenderingContext",
		"DST_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"DST_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_FRAMEBUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_FRAMEBUFFER"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER9"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER8"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER7"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER6"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER5"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER4"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER3"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER2"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER15"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER14"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER13"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER12"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER11"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER10"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER1"
	],
	[
		"WebGL2RenderingContext",
		"DRAW_BUFFER0"
	],
	[
		"WebGL2RenderingContext",
		"DONT_CARE"
	],
	[
		"WebGL2RenderingContext",
		"DITHER"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_TEST"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_STENCIL_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_STENCIL"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_RANGE"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_FUNC"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_COMPONENT32F"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_COMPONENT24"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_COMPONENT16"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_COMPONENT"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_CLEAR_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_BUFFER_BIT"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_BITS"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH_ATTACHMENT"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH32F_STENCIL8"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH24_STENCIL8"
	],
	[
		"WebGL2RenderingContext",
		"DEPTH"
	],
	[
		"WebGL2RenderingContext",
		"DELETE_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"DECR_WRAP"
	],
	[
		"WebGL2RenderingContext",
		"DECR"
	],
	[
		"WebGL2RenderingContext",
		"CW"
	],
	[
		"WebGL2RenderingContext",
		"CURRENT_VERTEX_ATTRIB"
	],
	[
		"WebGL2RenderingContext",
		"CURRENT_QUERY"
	],
	[
		"WebGL2RenderingContext",
		"CURRENT_PROGRAM"
	],
	[
		"WebGL2RenderingContext",
		"CULL_FACE_MODE"
	],
	[
		"WebGL2RenderingContext",
		"CULL_FACE"
	],
	[
		"WebGL2RenderingContext",
		"COPY_WRITE_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"COPY_WRITE_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"COPY_READ_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"COPY_READ_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"CONTEXT_LOST_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"CONSTANT_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"CONSTANT_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"CONDITION_SATISFIED"
	],
	[
		"WebGL2RenderingContext",
		"COMPRESSED_TEXTURE_FORMATS"
	],
	[
		"WebGL2RenderingContext",
		"COMPILE_STATUS"
	],
	[
		"WebGL2RenderingContext",
		"COMPARE_REF_TO_TEXTURE"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_WRITEMASK"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_CLEAR_VALUE"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_BUFFER_BIT"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT9"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT8"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT7"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT6"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT5"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT4"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT3"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT2"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT15"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT14"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT13"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT12"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT11"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT10"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT1"
	],
	[
		"WebGL2RenderingContext",
		"COLOR_ATTACHMENT0"
	],
	[
		"WebGL2RenderingContext",
		"COLOR"
	],
	[
		"WebGL2RenderingContext",
		"CLAMP_TO_EDGE"
	],
	[
		"WebGL2RenderingContext",
		"CCW"
	],
	[
		"WebGL2RenderingContext",
		"BYTE"
	],
	[
		"WebGL2RenderingContext",
		"BUFFER_USAGE"
	],
	[
		"WebGL2RenderingContext",
		"BUFFER_SIZE"
	],
	[
		"WebGL2RenderingContext",
		"BROWSER_DEFAULT_WEBGL"
	],
	[
		"WebGL2RenderingContext",
		"BOOL_VEC4"
	],
	[
		"WebGL2RenderingContext",
		"BOOL_VEC3"
	],
	[
		"WebGL2RenderingContext",
		"BOOL_VEC2"
	],
	[
		"WebGL2RenderingContext",
		"BOOL"
	],
	[
		"WebGL2RenderingContext",
		"BLUE_BITS"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_SRC_RGB"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_SRC_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_EQUATION_RGB"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_EQUATION_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_EQUATION"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_DST_RGB"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_DST_ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"BLEND_COLOR"
	],
	[
		"WebGL2RenderingContext",
		"BLEND"
	],
	[
		"WebGL2RenderingContext",
		"BACK"
	],
	[
		"WebGL2RenderingContext",
		"ATTACHED_SHADERS"
	],
	[
		"WebGL2RenderingContext",
		"ARRAY_BUFFER_BINDING"
	],
	[
		"WebGL2RenderingContext",
		"ARRAY_BUFFER"
	],
	[
		"WebGL2RenderingContext",
		"ANY_SAMPLES_PASSED_CONSERVATIVE"
	],
	[
		"WebGL2RenderingContext",
		"ANY_SAMPLES_PASSED"
	],
	[
		"WebGL2RenderingContext",
		"ALWAYS"
	],
	[
		"WebGL2RenderingContext",
		"ALREADY_SIGNALED"
	],
	[
		"WebGL2RenderingContext",
		"ALPHA_BITS"
	],
	[
		"WebGL2RenderingContext",
		"ALPHA"
	],
	[
		"WebGL2RenderingContext",
		"ALIASED_POINT_SIZE_RANGE"
	],
	[
		"WebGL2RenderingContext",
		"ALIASED_LINE_WIDTH_RANGE"
	],
	[
		"WebGL2RenderingContext",
		"ACTIVE_UNIFORM_BLOCKS"
	],
	[
		"WebGL2RenderingContext",
		"ACTIVE_UNIFORMS"
	],
	[
		"WebGL2RenderingContext",
		"ACTIVE_TEXTURE"
	],
	[
		"WebGL2RenderingContext",
		"ACTIVE_ATTRIBUTES"
	],
	[
		"WEBGL_blend_equation_advanced_coherent"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"SOFTLIGHT"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"SCREEN"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"OVERLAY"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"MULTIPLY"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"LIGHTEN"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"HSL_SATURATION"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"HSL_LUMINOSITY"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"HSL_HUE"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"HSL_COLOR"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"HARDLIGHT"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"EXCLUSION"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"DIFFERENCE"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"DARKEN"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"COLORDODGE"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype",
		"COLORBURN"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"prototype"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"SOFTLIGHT"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"SCREEN"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"OVERLAY"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"MULTIPLY"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"LIGHTEN"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"HSL_SATURATION"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"HSL_LUMINOSITY"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"HSL_HUE"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"HSL_COLOR"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"HARDLIGHT"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"EXCLUSION"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"DIFFERENCE"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"DARKEN"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"COLORDODGE"
	],
	[
		"WEBGL_blend_equation_advanced_coherent",
		"COLORBURN"
	],
	[
		"WEBGL_clip_cull_distance"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"MAX_CULL_DISTANCES_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"MAX_CLIP_DISTANCES_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE7_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE6_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE5_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE4_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE3_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE2_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE1_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype",
		"CLIP_DISTANCE0_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"prototype"
	],
	[
		"WEBGL_clip_cull_distance",
		"MAX_CULL_DISTANCES_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"MAX_CLIP_DISTANCES_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE7_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE6_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE5_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE4_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE3_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE2_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE1_WEBGL"
	],
	[
		"WEBGL_clip_cull_distance",
		"CLIP_DISTANCE0_WEBGL"
	],
	[
		"WEBGL_color_buffer_float"
	],
	[
		"WEBGL_color_buffer_float",
		"prototype",
		"UNSIGNED_NORMALIZED_EXT"
	],
	[
		"WEBGL_color_buffer_float",
		"prototype",
		"RGBA32F_EXT"
	],
	[
		"WEBGL_color_buffer_float",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT"
	],
	[
		"WEBGL_color_buffer_float",
		"prototype"
	],
	[
		"WEBGL_color_buffer_float",
		"UNSIGNED_NORMALIZED_EXT"
	],
	[
		"WEBGL_color_buffer_float",
		"RGBA32F_EXT"
	],
	[
		"WEBGL_color_buffer_float",
		"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT"
	],
	[
		"WEBGL_compressed_texture_astc"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"getSupportedProfiles()"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_8x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_8x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_8x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_6x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_6x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_5x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_5x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_4x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_12x12_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_12x10_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_10x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_10x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_10x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype",
		"COMPRESSED_RGBA_ASTC_10x10_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"prototype"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_8x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_8x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_8x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_6x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_6x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_5x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_5x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_4x4_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_12x12_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_12x10_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_10x8_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_10x6_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_10x5_KHR"
	],
	[
		"WEBGL_compressed_texture_astc",
		"COMPRESSED_RGBA_ASTC_10x10_KHR"
	],
	[
		"WEBGL_compressed_texture_etc"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_SRGB8_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_SIGNED_RG11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_SIGNED_R11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_RGBA8_ETC2_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_RGB8_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_RG11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype",
		"COMPRESSED_R11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"prototype"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_SRGB8_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_SIGNED_RG11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_SIGNED_R11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_RGBA8_ETC2_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_RGB8_ETC2"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_RG11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc",
		"COMPRESSED_R11_EAC"
	],
	[
		"WEBGL_compressed_texture_etc1"
	],
	[
		"WEBGL_compressed_texture_etc1",
		"prototype",
		"COMPRESSED_RGB_ETC1_WEBGL"
	],
	[
		"WEBGL_compressed_texture_etc1",
		"prototype"
	],
	[
		"WEBGL_compressed_texture_etc1",
		"COMPRESSED_RGB_ETC1_WEBGL"
	],
	[
		"WEBGL_compressed_texture_pvrtc"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"prototype",
		"COMPRESSED_RGB_PVRTC_4BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"prototype",
		"COMPRESSED_RGB_PVRTC_2BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"prototype",
		"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"prototype",
		"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"prototype"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"COMPRESSED_RGB_PVRTC_4BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"COMPRESSED_RGB_PVRTC_2BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_pvrtc",
		"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG"
	],
	[
		"WEBGL_compressed_texture_s3tc"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"prototype",
		"COMPRESSED_RGB_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"prototype",
		"COMPRESSED_RGBA_S3TC_DXT5_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"prototype",
		"COMPRESSED_RGBA_S3TC_DXT3_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"prototype",
		"COMPRESSED_RGBA_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"prototype"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"COMPRESSED_RGB_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"COMPRESSED_RGBA_S3TC_DXT5_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"COMPRESSED_RGBA_S3TC_DXT3_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc",
		"COMPRESSED_RGBA_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"prototype",
		"COMPRESSED_SRGB_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"prototype",
		"COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"prototype",
		"COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"prototype",
		"COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"prototype"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"COMPRESSED_SRGB_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT"
	],
	[
		"WEBGL_compressed_texture_s3tc_srgb",
		"COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT"
	],
	[
		"WEBGL_debug_renderer_info"
	],
	[
		"WEBGL_debug_renderer_info",
		"prototype",
		"UNMASKED_VENDOR_WEBGL"
	],
	[
		"WEBGL_debug_renderer_info",
		"prototype",
		"UNMASKED_RENDERER_WEBGL"
	],
	[
		"WEBGL_debug_renderer_info",
		"prototype"
	],
	[
		"WEBGL_debug_renderer_info",
		"UNMASKED_VENDOR_WEBGL"
	],
	[
		"WEBGL_debug_renderer_info",
		"UNMASKED_RENDERER_WEBGL"
	],
	[
		"WEBGL_debug_shaders"
	],
	[
		"WEBGL_debug_shaders",
		"prototype",
		"getTranslatedShaderSource()"
	],
	[
		"WEBGL_debug_shaders",
		"prototype"
	],
	[
		"WEBGL_depth_texture"
	],
	[
		"WEBGL_depth_texture",
		"prototype",
		"UNSIGNED_INT_24_8_WEBGL"
	],
	[
		"WEBGL_depth_texture",
		"prototype"
	],
	[
		"WEBGL_depth_texture",
		"UNSIGNED_INT_24_8_WEBGL"
	],
	[
		"WEBGL_draw_buffers"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"drawBuffersWEBGL()"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"MAX_DRAW_BUFFERS_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"MAX_COLOR_ATTACHMENTS_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER9_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER8_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER7_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER6_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER5_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER4_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER3_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER2_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER1_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER15_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER14_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER13_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER12_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER11_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER10_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"DRAW_BUFFER0_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT9_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT8_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT7_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT6_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT5_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT4_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT3_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT2_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT1_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT15_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT14_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT13_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT12_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT11_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT10_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype",
		"COLOR_ATTACHMENT0_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"prototype"
	],
	[
		"WEBGL_draw_buffers",
		"MAX_DRAW_BUFFERS_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"MAX_COLOR_ATTACHMENTS_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER9_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER8_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER7_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER6_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER5_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER4_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER3_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER2_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER1_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER15_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER14_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER13_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER12_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER11_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER10_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"DRAW_BUFFER0_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT9_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT8_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT7_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT6_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT5_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT4_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT3_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT2_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT1_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT15_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT14_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT13_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT12_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT11_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT10_WEBGL"
	],
	[
		"WEBGL_draw_buffers",
		"COLOR_ATTACHMENT0_WEBGL"
	],
	[
		"WEBGL_draw_instanced_base_vertex_base_instance"
	],
	[
		"WEBGL_draw_instanced_base_vertex_base_instance",
		"prototype",
		"drawElementsInstancedBaseVertexBaseInstanceWEBGL()"
	],
	[
		"WEBGL_draw_instanced_base_vertex_base_instance",
		"prototype",
		"drawArraysInstancedBaseInstanceWEBGL()"
	],
	[
		"WEBGL_draw_instanced_base_vertex_base_instance",
		"prototype"
	],
	[
		"WEBGL_lose_context"
	],
	[
		"WEBGL_lose_context",
		"prototype",
		"restoreContext()"
	],
	[
		"WEBGL_lose_context",
		"prototype",
		"loseContext()"
	],
	[
		"WEBGL_lose_context",
		"prototype"
	],
	[
		"WEBGL_multi_draw"
	],
	[
		"WEBGL_multi_draw",
		"prototype",
		"multiDrawElementsWEBGL()"
	],
	[
		"WEBGL_multi_draw",
		"prototype",
		"multiDrawElementsInstancedWEBGL()"
	],
	[
		"WEBGL_multi_draw",
		"prototype",
		"multiDrawArraysWEBGL()"
	],
	[
		"WEBGL_multi_draw",
		"prototype",
		"multiDrawArraysInstancedWEBGL()"
	],
	[
		"WEBGL_multi_draw",
		"prototype"
	],
	[
		"WEBGL_multi_draw_instanced_base_vertex_base_instance"
	],
	[
		"WEBGL_multi_draw_instanced_base_vertex_base_instance",
		"prototype",
		"multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL()"
	],
	[
		"WEBGL_multi_draw_instanced_base_vertex_base_instance",
		"prototype",
		"multiDrawArraysInstancedBaseInstanceWEBGL()"
	],
	[
		"WEBGL_multi_draw_instanced_base_vertex_base_instance",
		"prototype"
	],
	[
		"WEBGL_provoking_vertex"
	],
	[
		"WEBGL_provoking_vertex",
		"prototype",
		"provokingVertexWEBGL()"
	],
	[
		"WEBGL_provoking_vertex",
		"prototype",
		"PROVOKING_VERTEX_WEBGL"
	],
	[
		"WEBGL_provoking_vertex",
		"prototype",
		"LAST_VERTEX_CONVENTION_WEBGL"
	],
	[
		"WEBGL_provoking_vertex",
		"prototype",
		"FIRST_VERTEX_CONVENTION_WEBGL"
	],
	[
		"WEBGL_provoking_vertex",
		"prototype"
	],
	[
		"WEBGL_provoking_vertex",
		"PROVOKING_VERTEX_WEBGL"
	],
	[
		"WEBGL_provoking_vertex",
		"LAST_VERTEX_CONVENTION_WEBGL"
	],
	[
		"WEBGL_provoking_vertex",
		"FIRST_VERTEX_CONVENTION_WEBGL"
	],
	[
		"WebGLActiveInfo"
	],
	[
		"WebGLActiveInfo",
		"prototype",
		"type"
	],
	[
		"WebGLActiveInfo",
		"prototype",
		"size"
	],
	[
		"WebGLActiveInfo",
		"prototype",
		"name"
	],
	[
		"WebGLActiveInfo",
		"prototype"
	],
	[
		"WebGLBuffer"
	],
	[
		"WebGLBuffer",
		"prototype"
	],
	[
		"WebGLContextEvent"
	],
	[
		"WebGLContextEvent",
		"prototype",
		"statusMessage"
	],
	[
		"WebGLContextEvent",
		"prototype"
	],
	[
		"WebGLFramebuffer"
	],
	[
		"WebGLFramebuffer",
		"prototype"
	],
	[
		"WebGLObject"
	],
	[
		"WebGLObject",
		"prototype",
		"label"
	],
	[
		"WebGLObject",
		"prototype"
	],
	[
		"WebGLProgram"
	],
	[
		"WebGLProgram",
		"prototype"
	],
	[
		"WebGLQuery"
	],
	[
		"WebGLQuery",
		"prototype"
	],
	[
		"WebGLRenderbuffer"
	],
	[
		"WebGLRenderbuffer",
		"prototype"
	],
	[
		"WebGLRenderingContext"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"viewport()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttribPointer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib4fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib4f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib3fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib3f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib2fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib2f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib1fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"vertexAttrib1f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"validateProgram()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"useProgram()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"unpackColorSpace"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniformMatrix4fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniformMatrix3fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniformMatrix2fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform4iv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform4i()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform4fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform4f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform3iv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform3i()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform3fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform3f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform2iv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform2i()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform2fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform2f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform1iv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform1i()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform1fv()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"uniform1f()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"texSubImage2D()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"texParameteri()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"texParameterf()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"texImage2D()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"stencilOpSeparate()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"stencilOp()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"stencilMaskSeparate()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"stencilMask()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"stencilFuncSeparate()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"stencilFunc()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"shaderSource()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"scissor()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"sampleCoverage()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"renderbufferStorage()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"readPixels()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"polygonOffset()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"pixelStorei()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"makeXRCompatible()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"linkProgram()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"lineWidth()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isTexture()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isShader()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isRenderbuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isProgram()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isFramebuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isEnabled()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isContextLost()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"isBuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"hint()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getVertexAttribOffset()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getVertexAttrib()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getUniformLocation()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getUniform()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getTexParameter()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getSupportedExtensions()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getShaderSource()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getShaderPrecisionFormat()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getShaderParameter()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getShaderInfoLog()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getRenderbufferParameter()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getProgramParameter()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getProgramInfoLog()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getParameter()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getFramebufferAttachmentParameter()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getExtension()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getError()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getContextAttributes()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getBufferParameter()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getAttribLocation()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getAttachedShaders()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getActiveUniform()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"getActiveAttrib()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"generateMipmap()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"frontFace()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"framebufferTexture2D()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"framebufferRenderbuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"flush()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"finish()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"enableVertexAttribArray()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"enable()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"drawingBufferWidth"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"drawingBufferStorage()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"drawingBufferHeight"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"drawingBufferFormat"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"drawingBufferColorSpace"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"drawElements()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"drawArrays()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"disableVertexAttribArray()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"disable()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"detachShader()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"depthRange()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"depthMask()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"depthFunc()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"deleteTexture()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"deleteShader()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"deleteRenderbuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"deleteProgram()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"deleteFramebuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"deleteBuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"cullFace()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"createTexture()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"createShader()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"createRenderbuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"createProgram()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"createFramebuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"createBuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"copyTexSubImage2D()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"copyTexImage2D()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"compressedTexSubImage2D()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"compressedTexImage2D()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"compileShader()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"colorMask()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"clearStencil()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"clearDepth()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"clearColor()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"clear()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"checkFramebufferStatus()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"canvas"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"bufferSubData()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"bufferData()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"blendFuncSeparate()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"blendFunc()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"blendEquationSeparate()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"blendEquation()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"blendColor()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"bindTexture()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"bindRenderbuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"bindFramebuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"bindBuffer()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"bindAttribLocation()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"attachShader()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"activeTexture()"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ZERO"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VIEWPORT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_SHADER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_TYPE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_STRIDE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_POINTER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_NORMALIZED"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_ENABLED"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VERSION"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VENDOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"VALIDATE_STATUS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNSIGNED_SHORT_5_6_5"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNSIGNED_SHORT_5_5_5_1"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNSIGNED_SHORT_4_4_4_4"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNSIGNED_SHORT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNSIGNED_INT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNSIGNED_BYTE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNPACK_PREMULTIPLY_ALPHA_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNPACK_FLIP_Y_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNPACK_COLORSPACE_CONVERSION_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"UNPACK_ALIGNMENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TRIANGLE_STRIP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TRIANGLE_FAN"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TRIANGLES"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_WRAP_T"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_WRAP_S"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_MIN_FILTER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_MAG_FILTER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_POSITIVE_Z"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_POSITIVE_Y"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_POSITIVE_X"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_NEGATIVE_Z"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_NEGATIVE_Y"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP_NEGATIVE_X"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_CUBE_MAP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_BINDING_CUBE_MAP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_BINDING_2D"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE_2D"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE9"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE8"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE7"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE6"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE5"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE4"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE31"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE30"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE3"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE29"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE28"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE27"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE26"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE25"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE24"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE23"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE22"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE21"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE20"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE2"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE19"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE18"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE17"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE16"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE15"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE14"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE13"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE12"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE11"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE10"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE1"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE0"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"TEXTURE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SUBPIXEL_BITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STREAM_DRAW"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_VALUE_MASK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_TEST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_REF"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_PASS_DEPTH_PASS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_PASS_DEPTH_FAIL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_INDEX8"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_FUNC"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_FAIL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_CLEAR_VALUE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BUFFER_BIT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BACK_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BACK_VALUE_MASK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BACK_REF"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BACK_PASS_DEPTH_PASS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BACK_PASS_DEPTH_FAIL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BACK_FUNC"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_BACK_FAIL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STENCIL_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"STATIC_DRAW"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SRC_COLOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SRC_ALPHA_SATURATE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SRC_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SHORT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SHADING_LANGUAGE_VERSION"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SHADER_TYPE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SCISSOR_TEST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SCISSOR_BOX"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLE_COVERAGE_VALUE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLE_COVERAGE_INVERT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLE_COVERAGE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLE_BUFFERS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLE_ALPHA_TO_COVERAGE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLES"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLER_CUBE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"SAMPLER_2D"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RGBA8"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RGBA4"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RGBA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RGB5_A1"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RGB565"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RGB"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"REPLACE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"REPEAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_WIDTH"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_STENCIL_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_RED_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_INTERNAL_FORMAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_HEIGHT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_GREEN_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_DEPTH_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_BLUE_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER_ALPHA_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RENDERBUFFER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"RED_BITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"POLYGON_OFFSET_UNITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"POLYGON_OFFSET_FILL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"POLYGON_OFFSET_FACTOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"POINTS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"PACK_ALIGNMENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"OUT_OF_MEMORY"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ONE_MINUS_SRC_COLOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ONE_MINUS_SRC_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ONE_MINUS_DST_COLOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ONE_MINUS_DST_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ONE_MINUS_CONSTANT_COLOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ONE_MINUS_CONSTANT_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ONE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NO_ERROR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NOTEQUAL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NONE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NICEST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NEVER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NEAREST_MIPMAP_NEAREST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NEAREST_MIPMAP_LINEAR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"NEAREST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MIRRORED_REPEAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MEDIUM_INT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MEDIUM_FLOAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_VIEWPORT_DIMS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_VERTEX_UNIFORM_VECTORS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_VERTEX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_VERTEX_ATTRIBS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_VARYING_VECTORS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_TEXTURE_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_RENDERBUFFER_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_FRAGMENT_UNIFORM_VECTORS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_CUBE_MAP_TEXTURE_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"MAX_COMBINED_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LUMINANCE_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LUMINANCE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LOW_INT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LOW_FLOAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINK_STATUS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINE_WIDTH"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINE_STRIP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINE_LOOP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINES"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINEAR_MIPMAP_NEAREST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINEAR_MIPMAP_LINEAR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LINEAR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LESS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"LEQUAL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"KEEP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INVERT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INVALID_VALUE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INVALID_OPERATION"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INVALID_FRAMEBUFFER_OPERATION"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INVALID_ENUM"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INT_VEC4"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INT_VEC3"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INT_VEC2"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INCR_WRAP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"INCR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"IMPLEMENTATION_COLOR_READ_TYPE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"IMPLEMENTATION_COLOR_READ_FORMAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"HIGH_INT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"HIGH_FLOAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"GREEN_BITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"GREATER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"GEQUAL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"GENERATE_MIPMAP_HINT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FUNC_SUBTRACT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FUNC_REVERSE_SUBTRACT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FUNC_ADD"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRONT_FACE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRONT_AND_BACK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRONT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_UNSUPPORTED"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_DIMENSIONS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_INCOMPLETE_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_COMPLETE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAMEBUFFER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FRAGMENT_SHADER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FLOAT_VEC4"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FLOAT_VEC3"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FLOAT_VEC2"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FLOAT_MAT4"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FLOAT_MAT3"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FLOAT_MAT2"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FLOAT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"FASTEST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"EQUAL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ELEMENT_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ELEMENT_ARRAY_BUFFER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DYNAMIC_DRAW"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DST_COLOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DST_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DONT_CARE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DITHER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_TEST"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_STENCIL_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_STENCIL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_RANGE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_FUNC"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_COMPONENT16"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_COMPONENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_CLEAR_VALUE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_BUFFER_BIT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_BITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DEPTH_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DELETE_STATUS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DECR_WRAP"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"DECR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CW"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CURRENT_VERTEX_ATTRIB"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CURRENT_PROGRAM"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CULL_FACE_MODE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CULL_FACE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CONTEXT_LOST_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CONSTANT_COLOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CONSTANT_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"COMPRESSED_TEXTURE_FORMATS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"COMPILE_STATUS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"COLOR_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"COLOR_CLEAR_VALUE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"COLOR_BUFFER_BIT"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"COLOR_ATTACHMENT0"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CLAMP_TO_EDGE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"CCW"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BYTE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BUFFER_USAGE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BUFFER_SIZE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BROWSER_DEFAULT_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BOOL_VEC4"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BOOL_VEC3"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BOOL_VEC2"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BOOL"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLUE_BITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_SRC_RGB"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_SRC_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_EQUATION_RGB"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_EQUATION_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_EQUATION"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_DST_RGB"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_DST_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND_COLOR"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BLEND"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"BACK"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ATTACHED_SHADERS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ARRAY_BUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ARRAY_BUFFER"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ALWAYS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ALPHA_BITS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ALPHA"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ALIASED_POINT_SIZE_RANGE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ALIASED_LINE_WIDTH_RANGE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ACTIVE_UNIFORMS"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ACTIVE_TEXTURE"
	],
	[
		"WebGLRenderingContext",
		"prototype",
		"ACTIVE_ATTRIBUTES"
	],
	[
		"WebGLRenderingContext",
		"prototype"
	],
	[
		"WebGLRenderingContext",
		"ZERO"
	],
	[
		"WebGLRenderingContext",
		"VIEWPORT"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_SHADER"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_ATTRIB_ARRAY_TYPE"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_ATTRIB_ARRAY_STRIDE"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_ATTRIB_ARRAY_SIZE"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_ATTRIB_ARRAY_POINTER"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_ATTRIB_ARRAY_NORMALIZED"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_ATTRIB_ARRAY_ENABLED"
	],
	[
		"WebGLRenderingContext",
		"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"VERSION"
	],
	[
		"WebGLRenderingContext",
		"VENDOR"
	],
	[
		"WebGLRenderingContext",
		"VALIDATE_STATUS"
	],
	[
		"WebGLRenderingContext",
		"UNSIGNED_SHORT_5_6_5"
	],
	[
		"WebGLRenderingContext",
		"UNSIGNED_SHORT_5_5_5_1"
	],
	[
		"WebGLRenderingContext",
		"UNSIGNED_SHORT_4_4_4_4"
	],
	[
		"WebGLRenderingContext",
		"UNSIGNED_SHORT"
	],
	[
		"WebGLRenderingContext",
		"UNSIGNED_INT"
	],
	[
		"WebGLRenderingContext",
		"UNSIGNED_BYTE"
	],
	[
		"WebGLRenderingContext",
		"UNPACK_PREMULTIPLY_ALPHA_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"UNPACK_FLIP_Y_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"UNPACK_COLORSPACE_CONVERSION_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"UNPACK_ALIGNMENT"
	],
	[
		"WebGLRenderingContext",
		"TRIANGLE_STRIP"
	],
	[
		"WebGLRenderingContext",
		"TRIANGLE_FAN"
	],
	[
		"WebGLRenderingContext",
		"TRIANGLES"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_WRAP_T"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_WRAP_S"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_MIN_FILTER"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_MAG_FILTER"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_CUBE_MAP_POSITIVE_Z"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_CUBE_MAP_POSITIVE_Y"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_CUBE_MAP_POSITIVE_X"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_CUBE_MAP_NEGATIVE_Z"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_CUBE_MAP_NEGATIVE_Y"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_CUBE_MAP_NEGATIVE_X"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_CUBE_MAP"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_BINDING_CUBE_MAP"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_BINDING_2D"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE_2D"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE9"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE8"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE7"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE6"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE5"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE4"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE31"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE30"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE3"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE29"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE28"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE27"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE26"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE25"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE24"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE23"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE22"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE21"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE20"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE2"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE19"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE18"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE17"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE16"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE15"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE14"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE13"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE12"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE11"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE10"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE1"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE0"
	],
	[
		"WebGLRenderingContext",
		"TEXTURE"
	],
	[
		"WebGLRenderingContext",
		"SUBPIXEL_BITS"
	],
	[
		"WebGLRenderingContext",
		"STREAM_DRAW"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_VALUE_MASK"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_TEST"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_REF"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_PASS_DEPTH_PASS"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_PASS_DEPTH_FAIL"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_INDEX8"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_FUNC"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_FAIL"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_CLEAR_VALUE"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BUFFER_BIT"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BITS"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BACK_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BACK_VALUE_MASK"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BACK_REF"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BACK_PASS_DEPTH_PASS"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BACK_PASS_DEPTH_FAIL"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BACK_FUNC"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_BACK_FAIL"
	],
	[
		"WebGLRenderingContext",
		"STENCIL_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"STATIC_DRAW"
	],
	[
		"WebGLRenderingContext",
		"SRC_COLOR"
	],
	[
		"WebGLRenderingContext",
		"SRC_ALPHA_SATURATE"
	],
	[
		"WebGLRenderingContext",
		"SRC_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"SHORT"
	],
	[
		"WebGLRenderingContext",
		"SHADING_LANGUAGE_VERSION"
	],
	[
		"WebGLRenderingContext",
		"SHADER_TYPE"
	],
	[
		"WebGLRenderingContext",
		"SCISSOR_TEST"
	],
	[
		"WebGLRenderingContext",
		"SCISSOR_BOX"
	],
	[
		"WebGLRenderingContext",
		"SAMPLE_COVERAGE_VALUE"
	],
	[
		"WebGLRenderingContext",
		"SAMPLE_COVERAGE_INVERT"
	],
	[
		"WebGLRenderingContext",
		"SAMPLE_COVERAGE"
	],
	[
		"WebGLRenderingContext",
		"SAMPLE_BUFFERS"
	],
	[
		"WebGLRenderingContext",
		"SAMPLE_ALPHA_TO_COVERAGE"
	],
	[
		"WebGLRenderingContext",
		"SAMPLES"
	],
	[
		"WebGLRenderingContext",
		"SAMPLER_CUBE"
	],
	[
		"WebGLRenderingContext",
		"SAMPLER_2D"
	],
	[
		"WebGLRenderingContext",
		"RGBA8"
	],
	[
		"WebGLRenderingContext",
		"RGBA4"
	],
	[
		"WebGLRenderingContext",
		"RGBA"
	],
	[
		"WebGLRenderingContext",
		"RGB5_A1"
	],
	[
		"WebGLRenderingContext",
		"RGB565"
	],
	[
		"WebGLRenderingContext",
		"RGB"
	],
	[
		"WebGLRenderingContext",
		"REPLACE"
	],
	[
		"WebGLRenderingContext",
		"REPEAT"
	],
	[
		"WebGLRenderingContext",
		"RENDERER"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_WIDTH"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_STENCIL_SIZE"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_RED_SIZE"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_INTERNAL_FORMAT"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_HEIGHT"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_GREEN_SIZE"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_DEPTH_SIZE"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_BLUE_SIZE"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER_ALPHA_SIZE"
	],
	[
		"WebGLRenderingContext",
		"RENDERBUFFER"
	],
	[
		"WebGLRenderingContext",
		"RED_BITS"
	],
	[
		"WebGLRenderingContext",
		"POLYGON_OFFSET_UNITS"
	],
	[
		"WebGLRenderingContext",
		"POLYGON_OFFSET_FILL"
	],
	[
		"WebGLRenderingContext",
		"POLYGON_OFFSET_FACTOR"
	],
	[
		"WebGLRenderingContext",
		"POINTS"
	],
	[
		"WebGLRenderingContext",
		"PACK_ALIGNMENT"
	],
	[
		"WebGLRenderingContext",
		"OUT_OF_MEMORY"
	],
	[
		"WebGLRenderingContext",
		"ONE_MINUS_SRC_COLOR"
	],
	[
		"WebGLRenderingContext",
		"ONE_MINUS_SRC_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"ONE_MINUS_DST_COLOR"
	],
	[
		"WebGLRenderingContext",
		"ONE_MINUS_DST_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"ONE_MINUS_CONSTANT_COLOR"
	],
	[
		"WebGLRenderingContext",
		"ONE_MINUS_CONSTANT_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"ONE"
	],
	[
		"WebGLRenderingContext",
		"NO_ERROR"
	],
	[
		"WebGLRenderingContext",
		"NOTEQUAL"
	],
	[
		"WebGLRenderingContext",
		"NONE"
	],
	[
		"WebGLRenderingContext",
		"NICEST"
	],
	[
		"WebGLRenderingContext",
		"NEVER"
	],
	[
		"WebGLRenderingContext",
		"NEAREST_MIPMAP_NEAREST"
	],
	[
		"WebGLRenderingContext",
		"NEAREST_MIPMAP_LINEAR"
	],
	[
		"WebGLRenderingContext",
		"NEAREST"
	],
	[
		"WebGLRenderingContext",
		"MIRRORED_REPEAT"
	],
	[
		"WebGLRenderingContext",
		"MEDIUM_INT"
	],
	[
		"WebGLRenderingContext",
		"MEDIUM_FLOAT"
	],
	[
		"WebGLRenderingContext",
		"MAX_VIEWPORT_DIMS"
	],
	[
		"WebGLRenderingContext",
		"MAX_VERTEX_UNIFORM_VECTORS"
	],
	[
		"WebGLRenderingContext",
		"MAX_VERTEX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGLRenderingContext",
		"MAX_VERTEX_ATTRIBS"
	],
	[
		"WebGLRenderingContext",
		"MAX_VARYING_VECTORS"
	],
	[
		"WebGLRenderingContext",
		"MAX_TEXTURE_SIZE"
	],
	[
		"WebGLRenderingContext",
		"MAX_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGLRenderingContext",
		"MAX_RENDERBUFFER_SIZE"
	],
	[
		"WebGLRenderingContext",
		"MAX_FRAGMENT_UNIFORM_VECTORS"
	],
	[
		"WebGLRenderingContext",
		"MAX_CUBE_MAP_TEXTURE_SIZE"
	],
	[
		"WebGLRenderingContext",
		"MAX_COMBINED_TEXTURE_IMAGE_UNITS"
	],
	[
		"WebGLRenderingContext",
		"LUMINANCE_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"LUMINANCE"
	],
	[
		"WebGLRenderingContext",
		"LOW_INT"
	],
	[
		"WebGLRenderingContext",
		"LOW_FLOAT"
	],
	[
		"WebGLRenderingContext",
		"LINK_STATUS"
	],
	[
		"WebGLRenderingContext",
		"LINE_WIDTH"
	],
	[
		"WebGLRenderingContext",
		"LINE_STRIP"
	],
	[
		"WebGLRenderingContext",
		"LINE_LOOP"
	],
	[
		"WebGLRenderingContext",
		"LINES"
	],
	[
		"WebGLRenderingContext",
		"LINEAR_MIPMAP_NEAREST"
	],
	[
		"WebGLRenderingContext",
		"LINEAR_MIPMAP_LINEAR"
	],
	[
		"WebGLRenderingContext",
		"LINEAR"
	],
	[
		"WebGLRenderingContext",
		"LESS"
	],
	[
		"WebGLRenderingContext",
		"LEQUAL"
	],
	[
		"WebGLRenderingContext",
		"KEEP"
	],
	[
		"WebGLRenderingContext",
		"INVERT"
	],
	[
		"WebGLRenderingContext",
		"INVALID_VALUE"
	],
	[
		"WebGLRenderingContext",
		"INVALID_OPERATION"
	],
	[
		"WebGLRenderingContext",
		"INVALID_FRAMEBUFFER_OPERATION"
	],
	[
		"WebGLRenderingContext",
		"INVALID_ENUM"
	],
	[
		"WebGLRenderingContext",
		"INT_VEC4"
	],
	[
		"WebGLRenderingContext",
		"INT_VEC3"
	],
	[
		"WebGLRenderingContext",
		"INT_VEC2"
	],
	[
		"WebGLRenderingContext",
		"INT"
	],
	[
		"WebGLRenderingContext",
		"INCR_WRAP"
	],
	[
		"WebGLRenderingContext",
		"INCR"
	],
	[
		"WebGLRenderingContext",
		"IMPLEMENTATION_COLOR_READ_TYPE"
	],
	[
		"WebGLRenderingContext",
		"IMPLEMENTATION_COLOR_READ_FORMAT"
	],
	[
		"WebGLRenderingContext",
		"HIGH_INT"
	],
	[
		"WebGLRenderingContext",
		"HIGH_FLOAT"
	],
	[
		"WebGLRenderingContext",
		"GREEN_BITS"
	],
	[
		"WebGLRenderingContext",
		"GREATER"
	],
	[
		"WebGLRenderingContext",
		"GEQUAL"
	],
	[
		"WebGLRenderingContext",
		"GENERATE_MIPMAP_HINT"
	],
	[
		"WebGLRenderingContext",
		"FUNC_SUBTRACT"
	],
	[
		"WebGLRenderingContext",
		"FUNC_REVERSE_SUBTRACT"
	],
	[
		"WebGLRenderingContext",
		"FUNC_ADD"
	],
	[
		"WebGLRenderingContext",
		"FRONT_FACE"
	],
	[
		"WebGLRenderingContext",
		"FRONT_AND_BACK"
	],
	[
		"WebGLRenderingContext",
		"FRONT"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_UNSUPPORTED"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_INCOMPLETE_DIMENSIONS"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_INCOMPLETE_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_COMPLETE"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"
	],
	[
		"WebGLRenderingContext",
		"FRAMEBUFFER"
	],
	[
		"WebGLRenderingContext",
		"FRAGMENT_SHADER"
	],
	[
		"WebGLRenderingContext",
		"FLOAT_VEC4"
	],
	[
		"WebGLRenderingContext",
		"FLOAT_VEC3"
	],
	[
		"WebGLRenderingContext",
		"FLOAT_VEC2"
	],
	[
		"WebGLRenderingContext",
		"FLOAT_MAT4"
	],
	[
		"WebGLRenderingContext",
		"FLOAT_MAT3"
	],
	[
		"WebGLRenderingContext",
		"FLOAT_MAT2"
	],
	[
		"WebGLRenderingContext",
		"FLOAT"
	],
	[
		"WebGLRenderingContext",
		"FASTEST"
	],
	[
		"WebGLRenderingContext",
		"EQUAL"
	],
	[
		"WebGLRenderingContext",
		"ELEMENT_ARRAY_BUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"ELEMENT_ARRAY_BUFFER"
	],
	[
		"WebGLRenderingContext",
		"DYNAMIC_DRAW"
	],
	[
		"WebGLRenderingContext",
		"DST_COLOR"
	],
	[
		"WebGLRenderingContext",
		"DST_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"DONT_CARE"
	],
	[
		"WebGLRenderingContext",
		"DITHER"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_TEST"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_STENCIL_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_STENCIL"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_RANGE"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_FUNC"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_COMPONENT16"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_COMPONENT"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_CLEAR_VALUE"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_BUFFER_BIT"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_BITS"
	],
	[
		"WebGLRenderingContext",
		"DEPTH_ATTACHMENT"
	],
	[
		"WebGLRenderingContext",
		"DELETE_STATUS"
	],
	[
		"WebGLRenderingContext",
		"DECR_WRAP"
	],
	[
		"WebGLRenderingContext",
		"DECR"
	],
	[
		"WebGLRenderingContext",
		"CW"
	],
	[
		"WebGLRenderingContext",
		"CURRENT_VERTEX_ATTRIB"
	],
	[
		"WebGLRenderingContext",
		"CURRENT_PROGRAM"
	],
	[
		"WebGLRenderingContext",
		"CULL_FACE_MODE"
	],
	[
		"WebGLRenderingContext",
		"CULL_FACE"
	],
	[
		"WebGLRenderingContext",
		"CONTEXT_LOST_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"CONSTANT_COLOR"
	],
	[
		"WebGLRenderingContext",
		"CONSTANT_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"COMPRESSED_TEXTURE_FORMATS"
	],
	[
		"WebGLRenderingContext",
		"COMPILE_STATUS"
	],
	[
		"WebGLRenderingContext",
		"COLOR_WRITEMASK"
	],
	[
		"WebGLRenderingContext",
		"COLOR_CLEAR_VALUE"
	],
	[
		"WebGLRenderingContext",
		"COLOR_BUFFER_BIT"
	],
	[
		"WebGLRenderingContext",
		"COLOR_ATTACHMENT0"
	],
	[
		"WebGLRenderingContext",
		"CLAMP_TO_EDGE"
	],
	[
		"WebGLRenderingContext",
		"CCW"
	],
	[
		"WebGLRenderingContext",
		"BYTE"
	],
	[
		"WebGLRenderingContext",
		"BUFFER_USAGE"
	],
	[
		"WebGLRenderingContext",
		"BUFFER_SIZE"
	],
	[
		"WebGLRenderingContext",
		"BROWSER_DEFAULT_WEBGL"
	],
	[
		"WebGLRenderingContext",
		"BOOL_VEC4"
	],
	[
		"WebGLRenderingContext",
		"BOOL_VEC3"
	],
	[
		"WebGLRenderingContext",
		"BOOL_VEC2"
	],
	[
		"WebGLRenderingContext",
		"BOOL"
	],
	[
		"WebGLRenderingContext",
		"BLUE_BITS"
	],
	[
		"WebGLRenderingContext",
		"BLEND_SRC_RGB"
	],
	[
		"WebGLRenderingContext",
		"BLEND_SRC_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"BLEND_EQUATION_RGB"
	],
	[
		"WebGLRenderingContext",
		"BLEND_EQUATION_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"BLEND_EQUATION"
	],
	[
		"WebGLRenderingContext",
		"BLEND_DST_RGB"
	],
	[
		"WebGLRenderingContext",
		"BLEND_DST_ALPHA"
	],
	[
		"WebGLRenderingContext",
		"BLEND_COLOR"
	],
	[
		"WebGLRenderingContext",
		"BLEND"
	],
	[
		"WebGLRenderingContext",
		"BACK"
	],
	[
		"WebGLRenderingContext",
		"ATTACHED_SHADERS"
	],
	[
		"WebGLRenderingContext",
		"ARRAY_BUFFER_BINDING"
	],
	[
		"WebGLRenderingContext",
		"ARRAY_BUFFER"
	],
	[
		"WebGLRenderingContext",
		"ALWAYS"
	],
	[
		"WebGLRenderingContext",
		"ALPHA_BITS"
	],
	[
		"WebGLRenderingContext",
		"ALPHA"
	],
	[
		"WebGLRenderingContext",
		"ALIASED_POINT_SIZE_RANGE"
	],
	[
		"WebGLRenderingContext",
		"ALIASED_LINE_WIDTH_RANGE"
	],
	[
		"WebGLRenderingContext",
		"ACTIVE_UNIFORMS"
	],
	[
		"WebGLRenderingContext",
		"ACTIVE_TEXTURE"
	],
	[
		"WebGLRenderingContext",
		"ACTIVE_ATTRIBUTES"
	],
	[
		"WebGLSampler"
	],
	[
		"WebGLSampler",
		"prototype"
	],
	[
		"WebGLShader"
	],
	[
		"WebGLShader",
		"prototype"
	],
	[
		"WebGLShaderPrecisionFormat"
	],
	[
		"WebGLShaderPrecisionFormat",
		"prototype",
		"rangeMin"
	],
	[
		"WebGLShaderPrecisionFormat",
		"prototype",
		"rangeMax"
	],
	[
		"WebGLShaderPrecisionFormat",
		"prototype",
		"precision"
	],
	[
		"WebGLShaderPrecisionFormat",
		"prototype"
	],
	[
		"WebGLSync"
	],
	[
		"WebGLSync",
		"prototype"
	],
	[
		"WebGLTexture"
	],
	[
		"WebGLTexture",
		"prototype"
	],
	[
		"WebGLTimerQueryEXT"
	],
	[
		"WebGLTimerQueryEXT",
		"prototype"
	],
	[
		"WebGLTransformFeedback"
	],
	[
		"WebGLTransformFeedback",
		"prototype"
	],
	[
		"WebGLUniformLocation"
	],
	[
		"WebGLUniformLocation",
		"prototype"
	],
	[
		"WebGLVertexArrayObject"
	],
	[
		"WebGLVertexArrayObject",
		"prototype"
	],
	[
		"WebGLVertexArrayObjectOES"
	],
	[
		"WebGLVertexArrayObjectOES",
		"prototype"
	],
	[
		"WebSocket"
	],
	[
		"WebSocket",
		"prototype",
		"url"
	],
	[
		"WebSocket",
		"prototype",
		"send()"
	],
	[
		"WebSocket",
		"prototype",
		"readyState"
	],
	[
		"WebSocket",
		"prototype",
		"protocol"
	],
	[
		"WebSocket",
		"prototype",
		"onopen"
	],
	[
		"WebSocket",
		"prototype",
		"onmessage"
	],
	[
		"WebSocket",
		"prototype",
		"onerror"
	],
	[
		"WebSocket",
		"prototype",
		"onclose"
	],
	[
		"WebSocket",
		"prototype",
		"extensions"
	],
	[
		"WebSocket",
		"prototype",
		"close()"
	],
	[
		"WebSocket",
		"prototype",
		"bufferedAmount"
	],
	[
		"WebSocket",
		"prototype",
		"binaryType"
	],
	[
		"WebSocket",
		"prototype",
		"OPEN"
	],
	[
		"WebSocket",
		"prototype",
		"CONNECTING"
	],
	[
		"WebSocket",
		"prototype",
		"CLOSING"
	],
	[
		"WebSocket",
		"prototype",
		"CLOSED"
	],
	[
		"WebSocket",
		"prototype"
	],
	[
		"WebSocket",
		"OPEN"
	],
	[
		"WebSocket",
		"CONNECTING"
	],
	[
		"WebSocket",
		"CLOSING"
	],
	[
		"WebSocket",
		"CLOSED"
	],
	[
		"WebTransport"
	],
	[
		"WebTransport",
		"prototype",
		"reliability"
	],
	[
		"WebTransport",
		"prototype",
		"ready"
	],
	[
		"WebTransport",
		"prototype",
		"incomingUnidirectionalStreams"
	],
	[
		"WebTransport",
		"prototype",
		"incomingBidirectionalStreams"
	],
	[
		"WebTransport",
		"prototype",
		"getStats()"
	],
	[
		"WebTransport",
		"prototype",
		"draining"
	],
	[
		"WebTransport",
		"prototype",
		"datagrams"
	],
	[
		"WebTransport",
		"prototype",
		"createUnidirectionalStream()"
	],
	[
		"WebTransport",
		"prototype",
		"createSendGroup()"
	],
	[
		"WebTransport",
		"prototype",
		"createBidirectionalStream()"
	],
	[
		"WebTransport",
		"prototype",
		"congestionControl"
	],
	[
		"WebTransport",
		"prototype",
		"closed"
	],
	[
		"WebTransport",
		"prototype",
		"close()"
	],
	[
		"WebTransport",
		"prototype",
		"anticipatedConcurrentIncomingUnidirectionalStreams"
	],
	[
		"WebTransport",
		"prototype",
		"anticipatedConcurrentIncomingBidirectionalStreams"
	],
	[
		"WebTransport",
		"prototype"
	],
	[
		"WebTransport",
		"supportsReliableOnly"
	],
	[
		"WebTransportBidirectionalStream"
	],
	[
		"WebTransportBidirectionalStream",
		"prototype",
		"writable"
	],
	[
		"WebTransportBidirectionalStream",
		"prototype",
		"readable"
	],
	[
		"WebTransportBidirectionalStream",
		"prototype"
	],
	[
		"WebTransportDatagramDuplexStream"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype",
		"writable"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype",
		"readable"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype",
		"outgoingMaxAge"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype",
		"outgoingHighWaterMark"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype",
		"maxDatagramSize"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype",
		"incomingMaxAge"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype",
		"incomingHighWaterMark"
	],
	[
		"WebTransportDatagramDuplexStream",
		"prototype"
	],
	[
		"WebTransportError"
	],
	[
		"WebTransportError",
		"prototype",
		"streamErrorCode"
	],
	[
		"WebTransportError",
		"prototype",
		"source"
	],
	[
		"WebTransportError",
		"prototype"
	],
	[
		"WebTransportReceiveStream"
	],
	[
		"WebTransportReceiveStream",
		"prototype",
		"getStats()"
	],
	[
		"WebTransportReceiveStream",
		"prototype"
	],
	[
		"WebTransportSendGroup"
	],
	[
		"WebTransportSendGroup",
		"prototype",
		"getStats()"
	],
	[
		"WebTransportSendGroup",
		"prototype"
	],
	[
		"WebTransportSendStream"
	],
	[
		"WebTransportSendStream",
		"prototype",
		"sendOrder"
	],
	[
		"WebTransportSendStream",
		"prototype",
		"sendGroup"
	],
	[
		"WebTransportSendStream",
		"prototype",
		"getWriter()"
	],
	[
		"WebTransportSendStream",
		"prototype",
		"getStats()"
	],
	[
		"WebTransportSendStream",
		"prototype"
	],
	[
		"WebTransportWriter"
	],
	[
		"WebTransportWriter",
		"prototype",
		"atomicWrite()"
	],
	[
		"WebTransportWriter",
		"prototype"
	],
	[
		"WGSLLanguageFeatures"
	],
	[
		"WGSLLanguageFeatures",
		"prototype"
	],
	[
		"WheelEvent"
	],
	[
		"WheelEvent",
		"prototype",
		"deltaZ"
	],
	[
		"WheelEvent",
		"prototype",
		"deltaY"
	],
	[
		"WheelEvent",
		"prototype",
		"deltaX"
	],
	[
		"WheelEvent",
		"prototype",
		"deltaMode"
	],
	[
		"WheelEvent",
		"prototype",
		"DOM_DELTA_PIXEL"
	],
	[
		"WheelEvent",
		"prototype",
		"DOM_DELTA_PAGE"
	],
	[
		"WheelEvent",
		"prototype",
		"DOM_DELTA_LINE"
	],
	[
		"WheelEvent",
		"prototype"
	],
	[
		"WheelEvent",
		"DOM_DELTA_PIXEL"
	],
	[
		"WheelEvent",
		"DOM_DELTA_PAGE"
	],
	[
		"WheelEvent",
		"DOM_DELTA_LINE"
	],
	[
		"WindowClient"
	],
	[
		"WindowClient",
		"prototype",
		"visibilityState"
	],
	[
		"WindowClient",
		"prototype",
		"navigate()"
	],
	[
		"WindowClient",
		"prototype",
		"focused"
	],
	[
		"WindowClient",
		"prototype",
		"focus()"
	],
	[
		"WindowClient",
		"prototype",
		"ancestorOrigins"
	],
	[
		"WindowClient",
		"prototype"
	],
	[
		"WindowControlsOverlay"
	],
	[
		"WindowControlsOverlay",
		"prototype",
		"visible"
	],
	[
		"WindowControlsOverlay",
		"prototype",
		"ongeometrychange"
	],
	[
		"WindowControlsOverlay",
		"prototype",
		"getTitlebarAreaRect()"
	],
	[
		"WindowControlsOverlay",
		"prototype"
	],
	[
		"WindowControlsOverlayGeometryChangeEvent"
	],
	[
		"WindowControlsOverlayGeometryChangeEvent",
		"prototype",
		"visible"
	],
	[
		"WindowControlsOverlayGeometryChangeEvent",
		"prototype",
		"titlebarAreaRect"
	],
	[
		"WindowControlsOverlayGeometryChangeEvent",
		"prototype"
	],
	[
		"Worker"
	],
	[
		"Worker",
		"prototype",
		"terminate()"
	],
	[
		"Worker",
		"prototype",
		"postMessage()"
	],
	[
		"Worker",
		"prototype",
		"onmessageerror"
	],
	[
		"Worker",
		"prototype",
		"onmessage"
	],
	[
		"Worker",
		"prototype",
		"onerror"
	],
	[
		"Worker",
		"prototype"
	],
	[
		"WorkerLocation"
	],
	[
		"WorkerLocation",
		"prototype",
		"search"
	],
	[
		"WorkerLocation",
		"prototype",
		"protocol"
	],
	[
		"WorkerLocation",
		"prototype",
		"port"
	],
	[
		"WorkerLocation",
		"prototype",
		"pathname"
	],
	[
		"WorkerLocation",
		"prototype",
		"origin"
	],
	[
		"WorkerLocation",
		"prototype",
		"href"
	],
	[
		"WorkerLocation",
		"prototype",
		"hostname"
	],
	[
		"WorkerLocation",
		"prototype",
		"host"
	],
	[
		"WorkerLocation",
		"prototype",
		"hash"
	],
	[
		"WorkerLocation",
		"prototype"
	],
	[
		"WorkerNavigator"
	],
	[
		"WorkerNavigator",
		"prototype",
		"vendorSub"
	],
	[
		"WorkerNavigator",
		"prototype",
		"vendor"
	],
	[
		"WorkerNavigator",
		"prototype",
		"userAgentData"
	],
	[
		"WorkerNavigator",
		"prototype",
		"userAgent"
	],
	[
		"WorkerNavigator",
		"prototype",
		"usb"
	],
	[
		"WorkerNavigator",
		"prototype",
		"taintEnabled()"
	],
	[
		"WorkerNavigator",
		"prototype",
		"storageBuckets"
	],
	[
		"WorkerNavigator",
		"prototype",
		"storage"
	],
	[
		"WorkerNavigator",
		"prototype",
		"smartCard"
	],
	[
		"WorkerNavigator",
		"prototype",
		"setAppBadge()"
	],
	[
		"WorkerNavigator",
		"prototype",
		"serviceWorker"
	],
	[
		"WorkerNavigator",
		"prototype",
		"serial"
	],
	[
		"WorkerNavigator",
		"prototype",
		"productSub"
	],
	[
		"WorkerNavigator",
		"prototype",
		"product"
	],
	[
		"WorkerNavigator",
		"prototype",
		"platform"
	],
	[
		"WorkerNavigator",
		"prototype",
		"permissions"
	],
	[
		"WorkerNavigator",
		"prototype",
		"oscpu"
	],
	[
		"WorkerNavigator",
		"prototype",
		"onLine"
	],
	[
		"WorkerNavigator",
		"prototype",
		"ml"
	],
	[
		"WorkerNavigator",
		"prototype",
		"mediaCapabilities"
	],
	[
		"WorkerNavigator",
		"prototype",
		"locks"
	],
	[
		"WorkerNavigator",
		"prototype",
		"languages"
	],
	[
		"WorkerNavigator",
		"prototype",
		"language"
	],
	[
		"WorkerNavigator",
		"prototype",
		"hid"
	],
	[
		"WorkerNavigator",
		"prototype",
		"hardwareConcurrency"
	],
	[
		"WorkerNavigator",
		"prototype",
		"gpu"
	],
	[
		"WorkerNavigator",
		"prototype",
		"deviceMemory"
	],
	[
		"WorkerNavigator",
		"prototype",
		"connection"
	],
	[
		"WorkerNavigator",
		"prototype",
		"clearAppBadge()"
	],
	[
		"WorkerNavigator",
		"prototype",
		"appVersion"
	],
	[
		"WorkerNavigator",
		"prototype",
		"appName"
	],
	[
		"WorkerNavigator",
		"prototype",
		"appCodeName"
	],
	[
		"WorkerNavigator",
		"prototype"
	],
	[
		"Worklet"
	],
	[
		"Worklet",
		"prototype",
		"addModule()"
	],
	[
		"Worklet",
		"prototype"
	],
	[
		"WorkletAnimation"
	],
	[
		"WorkletAnimation",
		"prototype",
		"animatorName"
	],
	[
		"WorkletAnimation",
		"prototype"
	],
	[
		"WorkletAnimationEffect"
	],
	[
		"WorkletAnimationEffect",
		"prototype",
		"localTime"
	],
	[
		"WorkletAnimationEffect",
		"prototype",
		"getTiming()"
	],
	[
		"WorkletAnimationEffect",
		"prototype",
		"getComputedTiming()"
	],
	[
		"WorkletAnimationEffect",
		"prototype"
	],
	[
		"WorkletGlobalScope"
	],
	[
		"WorkletGlobalScope",
		"prototype"
	],
	[
		"WorkletGroupEffect"
	],
	[
		"WorkletGroupEffect",
		"prototype",
		"getChildren()"
	],
	[
		"WorkletGroupEffect",
		"prototype"
	],
	[
		"WritableStream"
	],
	[
		"WritableStream",
		"prototype",
		"locked"
	],
	[
		"WritableStream",
		"prototype",
		"getWriter()"
	],
	[
		"WritableStream",
		"prototype",
		"close()"
	],
	[
		"WritableStream",
		"prototype",
		"abort()"
	],
	[
		"WritableStream",
		"prototype"
	],
	[
		"WritableStreamDefaultController"
	],
	[
		"WritableStreamDefaultController",
		"prototype",
		"signal"
	],
	[
		"WritableStreamDefaultController",
		"prototype",
		"error()"
	],
	[
		"WritableStreamDefaultController",
		"prototype"
	],
	[
		"WritableStreamDefaultWriter"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype",
		"write()"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype",
		"releaseLock()"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype",
		"ready"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype",
		"desiredSize"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype",
		"closed"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype",
		"close()"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype",
		"abort()"
	],
	[
		"WritableStreamDefaultWriter",
		"prototype"
	],
	[
		"XMLDocument"
	],
	[
		"XMLDocument",
		"prototype"
	],
	[
		"XMLHttpRequest"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"withCredentials"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"upload"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"timeout"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"statusText"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"status"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"setRequestHeader()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"setPrivateToken()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"setAttributionReporting()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"send()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"responseXML"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"responseURL"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"responseType"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"responseText"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"response"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"readyState"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"overrideMimeType()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"open()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"onreadystatechange"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"getResponseHeader()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"getAllResponseHeaders()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"abort()"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"UNSENT"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"OPENED"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"LOADING"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"HEADERS_RECEIVED"
	],
	[
		"XMLHttpRequest",
		"prototype",
		"DONE"
	],
	[
		"XMLHttpRequest",
		"prototype"
	],
	[
		"XMLHttpRequest",
		"UNSENT"
	],
	[
		"XMLHttpRequest",
		"OPENED"
	],
	[
		"XMLHttpRequest",
		"LOADING"
	],
	[
		"XMLHttpRequest",
		"HEADERS_RECEIVED"
	],
	[
		"XMLHttpRequest",
		"DONE"
	],
	[
		"XMLHttpRequestEventTarget"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype",
		"ontimeout"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype",
		"onprogress"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype",
		"onloadstart"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype",
		"onloadend"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype",
		"onload"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype",
		"onerror"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype",
		"onabort"
	],
	[
		"XMLHttpRequestEventTarget",
		"prototype"
	],
	[
		"XMLHttpRequestUpload"
	],
	[
		"XMLHttpRequestUpload",
		"prototype"
	],
	[
		"XMLSerializer"
	],
	[
		"XMLSerializer",
		"prototype",
		"serializeToString()"
	],
	[
		"XMLSerializer",
		"prototype"
	],
	[
		"XPathEvaluator"
	],
	[
		"XPathEvaluator",
		"prototype",
		"evaluate()"
	],
	[
		"XPathEvaluator",
		"prototype",
		"createNSResolver()"
	],
	[
		"XPathEvaluator",
		"prototype",
		"createExpression()"
	],
	[
		"XPathEvaluator",
		"prototype"
	],
	[
		"XPathExpression"
	],
	[
		"XPathExpression",
		"prototype",
		"evaluate()"
	],
	[
		"XPathExpression",
		"prototype"
	],
	[
		"XPathResult"
	],
	[
		"XPathResult",
		"prototype",
		"stringValue"
	],
	[
		"XPathResult",
		"prototype",
		"snapshotLength"
	],
	[
		"XPathResult",
		"prototype",
		"snapshotItem()"
	],
	[
		"XPathResult",
		"prototype",
		"singleNodeValue"
	],
	[
		"XPathResult",
		"prototype",
		"resultType"
	],
	[
		"XPathResult",
		"prototype",
		"numberValue"
	],
	[
		"XPathResult",
		"prototype",
		"iterateNext()"
	],
	[
		"XPathResult",
		"prototype",
		"invalidIteratorState"
	],
	[
		"XPathResult",
		"prototype",
		"booleanValue"
	],
	[
		"XPathResult",
		"prototype",
		"UNORDERED_NODE_SNAPSHOT_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"UNORDERED_NODE_ITERATOR_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"STRING_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"ORDERED_NODE_SNAPSHOT_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"ORDERED_NODE_ITERATOR_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"NUMBER_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"FIRST_ORDERED_NODE_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"BOOLEAN_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"ANY_UNORDERED_NODE_TYPE"
	],
	[
		"XPathResult",
		"prototype",
		"ANY_TYPE"
	],
	[
		"XPathResult",
		"prototype"
	],
	[
		"XPathResult",
		"UNORDERED_NODE_SNAPSHOT_TYPE"
	],
	[
		"XPathResult",
		"UNORDERED_NODE_ITERATOR_TYPE"
	],
	[
		"XPathResult",
		"STRING_TYPE"
	],
	[
		"XPathResult",
		"ORDERED_NODE_SNAPSHOT_TYPE"
	],
	[
		"XPathResult",
		"ORDERED_NODE_ITERATOR_TYPE"
	],
	[
		"XPathResult",
		"NUMBER_TYPE"
	],
	[
		"XPathResult",
		"FIRST_ORDERED_NODE_TYPE"
	],
	[
		"XPathResult",
		"BOOLEAN_TYPE"
	],
	[
		"XPathResult",
		"ANY_UNORDERED_NODE_TYPE"
	],
	[
		"XPathResult",
		"ANY_TYPE"
	],
	[
		"XRAnchor"
	],
	[
		"XRAnchor",
		"prototype",
		"requestPersistentHandle()"
	],
	[
		"XRAnchor",
		"prototype",
		"delete()"
	],
	[
		"XRAnchor",
		"prototype",
		"anchorSpace"
	],
	[
		"XRAnchor",
		"prototype"
	],
	[
		"XRAnchorSet"
	],
	[
		"XRAnchorSet",
		"prototype"
	],
	[
		"XRBoundedReferenceSpace"
	],
	[
		"XRBoundedReferenceSpace",
		"prototype",
		"boundsGeometry"
	],
	[
		"XRBoundedReferenceSpace",
		"prototype"
	],
	[
		"XRCamera"
	],
	[
		"XRCamera",
		"prototype",
		"width"
	],
	[
		"XRCamera",
		"prototype",
		"height"
	],
	[
		"XRCamera",
		"prototype"
	],
	[
		"XRCompositionLayer"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"quality"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"opacity"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"needsRedraw"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"mipLevels"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"layout"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"forceMonoPresentation"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"destroy()"
	],
	[
		"XRCompositionLayer",
		"prototype",
		"blendTextureSourceAlpha"
	],
	[
		"XRCompositionLayer",
		"prototype"
	],
	[
		"XRCPUDepthInformation"
	],
	[
		"XRCPUDepthInformation",
		"prototype",
		"getDepthInMeters()"
	],
	[
		"XRCPUDepthInformation",
		"prototype",
		"data"
	],
	[
		"XRCPUDepthInformation",
		"prototype"
	],
	[
		"XRCubeLayer"
	],
	[
		"XRCubeLayer",
		"prototype",
		"space"
	],
	[
		"XRCubeLayer",
		"prototype",
		"orientation"
	],
	[
		"XRCubeLayer",
		"prototype",
		"onredraw"
	],
	[
		"XRCubeLayer",
		"prototype"
	],
	[
		"XRCylinderLayer"
	],
	[
		"XRCylinderLayer",
		"prototype",
		"transform"
	],
	[
		"XRCylinderLayer",
		"prototype",
		"space"
	],
	[
		"XRCylinderLayer",
		"prototype",
		"radius"
	],
	[
		"XRCylinderLayer",
		"prototype",
		"onredraw"
	],
	[
		"XRCylinderLayer",
		"prototype",
		"centralAngle"
	],
	[
		"XRCylinderLayer",
		"prototype",
		"aspectRatio"
	],
	[
		"XRCylinderLayer",
		"prototype"
	],
	[
		"XRDepthInformation"
	],
	[
		"XRDepthInformation",
		"prototype",
		"width"
	],
	[
		"XRDepthInformation",
		"prototype",
		"rawValueToMeters"
	],
	[
		"XRDepthInformation",
		"prototype",
		"normDepthBufferFromNormView"
	],
	[
		"XRDepthInformation",
		"prototype",
		"height"
	],
	[
		"XRDepthInformation",
		"prototype"
	],
	[
		"XREquirectLayer"
	],
	[
		"XREquirectLayer",
		"prototype",
		"upperVerticalAngle"
	],
	[
		"XREquirectLayer",
		"prototype",
		"transform"
	],
	[
		"XREquirectLayer",
		"prototype",
		"space"
	],
	[
		"XREquirectLayer",
		"prototype",
		"radius"
	],
	[
		"XREquirectLayer",
		"prototype",
		"onredraw"
	],
	[
		"XREquirectLayer",
		"prototype",
		"lowerVerticalAngle"
	],
	[
		"XREquirectLayer",
		"prototype",
		"centralHorizontalAngle"
	],
	[
		"XREquirectLayer",
		"prototype"
	],
	[
		"XRFrame"
	],
	[
		"XRFrame",
		"prototype",
		"trackedAnchors"
	],
	[
		"XRFrame",
		"prototype",
		"session"
	],
	[
		"XRFrame",
		"prototype",
		"predictedDisplayTime"
	],
	[
		"XRFrame",
		"prototype",
		"getViewerPose()"
	],
	[
		"XRFrame",
		"prototype",
		"getPose()"
	],
	[
		"XRFrame",
		"prototype",
		"getLightEstimate()"
	],
	[
		"XRFrame",
		"prototype",
		"getJointPose()"
	],
	[
		"XRFrame",
		"prototype",
		"getImageTrackingResults()"
	],
	[
		"XRFrame",
		"prototype",
		"getHitTestResultsForTransientInput()"
	],
	[
		"XRFrame",
		"prototype",
		"getHitTestResults()"
	],
	[
		"XRFrame",
		"prototype",
		"getDepthInformation()"
	],
	[
		"XRFrame",
		"prototype",
		"fillPoses()"
	],
	[
		"XRFrame",
		"prototype",
		"fillJointRadii()"
	],
	[
		"XRFrame",
		"prototype",
		"detectedPlanes"
	],
	[
		"XRFrame",
		"prototype",
		"detectedMeshes"
	],
	[
		"XRFrame",
		"prototype",
		"createAnchor()"
	],
	[
		"XRFrame",
		"prototype"
	],
	[
		"XRHand"
	],
	[
		"XRHand",
		"prototype",
		"size"
	],
	[
		"XRHand",
		"prototype",
		"get()"
	],
	[
		"XRHand",
		"prototype"
	],
	[
		"XRHitTestResult"
	],
	[
		"XRHitTestResult",
		"prototype",
		"getPose()"
	],
	[
		"XRHitTestResult",
		"prototype",
		"createAnchor()"
	],
	[
		"XRHitTestResult",
		"prototype"
	],
	[
		"XRHitTestSource"
	],
	[
		"XRHitTestSource",
		"prototype",
		"cancel()"
	],
	[
		"XRHitTestSource",
		"prototype"
	],
	[
		"XRImageTrackingResult"
	],
	[
		"XRImageTrackingResult",
		"prototype",
		"trackingState"
	],
	[
		"XRImageTrackingResult",
		"prototype",
		"measuredWidthInMeters"
	],
	[
		"XRImageTrackingResult",
		"prototype",
		"index"
	],
	[
		"XRImageTrackingResult",
		"prototype",
		"imageSpace"
	],
	[
		"XRImageTrackingResult",
		"prototype"
	],
	[
		"XRInputSource"
	],
	[
		"XRInputSource",
		"prototype",
		"targetRaySpace"
	],
	[
		"XRInputSource",
		"prototype",
		"targetRayMode"
	],
	[
		"XRInputSource",
		"prototype",
		"skipRendering"
	],
	[
		"XRInputSource",
		"prototype",
		"profiles"
	],
	[
		"XRInputSource",
		"prototype",
		"handedness"
	],
	[
		"XRInputSource",
		"prototype",
		"hand"
	],
	[
		"XRInputSource",
		"prototype",
		"gripSpace"
	],
	[
		"XRInputSource",
		"prototype",
		"gamepad"
	],
	[
		"XRInputSource",
		"prototype"
	],
	[
		"XRInputSourceArray"
	],
	[
		"XRInputSourceArray",
		"prototype",
		"length"
	],
	[
		"XRInputSourceArray",
		"prototype"
	],
	[
		"XRInputSourceEvent"
	],
	[
		"XRInputSourceEvent",
		"prototype",
		"inputSource"
	],
	[
		"XRInputSourceEvent",
		"prototype",
		"frame"
	],
	[
		"XRInputSourceEvent",
		"prototype"
	],
	[
		"XRInputSourcesChangeEvent"
	],
	[
		"XRInputSourcesChangeEvent",
		"prototype",
		"session"
	],
	[
		"XRInputSourcesChangeEvent",
		"prototype",
		"removed"
	],
	[
		"XRInputSourcesChangeEvent",
		"prototype",
		"added"
	],
	[
		"XRInputSourcesChangeEvent",
		"prototype"
	],
	[
		"XRJointPose"
	],
	[
		"XRJointPose",
		"prototype",
		"radius"
	],
	[
		"XRJointPose",
		"prototype"
	],
	[
		"XRJointSpace"
	],
	[
		"XRJointSpace",
		"prototype",
		"jointName"
	],
	[
		"XRJointSpace",
		"prototype"
	],
	[
		"XRLayer"
	],
	[
		"XRLayer",
		"prototype"
	],
	[
		"XRLayerEvent"
	],
	[
		"XRLayerEvent",
		"prototype",
		"layer"
	],
	[
		"XRLayerEvent",
		"prototype"
	],
	[
		"XRLightEstimate"
	],
	[
		"XRLightEstimate",
		"prototype",
		"sphericalHarmonicsCoefficients"
	],
	[
		"XRLightEstimate",
		"prototype",
		"primaryLightIntensity"
	],
	[
		"XRLightEstimate",
		"prototype",
		"primaryLightDirection"
	],
	[
		"XRLightEstimate",
		"prototype"
	],
	[
		"XRLightProbe"
	],
	[
		"XRLightProbe",
		"prototype",
		"probeSpace"
	],
	[
		"XRLightProbe",
		"prototype",
		"onreflectionchange"
	],
	[
		"XRLightProbe",
		"prototype"
	],
	[
		"XRMediaBinding"
	],
	[
		"XRMediaBinding",
		"prototype",
		"createQuadLayer()"
	],
	[
		"XRMediaBinding",
		"prototype",
		"createEquirectLayer()"
	],
	[
		"XRMediaBinding",
		"prototype",
		"createCylinderLayer()"
	],
	[
		"XRMediaBinding",
		"prototype"
	],
	[
		"XRMesh"
	],
	[
		"XRMesh",
		"prototype",
		"vertices"
	],
	[
		"XRMesh",
		"prototype",
		"semanticLabel"
	],
	[
		"XRMesh",
		"prototype",
		"meshSpace"
	],
	[
		"XRMesh",
		"prototype",
		"lastChangedTime"
	],
	[
		"XRMesh",
		"prototype",
		"indices"
	],
	[
		"XRMesh",
		"prototype"
	],
	[
		"XRMeshSet"
	],
	[
		"XRMeshSet",
		"prototype"
	],
	[
		"XRPermissionStatus"
	],
	[
		"XRPermissionStatus",
		"prototype",
		"granted"
	],
	[
		"XRPermissionStatus",
		"prototype"
	],
	[
		"XRPlane"
	],
	[
		"XRPlane",
		"prototype",
		"semanticLabel"
	],
	[
		"XRPlane",
		"prototype",
		"polygon"
	],
	[
		"XRPlane",
		"prototype",
		"planeSpace"
	],
	[
		"XRPlane",
		"prototype",
		"orientation"
	],
	[
		"XRPlane",
		"prototype",
		"lastChangedTime"
	],
	[
		"XRPlane",
		"prototype"
	],
	[
		"XRPlaneSet"
	],
	[
		"XRPlaneSet",
		"prototype"
	],
	[
		"XRPose"
	],
	[
		"XRPose",
		"prototype",
		"transform"
	],
	[
		"XRPose",
		"prototype",
		"linearVelocity"
	],
	[
		"XRPose",
		"prototype",
		"emulatedPosition"
	],
	[
		"XRPose",
		"prototype",
		"angularVelocity"
	],
	[
		"XRPose",
		"prototype"
	],
	[
		"XRProjectionLayer"
	],
	[
		"XRProjectionLayer",
		"prototype",
		"textureWidth"
	],
	[
		"XRProjectionLayer",
		"prototype",
		"textureHeight"
	],
	[
		"XRProjectionLayer",
		"prototype",
		"textureArrayLength"
	],
	[
		"XRProjectionLayer",
		"prototype",
		"ignoreDepthValues"
	],
	[
		"XRProjectionLayer",
		"prototype",
		"fixedFoveation"
	],
	[
		"XRProjectionLayer",
		"prototype",
		"deltaPose"
	],
	[
		"XRProjectionLayer",
		"prototype"
	],
	[
		"XRQuadLayer"
	],
	[
		"XRQuadLayer",
		"prototype",
		"width"
	],
	[
		"XRQuadLayer",
		"prototype",
		"transform"
	],
	[
		"XRQuadLayer",
		"prototype",
		"space"
	],
	[
		"XRQuadLayer",
		"prototype",
		"onredraw"
	],
	[
		"XRQuadLayer",
		"prototype",
		"height"
	],
	[
		"XRQuadLayer",
		"prototype"
	],
	[
		"XRRay"
	],
	[
		"XRRay",
		"prototype",
		"origin"
	],
	[
		"XRRay",
		"prototype",
		"matrix"
	],
	[
		"XRRay",
		"prototype",
		"direction"
	],
	[
		"XRRay",
		"prototype"
	],
	[
		"XRReferenceSpace"
	],
	[
		"XRReferenceSpace",
		"prototype",
		"onreset"
	],
	[
		"XRReferenceSpace",
		"prototype",
		"getOffsetReferenceSpace()"
	],
	[
		"XRReferenceSpace",
		"prototype"
	],
	[
		"XRReferenceSpaceEvent"
	],
	[
		"XRReferenceSpaceEvent",
		"prototype",
		"transform"
	],
	[
		"XRReferenceSpaceEvent",
		"prototype",
		"referenceSpace"
	],
	[
		"XRReferenceSpaceEvent",
		"prototype"
	],
	[
		"XRRenderState"
	],
	[
		"XRRenderState",
		"prototype",
		"layers"
	],
	[
		"XRRenderState",
		"prototype",
		"inlineVerticalFieldOfView"
	],
	[
		"XRRenderState",
		"prototype",
		"depthNear"
	],
	[
		"XRRenderState",
		"prototype",
		"depthFar"
	],
	[
		"XRRenderState",
		"prototype",
		"baseLayer"
	],
	[
		"XRRenderState",
		"prototype"
	],
	[
		"XRRigidTransform"
	],
	[
		"XRRigidTransform",
		"prototype",
		"position"
	],
	[
		"XRRigidTransform",
		"prototype",
		"orientation"
	],
	[
		"XRRigidTransform",
		"prototype",
		"matrix"
	],
	[
		"XRRigidTransform",
		"prototype",
		"inverse"
	],
	[
		"XRRigidTransform",
		"prototype"
	],
	[
		"XRSession"
	],
	[
		"XRSession",
		"prototype",
		"visibilityState"
	],
	[
		"XRSession",
		"prototype",
		"updateTargetFrameRate()"
	],
	[
		"XRSession",
		"prototype",
		"updateRenderState()"
	],
	[
		"XRSession",
		"prototype",
		"supportedFrameRates"
	],
	[
		"XRSession",
		"prototype",
		"restorePersistentAnchor()"
	],
	[
		"XRSession",
		"prototype",
		"requestReferenceSpace()"
	],
	[
		"XRSession",
		"prototype",
		"requestLightProbe()"
	],
	[
		"XRSession",
		"prototype",
		"requestHitTestSourceForTransientInput()"
	],
	[
		"XRSession",
		"prototype",
		"requestHitTestSource()"
	],
	[
		"XRSession",
		"prototype",
		"requestAnimationFrame()"
	],
	[
		"XRSession",
		"prototype",
		"renderState"
	],
	[
		"XRSession",
		"prototype",
		"preferredReflectionFormat"
	],
	[
		"XRSession",
		"prototype",
		"persistentAnchors"
	],
	[
		"XRSession",
		"prototype",
		"onvisibilitychange"
	],
	[
		"XRSession",
		"prototype",
		"onsqueezestart"
	],
	[
		"XRSession",
		"prototype",
		"onsqueezeend"
	],
	[
		"XRSession",
		"prototype",
		"onsqueeze"
	],
	[
		"XRSession",
		"prototype",
		"onselectstart"
	],
	[
		"XRSession",
		"prototype",
		"onselectend"
	],
	[
		"XRSession",
		"prototype",
		"onselect"
	],
	[
		"XRSession",
		"prototype",
		"oninputsourceschange"
	],
	[
		"XRSession",
		"prototype",
		"onframeratechange"
	],
	[
		"XRSession",
		"prototype",
		"onend"
	],
	[
		"XRSession",
		"prototype",
		"isSystemKeyboardSupported"
	],
	[
		"XRSession",
		"prototype",
		"interactionMode"
	],
	[
		"XRSession",
		"prototype",
		"inputSources"
	],
	[
		"XRSession",
		"prototype",
		"initiateRoomCapture()"
	],
	[
		"XRSession",
		"prototype",
		"getImageTrackability()"
	],
	[
		"XRSession",
		"prototype",
		"frameRate"
	],
	[
		"XRSession",
		"prototype",
		"environmentBlendMode"
	],
	[
		"XRSession",
		"prototype",
		"end()"
	],
	[
		"XRSession",
		"prototype",
		"enabledFeatures"
	],
	[
		"XRSession",
		"prototype",
		"domOverlayState"
	],
	[
		"XRSession",
		"prototype",
		"depthUsage"
	],
	[
		"XRSession",
		"prototype",
		"depthDataFormat"
	],
	[
		"XRSession",
		"prototype",
		"deletePersistentAnchor()"
	],
	[
		"XRSession",
		"prototype",
		"cancelAnimationFrame()"
	],
	[
		"XRSession",
		"prototype"
	],
	[
		"XRSessionEvent"
	],
	[
		"XRSessionEvent",
		"prototype",
		"session"
	],
	[
		"XRSessionEvent",
		"prototype"
	],
	[
		"XRSpace"
	],
	[
		"XRSpace",
		"prototype"
	],
	[
		"XRSubImage"
	],
	[
		"XRSubImage",
		"prototype",
		"viewport"
	],
	[
		"XRSubImage",
		"prototype"
	],
	[
		"XRSystem"
	],
	[
		"XRSystem",
		"prototype",
		"requestSession()"
	],
	[
		"XRSystem",
		"prototype",
		"ondevicechange"
	],
	[
		"XRSystem",
		"prototype",
		"isSessionSupported()"
	],
	[
		"XRSystem",
		"prototype"
	],
	[
		"XRTransientInputHitTestResult"
	],
	[
		"XRTransientInputHitTestResult",
		"prototype",
		"results"
	],
	[
		"XRTransientInputHitTestResult",
		"prototype",
		"inputSource"
	],
	[
		"XRTransientInputHitTestResult",
		"prototype"
	],
	[
		"XRTransientInputHitTestSource"
	],
	[
		"XRTransientInputHitTestSource",
		"prototype",
		"cancel()"
	],
	[
		"XRTransientInputHitTestSource",
		"prototype"
	],
	[
		"XRView"
	],
	[
		"XRView",
		"prototype",
		"transform"
	],
	[
		"XRView",
		"prototype",
		"requestViewportScale()"
	],
	[
		"XRView",
		"prototype",
		"recommendedViewportScale"
	],
	[
		"XRView",
		"prototype",
		"projectionMatrix"
	],
	[
		"XRView",
		"prototype",
		"isFirstPersonObserver"
	],
	[
		"XRView",
		"prototype",
		"eye"
	],
	[
		"XRView",
		"prototype",
		"camera"
	],
	[
		"XRView",
		"prototype"
	],
	[
		"XRViewerPose"
	],
	[
		"XRViewerPose",
		"prototype",
		"views"
	],
	[
		"XRViewerPose",
		"prototype"
	],
	[
		"XRViewport"
	],
	[
		"XRViewport",
		"prototype",
		"y"
	],
	[
		"XRViewport",
		"prototype",
		"x"
	],
	[
		"XRViewport",
		"prototype",
		"width"
	],
	[
		"XRViewport",
		"prototype",
		"height"
	],
	[
		"XRViewport",
		"prototype"
	],
	[
		"XRWebGLBinding"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"usesDepthValues"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"nativeProjectionScaleFactor"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"getViewSubImage()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"getSubImage()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"getReflectionCubeMap()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"getDepthInformation()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"getCameraImage()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"createQuadLayer()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"createProjectionLayer()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"createEquirectLayer()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"createCylinderLayer()"
	],
	[
		"XRWebGLBinding",
		"prototype",
		"createCubeLayer()"
	],
	[
		"XRWebGLBinding",
		"prototype"
	],
	[
		"XRWebGLDepthInformation"
	],
	[
		"XRWebGLDepthInformation",
		"prototype",
		"textureType"
	],
	[
		"XRWebGLDepthInformation",
		"prototype",
		"texture"
	],
	[
		"XRWebGLDepthInformation",
		"prototype",
		"imageIndex"
	],
	[
		"XRWebGLDepthInformation",
		"prototype"
	],
	[
		"XRWebGLLayer"
	],
	[
		"XRWebGLLayer",
		"prototype",
		"ignoreDepthValues"
	],
	[
		"XRWebGLLayer",
		"prototype",
		"getViewport()"
	],
	[
		"XRWebGLLayer",
		"prototype",
		"framebufferWidth"
	],
	[
		"XRWebGLLayer",
		"prototype",
		"framebufferHeight"
	],
	[
		"XRWebGLLayer",
		"prototype",
		"framebuffer"
	],
	[
		"XRWebGLLayer",
		"prototype",
		"fixedFoveation"
	],
	[
		"XRWebGLLayer",
		"prototype",
		"antialias"
	],
	[
		"XRWebGLLayer",
		"prototype"
	],
	[
		"XRWebGLLayer",
		"getNativeFramebufferScaleFactor()"
	],
	[
		"XRWebGLSubImage"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"motionVectorTextureWidth"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"motionVectorTextureHeight"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"motionVectorTexture"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"imageIndex"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"depthStencilTextureWidth"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"depthStencilTextureHeight"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"depthStencilTexture"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"colorTextureWidth"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"colorTextureHeight"
	],
	[
		"XRWebGLSubImage",
		"prototype",
		"colorTexture"
	],
	[
		"XRWebGLSubImage",
		"prototype"
	],
	[
		"XSLTProcessor"
	],
	[
		"XSLTProcessor",
		"prototype",
		"transformToFragment()"
	],
	[
		"XSLTProcessor",
		"prototype",
		"transformToDocument()"
	],
	[
		"XSLTProcessor",
		"prototype",
		"setParameter()"
	],
	[
		"XSLTProcessor",
		"prototype",
		"reset()"
	],
	[
		"XSLTProcessor",
		"prototype",
		"removeParameter()"
	],
	[
		"XSLTProcessor",
		"prototype",
		"importStylesheet()"
	],
	[
		"XSLTProcessor",
		"prototype",
		"getParameter()"
	],
	[
		"XSLTProcessor",
		"prototype",
		"clearParameters()"
	],
	[
		"XSLTProcessor",
		"prototype"
	],
	[
		"alert()"
	],
	[
		"atob()"
	],
	[
		"atob()"
	],
	[
		"blur()"
	],
	[
		"btoa()"
	],
	[
		"btoa()"
	],
	[
		"caches"
	],
	[
		"caches"
	],
	[
		"cancelAnimationFrame()"
	],
	[
		"cancelAnimationFrame()"
	],
	[
		"cancelIdleCallback()"
	],
	[
		"captureEvents()"
	],
	[
		"clearInterval()"
	],
	[
		"clearInterval()"
	],
	[
		"clearTimeout()"
	],
	[
		"clearTimeout()"
	],
	[
		"clientInformation"
	],
	[
		"clients"
	],
	[
		"close()"
	],
	[
		"close()"
	],
	[
		"close()"
	],
	[
		"closed"
	],
	[
		"confirm()"
	],
	[
		"cookieStore"
	],
	[
		"cookieStore"
	],
	[
		"createImageBitmap()"
	],
	[
		"createImageBitmap()"
	],
	[
		"credentialless"
	],
	[
		"credentialless"
	],
	[
		"crossOriginIsolated"
	],
	[
		"crossOriginIsolated"
	],
	[
		"crypto"
	],
	[
		"crypto"
	],
	[
		"customElements"
	],
	[
		"devicePixelRatio"
	],
	[
		"document"
	],
	[
		"documentPictureInPicture"
	],
	[
		"event"
	],
	[
		"external"
	],
	[
		"fakeWorklet1"
	],
	[
		"fakeWorklet2"
	],
	[
		"fence"
	],
	[
		"fetch()"
	],
	[
		"fetch()"
	],
	[
		"focus()"
	],
	[
		"fonts"
	],
	[
		"frameElement"
	],
	[
		"frames"
	],
	[
		"getComputedStyle()"
	],
	[
		"getDigitalGoodsService()"
	],
	[
		"getScreenDetails()"
	],
	[
		"getSelection()"
	],
	[
		"history"
	],
	[
		"importScripts()"
	],
	[
		"indexedDB"
	],
	[
		"indexedDB"
	],
	[
		"innerHeight"
	],
	[
		"innerWidth"
	],
	[
		"isSecureContext"
	],
	[
		"isSecureContext"
	],
	[
		"launchQueue"
	],
	[
		"length"
	],
	[
		"localStorage"
	],
	[
		"location"
	],
	[
		"location"
	],
	[
		"locationbar"
	],
	[
		"matchMedia()"
	],
	[
		"menubar"
	],
	[
		"moveBy()"
	],
	[
		"moveTo()"
	],
	[
		"name"
	],
	[
		"name"
	],
	[
		"name"
	],
	[
		"navigate()"
	],
	[
		"navigation"
	],
	[
		"navigator"
	],
	[
		"navigator"
	],
	[
		"onabort"
	],
	[
		"onactivate"
	],
	[
		"onafterprint"
	],
	[
		"onanimationcancel"
	],
	[
		"onanimationend"
	],
	[
		"onanimationiteration"
	],
	[
		"onanimationstart"
	],
	[
		"onappinstalled"
	],
	[
		"onauxclick"
	],
	[
		"onbackgroundfetchabort"
	],
	[
		"onbackgroundfetchclick"
	],
	[
		"onbackgroundfetchfail"
	],
	[
		"onbackgroundfetchsuccess"
	],
	[
		"onbeforeinput"
	],
	[
		"onbeforeinstallprompt"
	],
	[
		"onbeforematch"
	],
	[
		"onbeforeprint"
	],
	[
		"onbeforetoggle"
	],
	[
		"onbeforeunload"
	],
	[
		"onbeforexrselect"
	],
	[
		"onblur"
	],
	[
		"oncancel"
	],
	[
		"oncanmakepayment"
	],
	[
		"oncanplay"
	],
	[
		"oncanplaythrough"
	],
	[
		"onchange"
	],
	[
		"onclick"
	],
	[
		"onclose"
	],
	[
		"onconnect"
	],
	[
		"oncontentdelete"
	],
	[
		"oncontextlost"
	],
	[
		"oncontextmenu"
	],
	[
		"oncontextrestored"
	],
	[
		"oncookiechange"
	],
	[
		"oncopy"
	],
	[
		"oncuechange"
	],
	[
		"oncut"
	],
	[
		"ondblclick"
	],
	[
		"ondevicemotion"
	],
	[
		"ondeviceorientation"
	],
	[
		"ondeviceorientationabsolute"
	],
	[
		"ondrag"
	],
	[
		"ondragend"
	],
	[
		"ondragenter"
	],
	[
		"ondragleave"
	],
	[
		"ondragover"
	],
	[
		"ondragstart"
	],
	[
		"ondrop"
	],
	[
		"ondurationchange"
	],
	[
		"onemptied"
	],
	[
		"onended"
	],
	[
		"onerror"
	],
	[
		"onerror"
	],
	[
		"onfetch"
	],
	[
		"onfocus"
	],
	[
		"onformdata"
	],
	[
		"ongamepadconnected"
	],
	[
		"ongamepaddisconnected"
	],
	[
		"ongotpointercapture"
	],
	[
		"onhashchange"
	],
	[
		"oninput"
	],
	[
		"oninstall"
	],
	[
		"oninvalid"
	],
	[
		"onkeydown"
	],
	[
		"onkeypress"
	],
	[
		"onkeyup"
	],
	[
		"onlanguagechange"
	],
	[
		"onlanguagechange"
	],
	[
		"onload"
	],
	[
		"onloadeddata"
	],
	[
		"onloadedmetadata"
	],
	[
		"onloadstart"
	],
	[
		"onlostpointercapture"
	],
	[
		"onmessage"
	],
	[
		"onmessage"
	],
	[
		"onmessage"
	],
	[
		"onmessageerror"
	],
	[
		"onmessageerror"
	],
	[
		"onmessageerror"
	],
	[
		"onmousedown"
	],
	[
		"onmouseenter"
	],
	[
		"onmouseleave"
	],
	[
		"onmousemove"
	],
	[
		"onmouseout"
	],
	[
		"onmouseover"
	],
	[
		"onmouseup"
	],
	[
		"onnotificationclick"
	],
	[
		"onnotificationclose"
	],
	[
		"onoffline"
	],
	[
		"onoffline"
	],
	[
		"ononline"
	],
	[
		"ononline"
	],
	[
		"onorientationchange"
	],
	[
		"onpagehide"
	],
	[
		"onpagereveal"
	],
	[
		"onpageshow"
	],
	[
		"onpageswap"
	],
	[
		"onpaste"
	],
	[
		"onpause"
	],
	[
		"onpaymentrequest"
	],
	[
		"onperiodicsync"
	],
	[
		"onplay"
	],
	[
		"onplaying"
	],
	[
		"onpointercancel"
	],
	[
		"onpointerdown"
	],
	[
		"onpointerenter"
	],
	[
		"onpointerleave"
	],
	[
		"onpointermove"
	],
	[
		"onpointerout"
	],
	[
		"onpointerover"
	],
	[
		"onpointerrawupdate"
	],
	[
		"onpointerup"
	],
	[
		"onpopstate"
	],
	[
		"onportalactivate"
	],
	[
		"onprogress"
	],
	[
		"onpush"
	],
	[
		"onpushsubscriptionchange"
	],
	[
		"onratechange"
	],
	[
		"onrejectionhandled"
	],
	[
		"onrejectionhandled"
	],
	[
		"onreset"
	],
	[
		"onresize"
	],
	[
		"onrtctransform"
	],
	[
		"onscroll"
	],
	[
		"onscrollend"
	],
	[
		"onsecuritypolicyviolation"
	],
	[
		"onseeked"
	],
	[
		"onseeking"
	],
	[
		"onselect"
	],
	[
		"onselectionchange"
	],
	[
		"onselectstart"
	],
	[
		"onslotchange"
	],
	[
		"onsnapchanged"
	],
	[
		"onsnapchanging"
	],
	[
		"onstalled"
	],
	[
		"onstorage"
	],
	[
		"onsubmit"
	],
	[
		"onsuspend"
	],
	[
		"onsync"
	],
	[
		"ontimeupdate"
	],
	[
		"ontoggle"
	],
	[
		"ontouchcancel"
	],
	[
		"ontouchend"
	],
	[
		"ontouchmove"
	],
	[
		"ontouchstart"
	],
	[
		"ontransitioncancel"
	],
	[
		"ontransitionend"
	],
	[
		"ontransitionrun"
	],
	[
		"ontransitionstart"
	],
	[
		"onunhandledrejection"
	],
	[
		"onunhandledrejection"
	],
	[
		"onunload"
	],
	[
		"onvolumechange"
	],
	[
		"onwaiting"
	],
	[
		"onwebkitanimationend"
	],
	[
		"onwebkitanimationiteration"
	],
	[
		"onwebkitanimationstart"
	],
	[
		"onwebkittransitionend"
	],
	[
		"onwheel"
	],
	[
		"open()"
	],
	[
		"opener"
	],
	[
		"orientation"
	],
	[
		"origin"
	],
	[
		"origin"
	],
	[
		"originAgentCluster"
	],
	[
		"outerHeight"
	],
	[
		"outerWidth"
	],
	[
		"pageXOffset"
	],
	[
		"pageYOffset"
	],
	[
		"parent"
	],
	[
		"performance"
	],
	[
		"performance"
	],
	[
		"personalbar"
	],
	[
		"portalHost"
	],
	[
		"postMessage()"
	],
	[
		"postMessage()"
	],
	[
		"postMessage()"
	],
	[
		"print()"
	],
	[
		"prompt()"
	],
	[
		"queryLocalFonts()"
	],
	[
		"queueMicrotask()"
	],
	[
		"queueMicrotask()"
	],
	[
		"registration"
	],
	[
		"releaseEvents()"
	],
	[
		"reportError()"
	],
	[
		"reportError()"
	],
	[
		"requestAnimationFrame()"
	],
	[
		"requestAnimationFrame()"
	],
	[
		"requestIdleCallback()"
	],
	[
		"resizeBy()"
	],
	[
		"resizeTo()"
	],
	[
		"scheduler"
	],
	[
		"scheduler"
	],
	[
		"screen"
	],
	[
		"screenLeft"
	],
	[
		"screenTop"
	],
	[
		"screenX"
	],
	[
		"screenY"
	],
	[
		"scroll()"
	],
	[
		"scrollBy()"
	],
	[
		"scrollTo()"
	],
	[
		"scrollX"
	],
	[
		"scrollY"
	],
	[
		"scrollbars"
	],
	[
		"self"
	],
	[
		"self"
	],
	[
		"serviceWorker"
	],
	[
		"sessionStorage"
	],
	[
		"setInterval()"
	],
	[
		"setInterval()"
	],
	[
		"setTimeout()"
	],
	[
		"setTimeout()"
	],
	[
		"sharedStorage"
	],
	[
		"showDirectoryPicker()"
	],
	[
		"showOpenFilePicker()"
	],
	[
		"showSaveFilePicker()"
	],
	[
		"skipWaiting()"
	],
	[
		"speechSynthesis"
	],
	[
		"status"
	],
	[
		"statusbar"
	],
	[
		"stop()"
	],
	[
		"structuredClone()"
	],
	[
		"structuredClone()"
	],
	[
		"toolbar"
	],
	[
		"top"
	],
	[
		"trustedTypes"
	],
	[
		"trustedTypes"
	],
	[
		"viewport"
	],
	[
		"visualViewport"
	],
	[
		"window"
	]
]